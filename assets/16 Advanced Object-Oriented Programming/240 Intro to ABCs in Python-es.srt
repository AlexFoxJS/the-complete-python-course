1
00:00:00,240 --> 00:00:02,335
Jos: Hola, bienvenido de nuevo.

2
00:00:02,335 --> 00:00:05,280
En este video vamos a hablar rpidamente sobre ABC.

3
00:00:06,130 --> 00:00:08,811
Los ABC son bastante tiles

4
00:00:08,811 --> 00:00:13,010
en Python porque te permiten definir algunas funcionalidades

5
00:00:13,010 --> 00:00:14,320
sin implementarlas.

6
00:00:15,300 --> 00:00:19,331
Vamos a dejar a nuestros usuarios y administradores por un momento

7
00:00:19,331 --> 00:00:22,650
y crear un nuevo archivo que voy a llamar,

8
00:00:22,650 --> 00:00:24,220
"Animales" y este va

9
00:00:24,220 --> 00:00:27,970
a ser quizs un ejemplo no muy bueno sobre el

10
00:00:27,970 --> 00:00:30,727
uso de ABC en un proyecto real, sino

11
00:00:30,727 --> 00:00:34,580
solo un una visin general rpida de cmo funcionan, entonces vamos

12
00:00:34,580 --> 00:00:37,900
a utilizar el ABC en el resto de nuestro cdigo.

13
00:00:38,800 --> 00:00:42,530
Entonces, digamos que tenemos una clase Dog, por ejemplo,

14
00:00:42,530 --> 00:00:43,370
y esto,

15
00:00:44,990 --> 00:00:45,823
puedes inicializarlo

16
00:00:45,823 --> 00:00:47,730
con, digamos, un nombre y

17
00:00:47,730 --> 00:00:49,170
hay algo que

18
00:00:51,420 --> 00:00:54,621
todos los perros o al menos una gran

19
00:00:54,621 --> 00:00:57,930
mayora de ellos tienen en comn, que es

20
00:00:57,930 --> 00:00:59,590
el nmero de piernas,

21
00:00:59,590 --> 00:01:00,423
digamos.

22
00:01:03,780 --> 00:01:04,613
En un perro,

23
00:01:04,613 --> 00:01:07,780
digamos que esto va a devolver cuatro en todo momento.

24
00:01:10,480 --> 00:01:13,620
Por lo tanto, no es el mtodo ms til para

25
00:01:13,620 --> 00:01:16,500
cualquier clase, esto tambin podra ser una propiedad del

26
00:01:16,500 --> 00:01:19,230
perro o tal vez una variable de clase all,

27
00:01:19,230 --> 00:01:22,340
pero an as vamos a definirlo como este mtodo.

28
00:01:24,450 --> 00:01:27,180
Ahora, si quisieras definir otra clase,

29
00:01:28,072 --> 00:01:30,470
digamos un mono que tambin

30
00:01:32,550 --> 00:01:33,780
tenga, digamos, un

31
00:01:33,780 --> 00:01:34,830
nombre y

32
00:01:35,763 --> 00:01:38,390
tambin un num_legs, digamos que

33
00:01:39,930 --> 00:01:41,480
ahora devuelve dos.

34
00:01:42,790 --> 00:01:47,400
Tienes un pequeo problema.

35
00:01:47,400 --> 00:01:50,750
Antes dijimos que puedes extraer la funcionalidad en una

36
00:01:51,960 --> 00:01:53,600
clase como alguna clase

37
00:01:55,150 --> 00:01:56,620
Animal y definir alguna

38
00:01:56,620 --> 00:01:59,630
funcionalidad aqu y luego devolver algo y luego

39
00:01:59,630 --> 00:02:01,400
puedes hacer que Dog se

40
00:02:01,400 --> 00:02:02,900
extienda desde Animal y

41
00:02:02,900 --> 00:02:04,370
luego puedes eliminar este

42
00:02:05,800 --> 00:02:07,750
mtodo pero no puedes hacer

43
00:02:07,750 --> 00:02:09,760
lo mismo con el Mono

44
00:02:09,760 --> 00:02:12,400
porque el mono tiene dos patas, no cuatro.

45
00:02:13,570 --> 00:02:15,420
Entonces como haces esto?

46
00:02:16,551 --> 00:02:19,510
Bueno, aqu es donde entra en juego el ABC.

47
00:02:20,560 --> 00:02:22,520
Digamos que tiene un poco ms

48
00:02:22,520 --> 00:02:24,510
de funcionalidad para cada animal que

49
00:02:24,510 --> 00:02:26,500
quiera poner a disposicin de un Animal.

50
00:02:26,500 --> 00:02:28,714
Digamos, por ejemplo, un mtodo de caminar ', por supuesto, esto podra ser algo un

51
00:02:28,714 --> 00:02:31,699
y este mtodo de caminar que va a regresar poco ms til en un programa real, pero ahora eso

52
00:02:31,699 --> 00:02:33,936
o imprimir 'Caminar'. es solo un ejemplo.

53
00:02:33,936 --> 00:02:37,130
Ahora quiere que tanto su mono como su

54
00:02:37,130 --> 00:02:39,184
perro se extiendan desde Animal

55
00:02:39,184 --> 00:02:42,191
para que ambos puedan usar este mtodo

56
00:02:42,191 --> 00:02:44,860
pero no desea que el mtodo num_legs

57
00:02:44,860 --> 00:02:47,036
sea cuatro para ambos animales.

58
00:02:47,036 --> 00:02:50,338
Entonces, qu hacer es cortarlo de

59
00:02:50,338 --> 00:02:53,000
nuevo, por cierto, djeme decir

60
00:02:54,040 --> 00:02:57,670
que esto hara lo que quiera.

61
00:02:58,550 --> 00:02:59,383
Este estado

62
00:02:59,383 --> 00:03:02,020
actual del cdigo, que define num_legs en

63
00:03:02,020 --> 00:03:03,680
la clase Animal, el

64
00:03:03,680 --> 00:03:06,056
perro heredara ese Animal y devolvera cuatro.

65
00:03:06,056 --> 00:03:08,070
El Mono anulara el mtodo

66
00:03:08,070 --> 00:03:09,550
y devolvera dos, as

67
00:03:09,550 --> 00:03:11,520
que esto funciona, pero hay

68
00:03:11,520 --> 00:03:12,353
un problema

69
00:03:12,353 --> 00:03:13,280
que es

70
00:03:13,280 --> 00:03:15,460
que ahora puedes decir eso, puedes

71
00:03:15,460 --> 00:03:17,323
crear un nuevo Animal y

72
00:03:17,323 --> 00:03:18,583
luego puedes imprimir un. num_legs y eso

73
00:03:18,583 --> 00:03:21,110
es un poco raro porque no

74
00:03:22,880 --> 00:03:26,098
todos los animales tienen

75
00:03:26,098 --> 00:03:28,620
cuatro patas pero si ejecutas este

76
00:03:28,620 --> 00:03:31,247
archivo, vers que tu clase de Animal

77
00:03:31,247 --> 00:03:32,863
no es un animal

78
00:03:32,863 --> 00:03:37,863
especfico, no es un Perro, un Mono o un Gato, es solo esta

79
00:03:38,270 --> 00:03:40,260
clase abstracta de Animales devuelve

80
00:03:40,260 --> 00:03:42,270
cuatro para el nmero de

81
00:03:42,270 --> 00:03:44,983
patas que no tiene ningn sentido porque

82
00:03:44,983 --> 00:03:47,280
los animales no siempre tienen cuatro patas.

83
00:03:47,280 --> 00:03:48,120
Entonces, qu

84
00:03:48,120 --> 00:03:51,868
hacer es cortar eso y ponerlo de nuevo en el perro.

85
00:03:51,868 --> 00:03:53,512
Ahora, por supuesto,

86
00:03:53,512 --> 00:03:56,920
si decimos un es Animal e

87
00:03:58,953 --> 00:03:59,880
imprime a. num_legs, da un

88
00:03:59,880 --> 00:04:01,410
error porque dice, no s

89
00:04:01,410 --> 00:04:03,260
qu es eso.

90
00:04:03,260 --> 00:04:04,410
Entonces, est bien,

91
00:04:04,410 --> 00:04:05,710
pero si tienes

92
00:04:06,850 --> 00:04:10,620
un perro y un mono y, potencialmente, digamos una ballena.

93
00:04:10,620 --> 00:04:11,940
La Ballena tendr algn

94
00:04:11,940 --> 00:04:15,280
cdigo aqu y el Mono tendr algn cdigo aqu

95
00:04:18,239 --> 00:04:21,610
y el Perro tendr algn cdigo aqu y simplemente

96
00:04:22,580 --> 00:04:24,370
mirando la clase y el

97
00:04:24,370 --> 00:04:26,930
rbol de herencia, no sabrs si tienen

98
00:04:26,930 --> 00:04:29,280
un nmero de patas o no.

99
00:04:29,280 --> 00:04:30,930
La ballena probablemente no

100
00:04:30,930 --> 00:04:34,880
debera tener num_legs o tal vez debera ser 0.

101
00:04:36,240 --> 00:04:38,810
Tal vez las ballenas no deberan heredar de Animal

102
00:04:39,650 --> 00:04:41,280
debera heredar de otra cosa.

103
00:04:41,280 --> 00:04:43,520
Entonces, lo que quiero decir

104
00:04:43,520 --> 00:04:45,480
es solo al saber

105
00:04:45,480 --> 00:04:48,690
que estos dos son animales, no sabes

106
00:04:48,690 --> 00:04:49,970
que tienen nmeros,

107
00:04:49,970 --> 00:04:52,623
pero podra ser interesante que lo

108
00:04:52,623 --> 00:04:56,246
sepas, as que aqu viene el abecedario, hagmoslo

109
00:04:56,246 --> 00:04:59,750
desde ABC importando ABCMeta y abstractmethod y luego

110
00:04:59,750 --> 00:05:04,620
vamos a hacer que nuestra clase Animal herede, pero de una

111
00:05:06,160 --> 00:05:07,749
manera ligeramente diferente de ABCMeta.

112
00:05:07,749 --> 00:05:10,176
Ahora, ABCMeta es una clase

113
00:05:10,176 --> 00:05:14,070
real pero nos permite algunas cosas que las

114
00:05:15,400 --> 00:05:18,566
clases normales no nos permiten hacer

115
00:05:18,566 --> 00:05:21,970
y eso es usar este mtodo abstracto.

116
00:05:21,970 --> 00:05:23,980
Ahora, una de las mejores

117
00:05:23,980 --> 00:05:27,520
cosas de tener esta clase base abstracta, esto es lo

118
00:05:27,520 --> 00:05:29,120
que ABC significa, clase

119
00:05:29,120 --> 00:05:31,250
base abstracta, es que podemos hacer

120
00:05:31,250 --> 00:05:32,380
un mtodo abstracto

121
00:05:32,380 --> 00:05:34,620
y luego definir nuestro mtodo num_legs

122
00:05:34,620 --> 00:05:36,792
y luego hacer algo como pasar.

123
00:05:36,792 --> 00:05:40,330
Bueno, ahora hemos definido este mtodo abstracto y

124
00:05:42,656 --> 00:05:44,760
hemos dicho que Animal tiene

125
00:05:48,430 --> 00:05:51,270
este mtodo, pero no se trata de

126
00:05:51,270 --> 00:05:55,220
un animal especfico en el mundo, es un poco

127
00:05:55,220 --> 00:06:00,220
abstracto, no se refiere a nada concreto, entonces es el responsabilidad de

128
00:06:00,650 --> 00:06:02,680
las clases de nios, como

129
00:06:02,680 --> 00:06:05,806
Dog and Monkey para implementar ese mtodo.

130
00:06:05,806 --> 00:06:09,090
Ahora, si ejecutamos este cdigo, si ejecutamos

131
00:06:09,090 --> 00:06:12,765
Animals, obtenemos un error y dice, "No se

132
00:06:12,765 --> 00:06:15,610
pueden crear instancias de Animales de

133
00:06:15,610 --> 00:06:17,230
la clase abstracta" con

134
00:06:17,230 --> 00:06:18,759
mtodos abstractos num_legs. "Python no te permite

135
00:06:18,759 --> 00:06:21,866
crear un objeto de tipo Animal ms porque

136
00:06:21,866 --> 00:06:25,320
se da cuenta de

137
00:06:25,320 --> 00:06:27,550
que un Animal no es una

138
00:06:27,550 --> 00:06:29,620
cosa en tu programa, un

139
00:06:29,620 --> 00:06:32,408
animal es algo que has usado para

140
00:06:32,408 --> 00:06:34,050
extraer funcionalidad y darte

141
00:06:34,050 --> 00:06:36,140
un poco de informacin, pero

142
00:06:36,140 --> 00:06:39,665
es no es algo con lo que quieras interactuar directamente.

143
00:06:39,665 --> 00:06:40,900
Por lo tanto, no permite crear

144
00:06:40,900 --> 00:06:42,900
una instancia de una clase Animal porque no tiene sentido hacerlo.

145
00:06:43,840 --> 00:06:47,061
Instancias de animales especficos, como Perros

146
00:06:47,061 --> 00:06:50,280
o Monos, as es como usas

147
00:06:50,280 --> 00:06:52,260
un ABC, una clase

148
00:06:52,260 --> 00:06:53,600
base abstracta

149
00:06:55,280 --> 00:06:58,420
y cmo defines un mtodo abstracto.

150
00:06:58,420 --> 00:07:00,410
Si alguna de sus subclases

151
00:07:00,410 --> 00:07:03,220
no se implementa en el mtodo abstracto,

152
00:07:03,220 --> 00:07:05,520
tampoco podr crear objetos, por lo

153
00:07:05,520 --> 00:07:06,520
que si

154
00:07:06,520 --> 00:07:09,860
elimina esto de la clase Perro y luego

155
00:07:09,860 --> 00:07:13,830
intenta crear un Perro y luego imprime num_legs, no lo

156
00:07:13,830 --> 00:07:15,290
har permitmoslo, as que

157
00:07:21,270 --> 00:07:23,110
borremos eso, ejecutemos Animals

158
00:07:24,670 --> 00:07:26,390
otra vez y diga

159
00:07:26,390 --> 00:07:27,500
que no puede

160
00:07:27,500 --> 00:07:29,020
hacer eso, pero tan

161
00:07:29,020 --> 00:07:30,582
pronto como tenga este

162
00:07:30,582 --> 00:07:35,110
mtodo aqu y lo ejecute, ahora puede y recupera cuatro.

163
00:07:37,450 --> 00:07:38,283
Por lo tanto,

164
00:07:38,283 --> 00:07:40,240
las clases base abstractas pueden ser

165
00:07:41,840 --> 00:07:44,370
bastante tiles en varios escenarios para que sepas

166
00:07:44,370 --> 00:07:46,610
que las subclases tendrn este mtodo.

167
00:07:46,610 --> 00:07:50,170
Entonces, cuando tenga una subclase de tipo Animal,

168
00:07:50,170 --> 00:07:51,952
este mtodo estar disponible.

169
00:07:51,952 --> 00:07:56,130
Ampliemos un poco sobre por qu esto es til

170
00:07:56,130 --> 00:07:58,082
en el siguiente video.

171
00:07:58,082 --> 00:08:01,789
Te ver all.

172
00:08:01,789 --> 00:08:04,690
&nbsp;

173
00:08:04,690 --> 00:08:05,740
&nbsp;

