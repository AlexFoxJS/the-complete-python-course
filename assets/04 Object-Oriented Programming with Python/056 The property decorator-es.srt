1
00:00:00,520 --> 00:00:01,450
Instructor: Hola bienvenido.

2
00:00:01,450 --> 00:00:04,020
En este video estamos tomando propiedades.

3
00:00:05,130 --> 00:00:07,020
Recuerde cmo mencionamos que los

4
00:00:07,020 --> 00:00:09,940
valores definidos aqu en el constructor en el

5
00:00:09,940 --> 00:00:12,970
mtodo init, estos se llaman propiedades porque el

6
00:00:12,970 --> 00:00:16,440
objeto tiene este valor ahora definido dentro de l.

7
00:00:16,440 --> 00:00:19,840
Nombre, escuela, calificaciones y salario.

8
00:00:20,730 --> 00:00:22,300
De hecho, cuando creamos un

9
00:00:22,300 --> 00:00:25,315
objeto, podemos imprimir rolf. salario.

10
00:00:25,315 --> 00:00:27,774
Y lo que esto nos dice es que

11
00:00:27,774 --> 00:00:30,490
estamos accediendo a un valor dentro del objeto.

12
00:00:31,630 --> 00:00:33,310
En cuanto queramos acceder a

13
00:00:33,310 --> 00:00:35,280
una funcin, debemos llamar a la

14
00:00:35,280 --> 00:00:37,140
funcin incluyendo los corchetes al final.

15
00:00:38,037 --> 00:00:40,810
Y todo esto est bien,

16
00:00:40,810 --> 00:00:43,294
pero, por ejemplo, pensemos

17
00:00:43,294 --> 00:00:46,600
en el salario semanal, borremos eso.

18
00:00:46,600 --> 00:00:48,610
Pienso en el salario semanal de Rolf.

19
00:00:50,080 --> 00:00:52,180
Hemos aprendido en el pasado que las

20
00:00:52,180 --> 00:00:53,900
funciones y, por lo tanto, los

21
00:00:53,900 --> 00:00:55,920
mtodos, dado que son solo funciones dentro

22
00:00:55,920 --> 00:00:59,950
de una clase, son piezas de cdigo que hacen algo, realizan una accin.

23
00:01:01,590 --> 00:01:03,550
Sin embargo, el mtodo de

24
00:01:03,550 --> 00:01:07,320
salario semanal no funciona y las acciones, simplemente calcula un valor.

25
00:01:08,290 --> 00:01:12,105
Entonces sera bastante bueno si pudiramos tener

26
00:01:12,105 --> 00:01:14,430
un salario semanal como ese.

27
00:01:14,430 --> 00:01:17,170
Rolf, el salario semanal, ya no es una funcin.

28
00:01:17,170 --> 00:01:19,474
Ahora es solo una propiedad del

29
00:01:19,474 --> 00:01:21,870
objeto porque no hay accin por hacer.

30
00:01:21,870 --> 00:01:23,630
No es como decirle a Rolf,

31
00:01:23,630 --> 00:01:25,670
ya sabes, ir a trabajar o hacer algo.

32
00:01:25,670 --> 00:01:28,550
Solo estamos obteniendo un valor del objeto.

33
00:01:30,100 --> 00:01:32,495
Y solo puedes hacer esto cuando

34
00:01:32,495 --> 00:01:37,495
la funcin no tome ningn argumento que no sea uno mismo, est bien.

35
00:01:37,560 --> 00:01:40,398
Si la funcin solo tiene un auto argumento y

36
00:01:40,398 --> 00:01:43,650
la funcin no es la que hace las cosas, sino

37
00:01:43,650 --> 00:01:45,390
que simplemente calcula un valor basado

38
00:01:45,390 --> 00:01:47,560
en las propiedades de uno mismo, creo

39
00:01:49,040 --> 00:01:53,330
que esto empieza a tener sentido para hacerlo de esta manera, porque ahora ests

40
00:01:53,330 --> 00:01:55,420
accediendo al semanal salario y ya sabes,

41
00:01:55,420 --> 00:01:57,730
no te importa si eso est calculado.

42
00:01:57,730 --> 00:02:00,230
Y no te importa si eso es solo esttico.

43
00:02:00,230 --> 00:02:03,550
Ya sabes, este salario semanal es el salario semanal de Rolf.

44
00:02:03,550 --> 00:02:05,560
Y si eso cambia porque aumentas el

45
00:02:05,560 --> 00:02:07,260
salario est bien, lo sabes.

46
00:02:07,260 --> 00:02:08,670
No necesariamente te importa

47
00:02:08,670 --> 00:02:11,750
eso, solo te importa que obtengas el valor correcto.

48
00:02:11,750 --> 00:02:14,470
Entonces, obviamente, si hacemos esto, no va a funcionar porque

49
00:02:14,470 --> 00:02:16,140
Python va a esperar el rango

50
00:02:16,140 --> 00:02:17,300
de apertura y cierre.

51
00:02:17,300 --> 00:02:19,180
Vamos a ejecutarlo y te mostrar.

52
00:02:20,870 --> 00:02:23,810
Vea ahora lo que obtenemos es un

53
00:02:23,810 --> 00:02:26,930
mtodo obligado WorkingStudent. weekly_salary del objeto WorkingStudent.

54
00:02:26,930 --> 00:02:28,110
Lo que esto nos

55
00:02:28,110 --> 00:02:31,520
dice es que lo que hemos impreso es este mtodo.

56
00:02:31,520 --> 00:02:34,643
Imprimimos la definicin de este mtodo.

57
00:02:34,643 --> 00:02:36,960
Dentro de l tenemos, ya sabes, la

58
00:02:36,960 --> 00:02:39,150
direccin de memoria del objeto y dems.

59
00:02:39,150 --> 00:02:41,261
Si queremos hacer esto, tenemos

60
00:02:41,261 --> 00:02:44,470
que usar lo que se llama el delarador.

61
00:02:44,470 --> 00:02:48,170
Y este es un declarador muy popular llamado @property.

62
00:02:48,170 --> 00:02:50,842
El declarador @property convierte este mtodo en

63
00:02:50,842 --> 00:02:53,880
algo que se puede usar como tal.

64
00:02:56,710 --> 00:02:59,750
Ahora tenemos 581. 25, y recuerda que

65
00:02:59,750 --> 00:03:02,061
no hemos agregado los corchetes.

66
00:03:02,061 --> 00:03:03,810
Entonces, este es un decalador, vamos a

67
00:03:03,810 --> 00:03:04,900
ver a los declaradores ms

68
00:03:04,900 --> 00:03:06,530
adelante en el curso, no solo ahora.

69
00:03:06,530 --> 00:03:08,915
Solo quera presentar este declarador aqu, porque es

70
00:03:08,915 --> 00:03:10,740
una buena forma de, ya sabes,

71
00:03:10,740 --> 00:03:12,830
agregar algunas cosas avanzadas de Python a

72
00:03:12,830 --> 00:03:14,780
medida que avanzamos en el curso.

73
00:03:14,780 --> 00:03:16,446
Esto no es algo terriblemente

74
00:03:16,446 --> 00:03:19,250
complejo, aunque entender la forma en que trabajan

75
00:03:19,250 --> 00:03:22,130
los declaradores es ms complejo, no necesitamos hacerlo ahora.

76
00:03:22,130 --> 00:03:23,680
Vamos a ver eso ms adelante.

77
00:03:23,680 --> 00:03:26,850
Y quiero que empieces a estar ms avanzado.

78
00:03:26,850 --> 00:03:29,840
As es como puede cambiar un mtodo

79
00:03:29,840 --> 00:03:34,840
simple sin argumento en una propiedad, o algo a lo que

80
00:03:35,120 --> 00:03:36,410
se puede acceder

81
00:03:36,410 --> 00:03:38,100
como si fuera propiedad.

82
00:03:39,450 --> 00:03:41,320
Y eso es genial porque

83
00:03:41,320 --> 00:03:43,760
ahora sabemos que no va a surgir

84
00:03:43,760 --> 00:03:47,000
ninguna accin como resultado del uso de esta propiedad.

85
00:03:47,000 --> 00:03:49,960
Solo sabemos que este es un valor que estamos obteniendo.

86
00:03:49,960 --> 00:03:52,370
Una vez ms, enfatizo esto importante.

87
00:03:52,370 --> 00:03:55,960
Si est realizando una accin, como conectarse a una base

88
00:03:55,960 --> 00:03:59,000
de datos o abrir un archivo, o, ya

89
00:03:59,000 --> 00:04:00,774
sabe, comunicarse con algn tipo

90
00:04:00,774 --> 00:04:03,380
de servicio web, o est interactuando con

91
00:04:03,380 --> 00:04:05,080
otro objeto, o cualquier cosa,

92
00:04:05,080 --> 00:04:08,730
cualquier accin, no use el @ declarante de la propiedad

93
00:04:08,730 --> 00:04:11,082
selo solo cuando est

94
00:04:11,082 --> 00:04:14,560
calculando valores de las propiedades del objeto.

95
00:04:15,500 --> 00:04:17,050
De acuerdo, es para este video,

96
00:04:17,050 --> 00:04:18,680
y te ver en el siguiente.

