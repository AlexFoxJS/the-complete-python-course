1
00:00:00,000 --> 00:00:01,730
<v Instructor>Hi there, and welcome back.</v>

2
00:00:01,730 --> 00:00:05,470
In this video, we're looking at importing our own files.

3
00:00:05,470 --> 00:00:07,030
Importing just means,

4
00:00:07,030 --> 00:00:09,200
allowing a file we're currently working on

5
00:00:09,200 --> 00:00:12,186
to use code defined in some other file.

6
00:00:12,186 --> 00:00:15,200
And we've done this with the JSON module in the last video

7
00:00:15,200 --> 00:00:16,410
and that just meant

8
00:00:16,410 --> 00:00:20,040
getting the code in that module available for us to use.

9
00:00:20,040 --> 00:00:21,740
Now it's time to import code

10
00:00:21,740 --> 00:00:23,560
that us ourselves have written.

11
00:00:24,420 --> 00:00:26,350
That way, we'll be able to split our programmes

12
00:00:26,350 --> 00:00:27,810
into multiple files,

13
00:00:27,810 --> 00:00:29,850
and that's of course going to help

14
00:00:29,850 --> 00:00:32,310
because our programme will have better organisation,

15
00:00:32,310 --> 00:00:35,230
and when it comes to changing it and improving it,

16
00:00:35,230 --> 00:00:36,920
it's gonna be a bit easier.

17
00:00:36,920 --> 00:00:38,940
Let's start by creating a new file

18
00:00:38,940 --> 00:00:40,260
inside our Python project,

19
00:00:40,260 --> 00:00:42,400
after the new Python project here

20
00:00:42,400 --> 00:00:43,710
and I'm going to call it

21
00:00:44,740 --> 00:00:46,330
File Operations.

22
00:00:46,330 --> 00:00:48,210
So that's file underscore operations.

23
00:00:48,210 --> 00:00:50,320
Remember, don't put any spaces in file names,

24
00:00:50,320 --> 00:00:51,500
that's a recipe for disaster

25
00:00:51,500 --> 00:00:53,250
in pretty much any computer

26
00:00:53,250 --> 00:00:55,678
but especially when working with Python.

27
00:00:55,678 --> 00:00:56,980
Now, inside this file,

28
00:00:56,980 --> 00:00:58,730
we're gonna write a couple of functions.

29
00:00:58,730 --> 00:01:01,280
One, to save some content with file,

30
00:01:01,280 --> 00:01:03,830
and the other one to read some content from a file.

31
00:01:04,670 --> 00:01:06,070
So, save to file.

32
00:01:06,070 --> 00:01:07,470
The content we want to write

33
00:01:07,470 --> 00:01:08,490
is gonna be the first parameter

34
00:01:08,490 --> 00:01:10,540
and the file name is going to be the second parameter,

35
00:01:10,540 --> 00:01:13,320
and all it's gonna do is use a context manager

36
00:01:13,320 --> 00:01:15,560
to open the file and then write the content.

37
00:01:16,720 --> 00:01:19,120
And then Read File is gonna be pretty similar.

38
00:01:19,120 --> 00:01:21,040
It's gonna take the file name

39
00:01:21,040 --> 00:01:24,350
and it's gonna use a context manager to open the file

40
00:01:24,350 --> 00:01:27,380
and read the contents out fully as a single string

41
00:01:27,380 --> 00:01:28,240
and return them.

42
00:01:29,110 --> 00:01:30,610
Now, I think you can implement this,

43
00:01:30,610 --> 00:01:32,170
knowing what you know already.

44
00:01:32,170 --> 00:01:34,330
If you have to look at the code for the section,

45
00:01:34,330 --> 00:01:37,140
make sure to not look at the imports project

46
00:01:37,140 --> 00:01:38,700
which is also available on GitHub

47
00:01:38,700 --> 00:01:41,140
but look at the other file we've already written

48
00:01:41,140 --> 00:01:43,140
and then implement these functions using

49
00:01:43,140 --> 00:01:44,710
what you already know.

50
00:01:44,710 --> 00:01:45,830
Don't copy and paste code,

51
00:01:45,830 --> 00:01:47,060
just type it out.

52
00:01:47,060 --> 00:01:48,620
And once you've done that,

53
00:01:48,620 --> 00:01:50,870
come back to the video and we shall continue.

54
00:01:55,250 --> 00:01:56,530
I hope you managed.

55
00:01:56,530 --> 00:01:58,866
All we have to do is use a context manager to open

56
00:01:58,866 --> 00:02:00,680
the file name

57
00:02:01,610 --> 00:02:03,630
in write mode.

58
00:02:03,630 --> 00:02:04,740
Then what we're going to do

59
00:02:04,740 --> 00:02:08,140
is say file dot write, content.

60
00:02:08,140 --> 00:02:10,540
Oh sorry, of course you need as file in there

61
00:02:11,540 --> 00:02:13,220
in order to have a variable.

62
00:02:13,220 --> 00:02:14,710
This is optional by the way,

63
00:02:14,710 --> 00:02:16,650
but then you don't have anything pointing

64
00:02:16,650 --> 00:02:18,160
to whatever you opened

65
00:02:18,160 --> 00:02:19,570
and then you cannot write to it

66
00:02:19,570 --> 00:02:22,020
if you don't have a variable that points to open.

67
00:02:22,920 --> 00:02:24,310
Then of course for the greeting

68
00:02:24,310 --> 00:02:26,140
we're gonna do open of file name

69
00:02:26,140 --> 00:02:27,640
but this time in reading mode.

70
00:02:28,710 --> 00:02:31,580
What we're gonna do it file dot read.

71
00:02:31,580 --> 00:02:33,541
Notice how this is not gonna give us

72
00:02:33,541 --> 00:02:35,980
the lines or anything like that

73
00:02:35,980 --> 00:02:38,690
but this is going to be one long string

74
00:02:38,690 --> 00:02:41,180
that could contain things like this.

75
00:02:44,050 --> 00:02:45,290
See?

76
00:02:45,290 --> 00:02:48,380
Now if we wanted lines after it,

77
00:02:48,380 --> 00:02:49,900
we can

78
00:02:49,900 --> 00:02:52,170
split on the back slash n

79
00:02:52,170 --> 00:02:54,070
dot split.

80
00:02:54,070 --> 00:02:57,620
Back slash n is going to give us something like this.

81
00:02:57,620 --> 00:03:01,240
Rolf, Charlie, and so forth.

82
00:03:01,240 --> 00:03:02,840
So this is going to give us one long string.

83
00:03:02,840 --> 00:03:05,380
We can then split it into lines if we want.

84
00:03:05,380 --> 00:03:07,890
If your file is extremely long,

85
00:03:07,890 --> 00:03:09,530
you may have some problems with reading

86
00:03:09,530 --> 00:03:11,520
the entire file at once.

87
00:03:11,520 --> 00:03:14,675
But, let's forget about this problem for now.

88
00:03:14,675 --> 00:03:17,220
There is some relatively simple stuff,

89
00:03:17,220 --> 00:03:18,660
writing to a file and reading from it,

90
00:03:18,660 --> 00:03:19,890
we've already done this.

91
00:03:19,890 --> 00:03:21,280
But it's going to be useful as an example

92
00:03:21,280 --> 00:03:23,730
to look into importing any lead.

93
00:03:23,730 --> 00:03:27,680
This is essentially our first library.

94
00:03:28,720 --> 00:03:31,830
This library, we're going to import these two files,

95
00:03:31,830 --> 00:03:32,880
these two functions,

96
00:03:32,880 --> 00:03:34,340
and we're going to now very easily

97
00:03:34,340 --> 00:03:36,640
save things to a file and read them from a file

98
00:03:36,640 --> 00:03:39,600
without having to worry about opening them.

99
00:03:39,600 --> 00:03:41,870
Let's create a new file in our imports project

100
00:03:41,870 --> 00:03:43,140
called app dot UI.

101
00:03:44,510 --> 00:03:47,360
And now, we're going to import the things

102
00:03:47,360 --> 00:03:48,900
from file operations.

103
00:03:50,490 --> 00:03:52,130
There are two ways that we can do that.

104
00:03:52,130 --> 00:03:54,730
The first one is we can import file operations.

105
00:03:55,770 --> 00:03:59,430
And then we can do file operations dot save to file

106
00:04:00,420 --> 00:04:04,730
whatever we want to say, Rolf and data dot txt,

107
00:04:04,730 --> 00:04:05,563
for example.

108
00:04:06,400 --> 00:04:10,990
We can do this, call the file operations module.

109
00:04:10,990 --> 00:04:14,050
Whenever you import something, by the way,

110
00:04:15,150 --> 00:04:19,280
the thing you're importing is now called a module.

111
00:04:19,280 --> 00:04:22,250
And it is executed in module mode,

112
00:04:22,250 --> 00:04:26,140
which is essentially the same as executing it in normal mode

113
00:04:26,140 --> 00:04:27,820
or script mode,

114
00:04:27,820 --> 00:04:30,620
but there are some minor differences

115
00:04:30,620 --> 00:04:32,130
that we're going to look at in a moment.

116
00:04:32,130 --> 00:04:35,000
So whenever you import something, that same module,

117
00:04:35,000 --> 00:04:36,370
whenever you run something,

118
00:04:36,370 --> 00:04:37,920
like if you run app dot UI,

119
00:04:37,920 --> 00:04:39,810
that's called a script.

120
00:04:39,810 --> 00:04:41,731
Now normally you'll have one script,

121
00:04:41,731 --> 00:04:42,650
that's app UI,

122
00:04:42,650 --> 00:04:44,000
and a bunch of modules,

123
00:04:44,000 --> 00:04:46,710
and that's everything else that you import.

124
00:04:46,710 --> 00:04:48,030
File operations is a module

125
00:04:48,030 --> 00:04:50,780
and then we're accessing inside of it with a dot,

126
00:04:50,780 --> 00:04:52,750
the save to file function.

127
00:04:52,750 --> 00:04:55,280
And to it we gave the two arguments that it needs.

128
00:04:55,280 --> 00:04:57,160
The content that we wanna save

129
00:04:57,160 --> 00:04:59,560
and the file name.

130
00:04:59,560 --> 00:05:02,680
So let's right click app dot UI and run it.

131
00:05:02,680 --> 00:05:03,950
Notice how nothing happens,

132
00:05:03,950 --> 00:05:07,040
but data dot txt does get created

133
00:05:07,040 --> 00:05:08,500
and Rolf is in it.

134
00:05:08,500 --> 00:05:10,800
This file has been closed as well

135
00:05:10,800 --> 00:05:13,590
because the save the file function in file operations

136
00:05:13,590 --> 00:05:15,160
has this context manager

137
00:05:15,160 --> 00:05:17,660
which closes a file at the end.

138
00:05:17,660 --> 00:05:19,040
So this is pretty cool.

139
00:05:19,040 --> 00:05:21,720
I mean, in a single line now,

140
00:05:21,720 --> 00:05:23,610
because we've got out library here,

141
00:05:23,610 --> 00:05:26,200
we are opening, saving, and closing the file

142
00:05:26,200 --> 00:05:29,070
without having to worry about doing that manually.

143
00:05:30,660 --> 00:05:31,493
The other option,

144
00:05:31,493 --> 00:05:33,370
I said that there were two options for importing,

145
00:05:33,370 --> 00:05:38,370
is to do from file operations import save to file.

146
00:05:38,540 --> 00:05:41,260
And then, the save to file is what becomes

147
00:05:41,260 --> 00:05:43,880
the globally available thing in this script

148
00:05:43,880 --> 00:05:46,320
and you can just run that.

149
00:05:46,320 --> 00:05:48,090
Save to file directly.

150
00:05:48,090 --> 00:05:49,840
Of course, this is not so good,

151
00:05:49,840 --> 00:05:51,870
if you are importing from many places

152
00:05:51,870 --> 00:05:54,000
and two things have the same name.

153
00:05:54,000 --> 00:05:55,130
It can happen,

154
00:05:55,130 --> 00:05:57,180
then of course Python would be very confused

155
00:05:57,180 --> 00:05:59,130
and you would only ever be able to use

156
00:05:59,130 --> 00:06:01,600
the one you imported last.

157
00:06:01,600 --> 00:06:03,730
So if you have things with multiple,

158
00:06:03,730 --> 00:06:05,210
multiple things with the same name,

159
00:06:05,210 --> 00:06:07,820
use the former, import file operations.

160
00:06:07,820 --> 00:06:09,770
If you only have a couple of things

161
00:06:09,770 --> 00:06:11,150
you want to import and use,

162
00:06:11,150 --> 00:06:13,610
feel free to import them like this.

163
00:06:13,610 --> 00:06:14,790
At the end of the day, it's up to you

164
00:06:14,790 --> 00:06:16,840
to do whatever you feel is more readable.

165
00:06:18,070 --> 00:06:20,850
Now, we can also have a comma after it

166
00:06:20,850 --> 00:06:22,800
and import right to file,

167
00:06:22,800 --> 00:06:24,440
or read file, sorry.

168
00:06:24,440 --> 00:06:26,380
Save to file or right to file, same thing.

169
00:06:26,380 --> 00:06:29,170
Read file, and then we can print the read file

170
00:06:29,170 --> 00:06:31,690
of data dot txt.

171
00:06:31,690 --> 00:06:33,420
Let's run that again,

172
00:06:33,420 --> 00:06:36,200
and now we get Rolf printed out down here at the bottom.

173
00:06:36,200 --> 00:06:38,400
And because we've saved Rolf to data dot txt,

174
00:06:38,400 --> 00:06:40,450
and then we've read it and printed it out.

175
00:06:40,450 --> 00:06:42,740
Notice how the file is opened and then closed,

176
00:06:42,740 --> 00:06:45,070
and opened and then closed in every function.

177
00:06:47,600 --> 00:06:49,060
Now in a larger application

178
00:06:49,060 --> 00:06:51,970
we will start separating our files into folders

179
00:06:51,970 --> 00:06:53,720
so that things are more organised

180
00:06:53,720 --> 00:06:55,860
and it's easier to find what we need.

181
00:06:55,860 --> 00:06:57,410
If all your Python files,

182
00:06:57,410 --> 00:06:59,490
potentially many hundreds of them,

183
00:06:59,490 --> 00:07:02,410
would be in the same import project folder,

184
00:07:02,410 --> 00:07:04,030
you would have a lot of trouble

185
00:07:04,030 --> 00:07:05,800
finding the things you want

186
00:07:05,800 --> 00:07:07,850
and it would get very messy very quickly.

187
00:07:08,960 --> 00:07:12,210
So instead, you normally would create a new directory.

188
00:07:13,130 --> 00:07:16,470
I'm gonna call it something like utils for utilities.

189
00:07:16,470 --> 00:07:19,590
File operations is gonna be part of such utilities.

190
00:07:20,840 --> 00:07:23,600
Let's drag file operations into utils,

191
00:07:23,600 --> 00:07:26,290
and if you get asked to search for references,

192
00:07:26,290 --> 00:07:28,060
make sure to not check it

193
00:07:28,060 --> 00:07:29,780
for that is going to completely

194
00:07:29,780 --> 00:07:32,030
moot the point that I am about to show you.

195
00:07:32,030 --> 00:07:33,340
So don't search for references,

196
00:07:33,340 --> 00:07:34,550
and press okay.

197
00:07:35,720 --> 00:07:37,790
Now, we see a couple of things.

198
00:07:37,790 --> 00:07:40,220
File operations has moved into utils,

199
00:07:40,220 --> 00:07:42,460
and red lines have appeared everywhere.

200
00:07:42,460 --> 00:07:45,230
Of course, this is now an unresolved reference.

201
00:07:45,230 --> 00:07:47,670
It doesn't know what file operations is

202
00:07:47,670 --> 00:07:50,300
because it's no longer in the same directory

203
00:07:50,300 --> 00:07:51,340
as app dot UI.

204
00:07:52,350 --> 00:07:54,950
In fact, I'll even go as far as saying

205
00:07:54,950 --> 00:07:58,250
it's not in the same directory imports project

206
00:07:58,250 --> 00:08:01,400
which is the top level directory of our project.

207
00:08:01,400 --> 00:08:03,150
So you can only do this

208
00:08:03,150 --> 00:08:05,580
from file operations import something.

209
00:08:05,580 --> 00:08:08,360
If file operations is a module

210
00:08:08,360 --> 00:08:11,360
available on the top level of your project.

211
00:08:12,370 --> 00:08:13,900
Okay.

212
00:08:13,900 --> 00:08:15,920
Because now it's inside utils,

213
00:08:15,920 --> 00:08:17,370
we cannot do this.

214
00:08:17,370 --> 00:08:19,187
So what can we do?

215
00:08:19,187 --> 00:08:23,410
Well, we can run the file, first of all,

216
00:08:23,410 --> 00:08:25,720
to see that we get a module not found error.

217
00:08:25,720 --> 00:08:27,440
Just wanted to show you that this is what you get

218
00:08:27,440 --> 00:08:30,030
if you import something that doesn't exist.

219
00:08:30,030 --> 00:08:32,461
And we must do two things.

220
00:08:32,461 --> 00:08:37,461
We must, first of all, give Python the full path to import

221
00:08:38,060 --> 00:08:40,700
starting from the top level folder.

222
00:08:40,700 --> 00:08:44,570
So the full path is utils and inside utils

223
00:08:44,570 --> 00:08:46,720
we've got file operations.

224
00:08:46,720 --> 00:08:49,650
So, utils and inside utils

225
00:08:49,650 --> 00:08:52,630
and we say dot with file operations.

226
00:08:53,830 --> 00:08:54,850
There we have it.

227
00:08:54,850 --> 00:08:57,910
Now we've got utils inside file operations

228
00:08:57,910 --> 00:09:00,330
and we can import these two things.

229
00:09:00,330 --> 00:09:01,600
Now it works.

230
00:09:02,858 --> 00:09:04,478
Frequently though,

231
00:09:04,478 --> 00:09:06,940
it is a good idea to tell Python

232
00:09:06,940 --> 00:09:09,110
that the utils package,

233
00:09:09,110 --> 00:09:13,610
the utils directory here is actually a Python package.

234
00:09:13,610 --> 00:09:16,100
And I'm not sure, actually not sure

235
00:09:16,100 --> 00:09:16,933
if this has changed recently in Python

236
00:09:16,933 --> 00:09:19,750
but it used to be that you would have to tell Python

237
00:09:19,750 --> 00:09:21,620
this is a Python package

238
00:09:22,530 --> 00:09:24,770
before you could import things from it

239
00:09:24,770 --> 00:09:27,020
and maybe it's no longer required, but nonetheless,

240
00:09:27,020 --> 00:09:29,100
for compliance with previous Python versions,

241
00:09:29,100 --> 00:09:31,810
it's always a good idea to tell Python

242
00:09:31,810 --> 00:09:33,940
that this folder, this directory,

243
00:09:33,940 --> 00:09:35,296
is a Python package

244
00:09:35,296 --> 00:09:38,150
and it's a folder where Python files live

245
00:09:38,150 --> 00:09:40,810
and where you want to import.

246
00:09:40,810 --> 00:09:42,340
The way to do that is right click it

247
00:09:42,340 --> 00:09:44,140
and create a new Python file

248
00:09:44,140 --> 00:09:45,090
and it must be called

249
00:09:45,090 --> 00:09:50,090
underscore underscore in it underscore underscore dot PUI.

250
00:09:50,130 --> 00:09:51,890
That's two underscores at the start,

251
00:09:51,890 --> 00:09:54,180
two underscores at the end dot UI.

252
00:09:55,080 --> 00:09:55,913
You can close that file

253
00:09:55,913 --> 00:09:57,870
for we do not need to write anything in it,

254
00:09:57,870 --> 00:09:59,940
but this is just what you should do

255
00:09:59,940 --> 00:10:02,380
for compliance with older Python versions.

256
00:10:03,380 --> 00:10:04,213
Okay.

257
00:10:06,130 --> 00:10:11,110
So now this directory here is called a package.

258
00:10:11,110 --> 00:10:13,920
So that Python knows it can import things from there

259
00:10:13,920 --> 00:10:16,510
at least in older versions, okay.

260
00:10:16,510 --> 00:10:19,110
And this is how you give the full path to Python

261
00:10:19,110 --> 00:10:23,550
so that it knows where to look for your file.

262
00:10:25,250 --> 00:10:26,200
So that's it for this video.

263
00:10:26,200 --> 00:10:28,300
We've looked at importing our own files.

264
00:10:28,300 --> 00:10:29,980
We're going to look at relative imports

265
00:10:29,980 --> 00:10:31,440
in the very next video.

266
00:10:31,440 --> 00:10:32,390
I'll see you there.

