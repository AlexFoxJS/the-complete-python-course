1
00:00:00,270 --> 00:00:01,530
Instructor: Hola, y bienvenido.

2
00:00:01,530 --> 00:00:04,990
En este video estamos viendo archivos CSV.

3
00:00:04,990 --> 00:00:06,790
A veces necesitamos almacenar datos

4
00:00:06,790 --> 00:00:09,370
ms complejos en un archivo, en lugar de

5
00:00:09,370 --> 00:00:11,670
solo cadenas simples, como hemos estado viendo.

6
00:00:11,670 --> 00:00:13,930
Y un archivo CSV es solo la manera de hacerlo.

7
00:00:13,930 --> 00:00:16,100
Cuando necesita almacenar datos un poco

8
00:00:16,100 --> 00:00:19,550
ms complejos, pero tal vez no necesariamente demasiado complejos. todava estamos almacenando una cosa por lnea, realmente,

9
00:00:19,550 --> 00:00:21,530
En lugar de almacenar una pero ahora la cosa

10
00:00:21,530 --> 00:00:24,120
cosa por lnea, ahora. tiene comas all. Y luego, lo que

11
00:00:24,120 --> 00:00:27,690
vamos a hacer es dividir la lnea por la coma, y

12
00:00:27,690 --> 00:00:29,320
eso nos dar mltiples datos.

13
00:00:29,320 --> 00:00:31,663
As que aqu, por ejemplo, tenemos un nombre, una edad, una

14
00:00:31,663 --> 00:00:33,340
universidad y un ttulo que alguien est haciendo.

15
00:00:34,350 --> 00:00:38,170
Esto nos da informacin sobre una sola persona.

16
00:00:38,170 --> 00:00:41,190
La primera fila nos dice los ttulos de los datos, de modo

17
00:00:41,190 --> 00:00:43,590
que cuando miramos el archivo podemos decir lo que significa.

18
00:00:44,570 --> 00:00:48,440
La primera columna es el nombre.

19
00:00:48,440 --> 00:00:52,120
El segundo es la edad.

20
00:00:52,120 --> 00:00:53,940
El tercero es la universidad.

21
00:00:53,940 --> 00:00:55,270
El ltimo es el grado.

22
00:00:55,270 --> 00:00:56,600
Entonces, lo que vamos a

23
00:00:56,600 --> 00:00:58,200
hacer es escribir un programa que lea

24
00:00:58,200 --> 00:00:59,660
estas tres lneas, no la primera.

25
00:00:59,660 --> 00:01:01,358
Y va a imprimir la informacin

26
00:01:01,358 --> 00:01:04,480
sobre esta persona de una manera un poco ms agradable.

27
00:01:04,480 --> 00:01:06,540
Solo para experimentar con la lectura de archivos CSV.

28
00:01:06,540 --> 00:01:09,090
Pasemos a CSV y vamos a

29
00:01:09,090 --> 00:01:11,940
leer dot py, un archivo que acabo

30
00:01:14,040 --> 00:01:16,810
de crear, y vamos a comenzar.

31
00:01:16,810 --> 00:01:18,580
Lo primero que debe hacer es,

32
00:01:18,580 --> 00:01:20,700
por supuesto, leer las lneas en el archivo.

33
00:01:20,700 --> 00:01:22,560
Estoy seguro de que puedes hacer eso.

34
00:01:22,560 --> 00:01:24,610
Espero que entiendas eso.

35
00:01:24,610 --> 00:01:25,900
Lo que hay que hacer

36
00:01:29,790 --> 00:01:30,870
es, por supuesto, abrir

37
00:01:30,870 --> 00:01:34,480
el CSV y vamos a datos dot t-x-t en modo de lectura, y luego

38
00:01:34,480 --> 00:01:37,440
podemos mirar las lneas, y eso ser lneas de archivo de lectura.

39
00:01:37,440 --> 00:01:39,510
Y luego podemos cerrar el archivo.

40
00:01:39,510 --> 00:01:41,650
Ahora tenemos todas las lneas.

41
00:01:43,590 --> 00:01:45,140
Es de la lnea nmero

42
00:01:46,350 --> 00:01:48,380
uno, dos, tres y cuatro, incluidos los

43
00:01:48,380 --> 00:01:51,880
nuevos caracteres de lnea al final y todos los conectores en la lnea.

44
00:01:51,880 --> 00:01:54,020
Ahora lo que vamos a hacer es ignorar la primera lnea.

45
00:01:54,020 --> 00:01:55,770
Entonces, qu es decir lneas equivale a lneas de un solo punto?

46
00:01:56,860 --> 00:02:00,790
Si recuerdas cuando miramos las listas, esto se

47
00:02:02,660 --> 00:02:07,660
llama cortar una lista, y bsicamente nos permite obtener solo

48
00:02:09,230 --> 00:02:11,830
una parte de la lista.

49
00:02:11,830 --> 00:02:15,320
Vamos a cambiar esta variable de lneas para que ahora

50
00:02:15,320 --> 00:02:17,970
sea lo que fue la variable de

51
00:02:17,970 --> 00:02:21,150
lneas, pero solo desde el ndice uno en adelante.

52
00:02:21,150 --> 00:02:24,070
As que vamos a obtener el ndice uno en adelante.

53
00:02:24,070 --> 00:02:27,020
Eso es uno, dos y tres aqu.

54
00:02:27,020 --> 00:02:30,260
Vamos a ignorar la primera lnea.

55
00:02:30,260 --> 00:02:32,670
Por supuesto, tambin queremos eliminar cualquier espacio en

56
00:02:32,670 --> 00:02:34,520
blanco, como nuevos caracteres de lnea

57
00:02:36,240 --> 00:02:38,840
para que podamos poner esto dentro de una

58
00:02:38,840 --> 00:02:40,980
lista de comprensin que dice lnea de

59
00:02:40,980 --> 00:02:43,810
puntos y rayas para la lnea en esa seccin.

60
00:02:43,810 --> 00:02:46,900
La razn por la que hago esto aqu en lugar

61
00:02:47,940 --> 00:02:49,290
de aqu arriba, es

62
00:02:50,170 --> 00:02:52,020
para que solo estemos quitando las

63
00:02:52,020 --> 00:02:54,300
lneas que queremos quitar, y no la

64
00:02:54,300 --> 00:02:56,570
primera lnea porque realmente no nos importa.

65
00:02:56,570 --> 00:02:58,010
Ahora que tenemos estas lneas,

66
00:02:58,010 --> 00:02:59,160
podemos iterar sobre ellas.

67
00:03:00,940 --> 00:03:02,710
Y podemos decir que la persona

68
00:03:02,710 --> 00:03:04,470
que vamos a analizar es toda

69
00:03:07,200 --> 00:03:09,340
la lnea, pero queremos obtener los datos

70
00:03:09,340 --> 00:03:11,800
en ella, que estn separados por comas.

71
00:03:11,800 --> 00:03:13,990
Asi que que hacemos?

72
00:03:13,990 --> 00:03:16,470
Bueno, como hicimos en el ltimo video, vamos a dividir la

73
00:03:16,470 --> 00:03:17,320
lnea por la coma.

74
00:03:19,014 --> 00:03:22,020
As que vamos a decir que los datos de las personas son iguales

75
00:03:22,020 --> 00:03:24,010
a los puntos de lnea divididos en la coma.

76
00:03:24,010 --> 00:03:26,010
Eso nos dar

77
00:03:26,010 --> 00:03:29,500
una lista de varios elementos.

78
00:03:29,500 --> 00:03:31,320
El primero va a ser rolf.

79
00:03:31,320 --> 00:03:32,920
El segundo tendr 25 aos.

80
00:03:32,920 --> 00:03:34,120
El tercero ser MIT.

81
00:03:34,120 --> 00:03:35,710
Y el cuarto ser informtica.

82
00:03:35,710 --> 00:03:37,670
Entonces la lista tendr cuatro elementos.

83
00:03:37,670 --> 00:03:39,590
Para facilitarnos el trabajo

84
00:03:39,590 --> 00:03:41,910
con este programa, crear la

85
00:03:43,520 --> 00:03:45,340
variable por elemento.

86
00:03:45,340 --> 00:03:47,130
No es algo que tengas que hacer,

87
00:03:47,130 --> 00:03:48,580
pero me gusta hacer eso.

88
00:03:48,580 --> 00:03:50,130
Entonces el nombre es igual a cero datos de personas.

89
00:03:50,130 --> 00:03:52,120
La edad es igual a los datos de la persona uno.

90
00:03:52,120 --> 00:03:56,890
La universidad es igual a los datos de la persona dos.

91
00:03:56,890 --> 00:03:59,820
Y el grado es persona datos tres.

92
00:03:59,820 --> 00:04:04,820
Ahora, por supuesto, obtendr un error de ndice si su archivo

93
00:04:05,150 --> 00:04:08,610
no tiene el formato correcto, pero eso es

94
00:04:10,160 --> 00:04:12,580
un problema en cualquier caso.

95
00:04:12,580 --> 00:04:15,230
Cada vez que interacte con archivos o con bases

96
00:04:15,230 --> 00:04:19,010
de datos o cualquier otra cosa, su programa estar razonablemente acoplado a los

97
00:04:19,880 --> 00:04:21,350
datos con los que est

98
00:04:21,350 --> 00:04:23,210
interactuando para que sepa que es

99
00:04:23,210 --> 00:04:25,670
un problema con el que debemos lidiar si ocurre.

100
00:04:25,670 --> 00:04:27,880
Ahora que tenemos el nombre, la

101
00:04:27,880 --> 00:04:31,500
edad, la universidad y el ttulo, podemos imprimir una lnea

102
00:04:31,500 --> 00:04:33,280
diciendo que esta persona tiene

103
00:04:33,280 --> 00:04:36,470
25 aos y est estudiando informtica en el MIT.

104
00:04:36,470 --> 00:04:40,070
As que podemos imprimir algo as como

105
00:04:40,070 --> 00:04:41,690
el nombre es

106
00:04:43,220 --> 00:04:44,470
la edad, el

107
00:04:48,130 --> 00:04:49,060
estudio de

108
00:04:50,920 --> 00:04:52,990
grado en la universidad.

109
00:04:54,720 --> 00:04:58,590
Ah.

110
00:04:58,590 --> 00:04:59,960
Ahora el problema cuando hacemos

111
00:05:02,610 --> 00:05:03,443
esto, vamos a

112
00:05:06,450 --> 00:05:09,090
ejecutar el archivo, es que no se ve tan fantstico.

113
00:05:09,090 --> 00:05:10,340
Sabes que no hay letras maysculas.

114
00:05:12,120 --> 00:05:14,080
Sin capitales en ninguna parte.

115
00:05:14,080 --> 00:05:16,010
Vamos a hacerlo un poco mejor.

116
00:05:16,010 --> 00:05:17,990
Y la forma en que vamos a hacer

117
00:05:17,990 --> 00:05:19,660
eso es mediante el uso de algunos

118
00:05:19,660 --> 00:05:20,990
mtodos incorporados de la clase de

119
00:05:20,990 --> 00:05:24,080
cadena que nos permite agregar letras maysculas, y as sucesivamente, en varios lugares.

120
00:05:24,080 --> 00:05:26,830
Para el nombre, vamos a usar el ttulo de punto.

121
00:05:26,830 --> 00:05:29,360
Y eso simplemente se convierte en

122
00:05:30,400 --> 00:05:32,900
maysculas y minsculas, por lo que

123
00:05:34,610 --> 00:05:38,690
la primera letra de cada palabra va a estar en mayscula.

124
00:05:38,690 --> 00:05:41,670
Para el grado, vamos a usar

125
00:05:41,670 --> 00:05:43,420
mayscula porque eso

126
00:05:44,450 --> 00:05:48,300
convierte la primera letra solo en mayscula.

127
00:05:50,700 --> 00:05:54,810
Y para la universidad vamos a usar el ttulo tambin,

128
00:05:54,810 --> 00:05:57,540
porque eso convierte la primera letra

129
00:05:57,540 --> 00:05:59,730
de cada palabra en mayscula.

130
00:05:59,730 --> 00:06:02,440
De acuerdo, volvamos a ejecutar el archivo.

131
00:06:02,440 --> 00:06:04,250
Y ahora podemos ver que se ve un poco mejor.

132
00:06:05,620 --> 00:06:07,170
Tenemos a Rolf, que tiene 25

133
00:06:08,113 --> 00:06:09,860
aos, estudia computacin en el MIT.

134
00:06:09,860 --> 00:06:11,670
Esto no se ve tan fantstico, pero

135
00:06:11,670 --> 00:06:14,020
creo que este es un problema de datos.

136
00:06:14,020 --> 00:06:16,260
No hay forma de que sepamos que

137
00:06:16,260 --> 00:06:17,630
la universidad es un

138
00:06:17,630 --> 00:06:19,280
acrnimo, as que en ese

139
00:06:19,280 --> 00:06:24,280
caso creo que los datos deberan estar en maysculas si quisiramos que fueran as.

140
00:06:24,600 --> 00:06:26,620
Creo que es un pequeo problema secundario.

141
00:06:26,620 --> 00:06:29,200
No tenemos que preocuparnos demasiado por eso.

142
00:06:30,110 --> 00:06:31,820
Por supuesto, en lugar de aplicar el

143
00:06:31,820 --> 00:06:34,050
cdigo de Python aqu, te dije que realmente no me

144
00:06:34,050 --> 00:06:36,680
gusta eso, poniendo el cdigo de Python dentro de la cadena.

145
00:06:36,680 --> 00:06:39,270
Se ve un poco feo

146
00:06:39,270 --> 00:06:41,120
Creo que deberamos poner estas

147
00:06:41,120 --> 00:06:42,750
funciones de ttulo y

148
00:06:42,750 --> 00:06:45,230
capitalizar en los lugares apropiados aqu.

149
00:06:45,230 --> 00:06:48,271
De esta forma, solo hace que sea un

150
00:06:48,271 --> 00:06:51,450
poco ms agradable, un poco ms fcil de leer.

151
00:06:52,560 --> 00:06:53,760
Por supuesto, esto nos

152
00:06:53,760 --> 00:06:54,810
permite leer el archivo

153
00:06:57,550 --> 00:06:59,990
CSV, extraer los datos del mismo y luego imprimirlo.

154
00:06:59,990 --> 00:07:02,690
Podramos multiplicar cosas

155
00:07:02,690 --> 00:07:04,030
Podramos calcular nuevos datos.

156
00:07:04,030 --> 00:07:05,000
Podramos analizarlo.

157
00:07:05,000 --> 00:07:07,060
Lo que sea que quieras hacer con el cdigo de Python.

158
00:07:07,060 --> 00:07:07,893
Si quisiera

159
00:07:07,893 --> 00:07:10,670
escribir en el archivo, es exactamente lo

160
00:07:10,670 --> 00:07:13,210
mismo que escribir cualquier otro archivo, excepto

161
00:07:13,210 --> 00:07:15,540
que estara escribiendo una gran cadena

162
00:07:15,540 --> 00:07:18,060
con varias cosas separadas por comas, como

163
00:07:18,060 --> 00:07:20,510
si pudiera escribir rolf, 25, MIT, informtica.

164
00:07:20,510 --> 00:07:23,860
Si escribe eso en el archivo,

165
00:07:26,278 --> 00:07:29,790
eso es todo lo que necesita.

166
00:07:29,790 --> 00:07:32,120
Eso va a imitar exactamente lo

167
00:07:32,120 --> 00:07:33,290
que tenemos aqu.

168
00:07:33,290 --> 00:07:35,250
Entonces, escribir un CSV solo significa

169
00:07:35,250 --> 00:07:36,670
unir los valores constitutivos

170
00:07:36,670 --> 00:07:38,835
que desea escribir con una coma.

171
00:07:38,835 --> 00:07:40,990
Y eso es bastante sencillo.

172
00:07:40,990 --> 00:07:42,750
Y, por cierto, solo por contexto,

173
00:07:43,590 --> 00:07:45,730
de la forma en que lo haces, aqu

174
00:07:45,730 --> 00:07:47,380
hay un ejemplo de valor de

175
00:07:47,380 --> 00:07:49,080
csv, es que tienes un punto

176
00:07:49,080 --> 00:07:51,880
de coma y aqu pones una lista de valores a

177
00:07:51,880 --> 00:07:54,950
los que te quieres unir como rolf, w5, MIT, informtica.

178
00:07:55,810 --> 00:07:57,620
Y as es como

179
00:07:57,620 --> 00:08:02,620
se unira a una lista de valores en un archivo CSV.

180
00:08:05,720 --> 00:08:08,260
Aqu abajo, mira.

181
00:08:08,260 --> 00:08:10,320
Esto es lo que esto imprime.

182
00:08:12,250 --> 00:08:13,750
Solo quera darte esta informacin

183
00:08:13,750 --> 00:08:15,540
en caso de que quieras almacenar

184
00:08:15,540 --> 00:08:16,620
algunos valores en un

185
00:08:16,620 --> 00:08:18,500
CSV usando la cadena de sintaxis.

186
00:08:18,500 --> 00:08:21,166
La unin de puntos unir cada elemento de esta

187
00:08:21,166 --> 00:08:23,930
lista usando este personaje aqu como el carcter de unin.

188
00:08:23,930 --> 00:08:26,150
Si desea usar

189
00:08:26,150 --> 00:08:31,150
dos puntos, puede hacerlo, por supuesto.

190
00:08:31,640 --> 00:08:33,980
Entonces su cadena se vera as.

191
00:08:33,980 --> 00:08:35,230
Se vera como los

192
00:08:35,230 --> 00:08:37,914
diversos valores constituyentes pero unidos por dos puntos.

193
00:08:37,914 --> 00:08:38,950
Puedes usar cualquier personaje

194
00:08:38,950 --> 00:08:41,030
que desees siempre y cuando no sea un personaje

195
00:08:41,030 --> 00:08:42,600
el que aparecer dentro de los datos.

196
00:08:42,600 --> 00:08:43,880
Por ejemplo, si usa

197
00:08:43,880 --> 00:08:46,250
el espacio para unirlo, tendra un problema

198
00:08:46,250 --> 00:08:47,980
porque uno de sus valores

199
00:08:47,980 --> 00:08:49,270
tiene un espacio, y

200
00:08:49,270 --> 00:08:51,350
luego, por supuesto, tendr valores mltiples,

201
00:08:51,350 --> 00:08:55,210
tendr cinco valores en lugar de cuatro cuando hora de la verdad.

202
00:08:55,210 --> 00:08:56,700
Ver.

203
00:08:56,700 --> 00:09:00,160
Ahora tienes un espacio aqu, espacio aqu, espacio aqu y un espacio

204
00:09:00,160 --> 00:09:00,993
aqu, aunque este

205
00:09:00,993 --> 00:09:02,240
debera ser un valor nico.

206
00:09:02,240 --> 00:09:04,430
Es por eso que debe usar un valor

207
00:09:04,430 --> 00:09:06,980
aqu que no aparecer en ninguna de las cadenas.

208
00:09:06,980 --> 00:09:08,820
Una coma es normalmente una buena opcin,

209
00:09:08,820 --> 00:09:12,060
por lo que es un colon, por lo que es un smbolo hash.

210
00:09:12,060 --> 00:09:14,670
Estas cosas normalmente no aparecen.

211
00:09:14,670 --> 00:09:16,020
Cuando ests leyendo los datos,

212
00:09:16,020 --> 00:09:17,980
en lugar de dividirlos por comas, puedes

213
00:09:17,980 --> 00:09:19,770
dividirlos por el smbolo de hash,

214
00:09:19,770 --> 00:09:21,150
y eso es lo mismo.

215
00:09:21,150 --> 00:09:23,800
Deja de ser un archivo CSV.

216
00:09:23,800 --> 00:09:24,960
Ahora es, en lugar de un archivo de valores

217
00:09:24,960 --> 00:09:26,540
separados por comas, ahora es un archivo de valores separados por hash.

218
00:09:26,540 --> 00:09:28,920
No importa

219
00:09:28,920 --> 00:09:30,950
El mismo tipo de cosas.

220
00:09:30,950 --> 00:09:31,783
De acuerdo, eso es todo lo que quera decir en este video.

221
00:09:31,783 --> 00:09:32,780
Gracias por mirar, y nos vemos en el prximo.

222
00:09:34,000 --> 00:09:36,670
&nbsp;

223
00:09:36,670 --> 00:09:39,080
&nbsp;

