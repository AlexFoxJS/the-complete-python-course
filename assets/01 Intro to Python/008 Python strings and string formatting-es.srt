1
00:00:00,550 --> 00:00:02,420
Jos: Hola, bienvenido de nuevo.

2
00:00:02,420 --> 00:00:05,230
En este video vamos a ver las cadenas.

3
00:00:05,230 --> 00:00:07,270
En el ltimo video vimos

4
00:00:07,270 --> 00:00:09,840
nmeros, enteros y carrozas, y tambin

5
00:00:09,840 --> 00:00:11,520
miramos la impresin y

6
00:00:11,520 --> 00:00:14,560
ahora vamos a ver qu cadenas son.

7
00:00:14,560 --> 00:00:16,390
Y tambin vamos a expandir

8
00:00:16,390 --> 00:00:18,470
eso con el formato de cadenas.

9
00:00:19,760 --> 00:00:22,910
Una cadena es un conjunto de caracteres y smbolos

10
00:00:22,910 --> 00:00:25,810
y nmeros y cualquier otra cosa que desee que

11
00:00:25,810 --> 00:00:28,180
no tenga ningn significado para la computadora.

12
00:00:29,810 --> 00:00:30,820
Donde tienes

13
00:00:30,820 --> 00:00:34,950
un nmero, ese nmero representa cantidad o un valor,

14
00:00:34,950 --> 00:00:36,880
una cadena no representa

15
00:00:36,880 --> 00:00:39,180
nada, solo son los dgitos

16
00:00:39,180 --> 00:00:41,080
mismos o los personajes mismos.

17
00:00:41,080 --> 00:00:43,480
Y normalmente se pueden usar para cosas

18
00:00:43,480 --> 00:00:45,500
que tienen sentido para una persona

19
00:00:45,500 --> 00:00:47,970
pero no necesariamente para una computadora.

20
00:00:47,970 --> 00:00:50,490
Todo esto es bastante abstracto, as que vamos a hacerlo bien.

21
00:00:50,490 --> 00:00:53,580
Crea una nueva respuesta. en Python3 y

22
00:00:53,580 --> 00:00:54,930
luego podemos comenzar.

23
00:00:56,150 --> 00:00:59,520
Por ejemplo, djame crear mi primera variable de cadena.

24
00:01:01,840 --> 00:01:04,550
Y tenemos aqu entre comillas, por

25
00:01:04,550 --> 00:01:06,710
lo que una al principio,

26
00:01:07,860 --> 00:01:12,120
una al final, esta arbitraria o aparentemente arbitraria para la

27
00:01:12,120 --> 00:01:15,110
computadora, conjunto de letras, smbolos y espacios.

28
00:01:16,040 --> 00:01:19,690
La computadora ve esto y no sabe lo que eso significa,

29
00:01:19,690 --> 00:01:22,560
pero, por supuesto, tiene algn significado para nosotros.

30
00:01:25,150 --> 00:01:28,470
Entonces podemos usar esto para imprimir, por ejemplo.

31
00:01:28,470 --> 00:01:31,220
Imprima mi cadena, una vez ms, la palabra

32
00:01:31,220 --> 00:01:33,970
clave print, seguida de un corchete de apertura

33
00:01:33,970 --> 00:01:36,250
y cierre, y dentro de ella

34
00:01:36,250 --> 00:01:39,030
va lo que quiera imprimir a la consola.

35
00:01:40,150 --> 00:01:42,700
Y ahora puede ver que la cadena se usa

36
00:01:42,700 --> 00:01:44,840
para decir algo al usuario o a

37
00:01:44,840 --> 00:01:46,960
quien ejecuta nuestro programa y no se

38
00:01:46,960 --> 00:01:48,900
usa para las cosas que tienen sentido

39
00:01:48,900 --> 00:01:49,733
para la computadora.

40
00:01:52,100 --> 00:01:53,750
As que ah lo tienen,

41
00:01:53,750 --> 00:01:56,020
hemos creado nuestra aplicacin hello world en Python.

42
00:01:57,090 --> 00:01:59,170
Si no sabes lo que esto

43
00:01:59,170 --> 00:02:01,640
significa, esto es algo muy popular que hacer

44
00:02:01,640 --> 00:02:03,340
cuando ests aprendiendo a programar.

45
00:02:03,340 --> 00:02:05,110
Cada vez que aprendes un

46
00:02:05,110 --> 00:02:07,650
nuevo lenguaje de programacin, normalmente escribirs una aplicacin

47
00:02:07,650 --> 00:02:09,930
que imprime hello world en la consola

48
00:02:09,930 --> 00:02:12,440
porque normalmente es una aplicacin sencilla para comenzar.

49
00:02:12,440 --> 00:02:14,160
Entonces, felicidades, has creado

50
00:02:14,160 --> 00:02:15,770
tu primera aplicacin Python.

51
00:02:18,110 --> 00:02:20,480
Ahora, hola mundo no es tan emocionante como

52
00:02:20,480 --> 00:02:22,020
lo que las otras aplicaciones

53
00:02:22,020 --> 00:02:24,660
estarn construyendo, as que espera tus caballos y continuemos.

54
00:02:26,571 --> 00:02:27,930
Observe cmo esta cadena tiene

55
00:02:27,930 --> 00:02:30,240
una comilla doble al comienzo y una comilla

56
00:02:30,240 --> 00:02:31,430
doble al final, pero

57
00:02:33,460 --> 00:02:35,490
tambin podemos construir cadenas que usen comillas

58
00:02:35,490 --> 00:02:37,310
simples en su lugar y depende totalmente

59
00:02:37,310 --> 00:02:39,520
de nosotros cul usemos, ya sea comillas dobles

60
00:02:39,520 --> 00:02:41,637
o comillas simples, no lo hace importa siempre

61
00:02:41,637 --> 00:02:44,780
que el que est al principio y al final sea el

62
00:02:46,214 --> 00:02:47,047
mismo, est bien?

63
00:02:48,900 --> 00:02:51,110
As que te recomendar que intentes elegir uno

64
00:02:51,110 --> 00:02:53,560
de esos dos, no importa cul sea el que

65
00:02:53,560 --> 00:02:56,760
hagas y te apegues a l a lo largo de todo tu

66
00:02:56,760 --> 00:02:59,640
cdigo, normalmente es una buena forma de mantener la coherencia.

67
00:02:59,640 --> 00:03:00,710
Si quieres utilizar

68
00:03:00,710 --> 00:03:03,470
comillas dobles, hazlo, pero siempre utiliza comillas dobles,

69
00:03:03,470 --> 00:03:07,090
no cambies entre lneas de cdigo o entre variables o

70
00:03:07,090 --> 00:03:08,470
cosas por el estilo,

71
00:03:08,470 --> 00:03:10,020
siempre intenta usar la misma.

72
00:03:10,870 --> 00:03:12,210
Ahora hay un momento

73
00:03:12,210 --> 00:03:14,550
en el que querr usar uno especfico,

74
00:03:14,550 --> 00:03:17,180
incluso si no coincide con el estilo que eligi.

75
00:03:18,598 --> 00:03:20,420
Por ejemplo, si tiene

76
00:03:23,900 --> 00:03:26,820
algo como esta cadena aqu, porque

77
00:03:28,090 --> 00:03:30,570
tenemos una comilla simple all

78
00:03:30,570 --> 00:03:33,070
para escribirla, deber usar comillas

79
00:03:33,070 --> 00:03:35,470
dobles en el exterior.

80
00:03:36,610 --> 00:03:38,980
Incluso si normalmente utiliza comillas

81
00:03:38,980 --> 00:03:41,180
simples, querr usar comillas dobles

82
00:03:41,180 --> 00:03:46,180
para esto y cadenas similares para que no ensucie las cosas aqu.

83
00:03:46,470 --> 00:03:48,730
Si pusieras aqu una cita y

84
00:03:48,730 --> 00:03:50,920
estas fueran tambin comillas simples, vers

85
00:03:53,460 --> 00:03:55,430
que esto se confunde mucho,

86
00:03:55,430 --> 00:03:57,520
no sabe qu es una cadena

87
00:03:57,520 --> 00:03:59,410
y qu no, porque aqu

88
00:03:59,410 --> 00:04:03,330
tienes una cadena y no saber qu es esto, de acuerdo?

89
00:04:03,330 --> 00:04:05,430
As que asegrese de recordar que

90
00:04:05,430 --> 00:04:08,600
si tiene una cita dentro de su cadena para

91
00:04:08,600 --> 00:04:11,140
asegurarse de usar las comillas opuestas en

92
00:04:11,140 --> 00:04:11,973
el exterior.

93
00:04:14,750 --> 00:04:17,040
Lo mismo, si tiene algo

94
00:04:20,350 --> 00:04:22,060
como esto, querr usar

95
00:04:22,060 --> 00:04:24,050
comillas simples en el exterior

96
00:04:24,050 --> 00:04:28,080
y las comillas dobles alrededor de su cita, de acuerdo?

97
00:04:29,720 --> 00:04:32,090
Tambin puedes hacer esto.

98
00:04:39,310 --> 00:04:42,800
Pero con suerte, te das cuenta de lo feo que es.

99
00:04:42,800 --> 00:04:44,850
Puedes hacer lo que se llama

100
00:04:44,850 --> 00:04:47,670
escaping, que es una cita escapada y que

101
00:04:47,670 --> 00:04:49,990
le dice a Python que esto no

102
00:04:49,990 --> 00:04:51,680
es lo mismo que esto,

103
00:04:51,680 --> 00:04:54,180
es algo que estar dentro de tu

104
00:04:54,180 --> 00:04:56,240
cadena pero no terminado o iniciado.

105
00:04:57,610 --> 00:04:59,200
Entonces puede hacer esto, pero no

106
00:04:59,200 --> 00:05:00,920
lo recomiendo, es un poco ms

107
00:05:00,920 --> 00:05:02,430
feo y luego debe comenzar

108
00:05:02,430 --> 00:05:04,840
a hacer un seguimiento de las comillas que

109
00:05:04,840 --> 00:05:07,020
se escapan y cules no, y as sucesivamente.

110
00:05:07,020 --> 00:05:08,950
Se vuelve un poco desordenado, de acuerdo?

111
00:05:11,350 --> 00:05:12,977
Ahora pasemos a la

112
00:05:12,977 --> 00:05:15,980
parte del formato de cadena de este video.

113
00:05:15,980 --> 00:05:17,470
Imagina que tienes un nombre, por

114
00:05:17,470 --> 00:05:19,340
ejemplo mi nombre, y por cierto, normalmente

115
00:05:19,340 --> 00:05:21,670
uso comillas simples para las cosas, es justo a

116
00:05:21,670 --> 00:05:22,720
lo que estoy acostumbrado,

117
00:05:22,720 --> 00:05:24,270
no dudes en usar comillas dobles.

118
00:05:25,360 --> 00:05:28,040
Imagina que tienes mi nombre en

119
00:05:28,040 --> 00:05:30,070
una variable y quieres saludarme,

120
00:05:30,070 --> 00:05:33,790
quieres decir hola que quieres saludar, hola Jos.

121
00:05:36,720 --> 00:05:39,170
Tan pronto como la variable de nombre cambie,

122
00:05:39,170 --> 00:05:41,080
por ejemplo, si esto cambia a

123
00:05:42,180 --> 00:05:44,370
Rolf, querrs ir y cambiar esta cadena

124
00:05:44,370 --> 00:05:46,980
tambin para saludar a Rolf, y as sucesivamente.

125
00:05:46,980 --> 00:05:49,480
As que esto no es genial porque tienes

126
00:05:49,480 --> 00:05:52,370
algo de duplicacin all y cosas que tienes que cambiar.

127
00:05:52,370 --> 00:05:53,870
Entonces, lo mejor que

128
00:05:53,870 --> 00:05:57,630
puede hacer es hacer que este saludo use la variable

129
00:05:58,980 --> 00:06:00,600
de nombre y la

130
00:06:00,600 --> 00:06:03,530
forma en que puede hacerlo es agregndolo, de acuerdo?

131
00:06:03,530 --> 00:06:05,080
Lo que tenemos aqu es

132
00:06:06,210 --> 00:06:09,610
una cadena ms otra cadena que es esta cadena de Jose aqu.

133
00:06:10,820 --> 00:06:15,820
Observe cmo lo primero tiene una coma hola y un espacio, y luego le

134
00:06:15,925 --> 00:06:18,710
agregamos el nombre que no tiene espacios al

135
00:06:18,710 --> 00:06:20,300
principio o al final,

136
00:06:20,300 --> 00:06:22,450
y por supuesto si removemos este

137
00:06:24,250 --> 00:06:25,380
espacio aqu, todo

138
00:06:25,380 --> 00:06:27,670
estar solo, ser hola Jos en conjunto.

139
00:06:27,670 --> 00:06:30,710
Tenemos un espacio, tendr el espacio apropiado como lo

140
00:06:30,710 --> 00:06:31,870
haramos en ingls.

141
00:06:33,510 --> 00:06:36,760
Por supuesto, podemos imprimir este saludo y ejecutarlo.

142
00:06:38,210 --> 00:06:39,043
Ver?

143
00:06:40,150 --> 00:06:41,000
Y es posible que no

144
00:06:41,000 --> 00:06:42,300
pueda ver, s que el texto es pequeo.

145
00:06:44,740 --> 00:06:47,900
Ahora, en lugar de concatenar esta cadena, as es

146
00:06:47,900 --> 00:06:50,210
como se llama, concatenando, en lugar de

147
00:06:50,210 --> 00:06:53,110
concatenar, lo que puede ser realmente complicado si

148
00:06:53,110 --> 00:06:55,720
tienes muchas cosas que desear unir, podemos usar

149
00:06:55,720 --> 00:06:58,440
algo nuevo en Python3. 6 que se

150
00:06:58,440 --> 00:07:00,450
llama una cadena F.

151
00:07:04,240 --> 00:07:07,540
Las cadenas F funcionan colocando una F

152
00:07:07,540 --> 00:07:10,730
fuera de la cadena y luego puedes

153
00:07:10,730 --> 00:07:15,130
usar la cadena aqu y puedes decir hola, nombre.

154
00:07:16,330 --> 00:07:18,130
Bien, tan importante, F

155
00:07:18,130 --> 00:07:20,760
luego abres tu cadena con una

156
00:07:20,760 --> 00:07:23,740
comilla simple o una comilla doble, luego

157
00:07:23,740 --> 00:07:25,620
puedes escribir la cadena

158
00:07:25,620 --> 00:07:28,270
y luego cierras la cadena aqu.

159
00:07:28,270 --> 00:07:30,350
Aqu dentro, fjate cmo tenemos

160
00:07:30,350 --> 00:07:32,670
estas llaves y dentro de

161
00:07:32,670 --> 00:07:35,200
las llaves tenemos el nombre.

162
00:07:35,200 --> 00:07:38,430
Ahora nombre, repl. ya nos est

163
00:07:38,430 --> 00:07:41,470
diciendo, esta variable est aqu, de acuerdo?

164
00:07:42,520 --> 00:07:43,850
Y la cadena F, lo

165
00:07:43,850 --> 00:07:46,130
que va a hacer es mirar la variable

166
00:07:46,130 --> 00:07:49,380
de nombre y la va a reemplazar en esta cadena F aqu.

167
00:07:49,380 --> 00:07:51,650
F significa formateado y esta es

168
00:07:51,650 --> 00:07:53,440
una cadena formateada porque

169
00:07:53,440 --> 00:07:56,780
va a formatearlo con estas cosas que estn

170
00:07:56,780 --> 00:07:58,290
dentro de estos corchetes.

171
00:07:59,250 --> 00:08:02,210
Ahora, si imprimimos otro saludo, ver

172
00:08:02,210 --> 00:08:05,340
hola Jos, est impreso de nuevo.

173
00:08:06,216 --> 00:08:07,560
Bueno?

174
00:08:08,710 --> 00:08:11,500
Si alguna vez ha tomado otros cursos

175
00:08:11,500 --> 00:08:14,630
de Python, sabr este tercero, esta segunda

176
00:08:14,630 --> 00:08:16,400
forma de formatear cadenas.

177
00:08:16,400 --> 00:08:18,020
La segunda forma en que

178
00:08:18,020 --> 00:08:20,060
te mostrar para que sepas que

179
00:08:20,060 --> 00:08:21,840
esto existe porque la usa

180
00:08:21,840 --> 00:08:24,990
mucha codificacin, pero siempre usa cadenas F si puedes.

181
00:08:31,610 --> 00:08:33,520
Este saludo final solo tendr

182
00:08:33,520 --> 00:08:36,890
llaves de apertura y cierre y no tiene

183
00:08:36,890 --> 00:08:39,340
la F al frente, por lo

184
00:08:39,340 --> 00:08:43,580
que esta es solo una buena cuerda normal, de acuerdo?

185
00:08:47,600 --> 00:08:52,010
Y si queremos formatearlo y poner a Jose aqu desde nuestra

186
00:08:52,010 --> 00:08:53,360
variable, tenemos que

187
00:08:53,360 --> 00:08:57,000
hacer el formato final de saludo, el nombre y

188
00:08:57,930 --> 00:08:59,530
lo que va a

189
00:08:59,530 --> 00:09:01,950
hacer es obtener esta cadena aqu

190
00:09:01,950 --> 00:09:04,630
y va a formatearla con nuestra variable

191
00:09:04,630 --> 00:09:07,410
y va a reemplazar las llaves por

192
00:09:07,410 --> 00:09:09,460
el valor en nuestra variable.

193
00:09:13,126 --> 00:09:14,420
Y una vez

194
00:09:14,420 --> 00:09:19,420
ms, si ejecutamos esto, cmo ests Jos, aqu arriba, est bien?

195
00:09:19,500 --> 00:09:22,750
No use esta forma de formatear cadenas a

196
00:09:22,750 --> 00:09:27,290
menos que est trabajando con Python3. 5 o abajo.

197
00:09:27,290 --> 00:09:30,440
Si est trabajando con Python3. 6 o superior, siempre

198
00:09:30,440 --> 00:09:32,840
trate de usar cuerdas F.

199
00:09:33,750 --> 00:09:35,700
La nica razn por la

200
00:09:35,700 --> 00:09:39,310
que te estoy mostrando esto es porque si miras un

201
00:09:39,310 --> 00:09:41,250
cdigo Python ms antiguo, de

202
00:09:41,250 --> 00:09:44,003
hecho, la mayora del cdigo Python usar este

203
00:09:44,003 --> 00:09:46,250
formato de forma de hacer las cosas.

204
00:09:47,130 --> 00:09:49,280
Eso es solo porque Python3. 6 es bastante nuevo.

205
00:09:50,250 --> 00:09:51,890
Bueno?

206
00:09:51,890 --> 00:09:52,723
Eso es

207
00:09:52,723 --> 00:09:54,670
todo por este video, hemos visto

208
00:09:54,670 --> 00:09:56,440
cadenas que pueden usar comillas

209
00:09:56,440 --> 00:09:58,790
simples o dobles, hemos analizado las comillas

210
00:09:58,790 --> 00:10:01,470
de escape y tambin hemos analizado el formato

211
00:10:01,470 --> 00:10:04,270
de cadenas al concatenar cadenas usando ms, usando

212
00:10:04,270 --> 00:10:07,280
cadenas F que es la recomendada manera, o mediante

213
00:10:07,280 --> 00:10:10,220
el uso de formato de puntos, que es la

214
00:10:10,220 --> 00:10:13,240
forma en que la mayora del cdigo de Python

215
00:10:13,240 --> 00:10:15,990
se ha escrito en los ltimos aos.

216
00:10:15,990 --> 00:10:17,100
As que eso es todo por

217
00:10:17,100 --> 00:10:19,750
este video, espero que lo hayas disfrutado y nos veremos en el prximo.

