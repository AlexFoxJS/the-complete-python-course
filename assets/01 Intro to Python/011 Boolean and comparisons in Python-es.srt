1
00:00:01,040 --> 00:00:03,060
Jos: Hola, y bienvenido.

2
00:00:03,060 --> 00:00:05,660
En este video, vamos a ver Booleanos.

3
00:00:06,870 --> 00:00:09,140
Un booleano es un tipo especfico de

4
00:00:09,140 --> 00:00:12,270
datos, al igual que los nmeros y las cadenas, y

5
00:00:12,270 --> 00:00:14,150
el nombre proviene de la persona

6
00:00:14,150 --> 00:00:17,220
que lo invent, un tipo llamado George Boole, que era matemtico.

7
00:00:18,350 --> 00:00:23,350
Un booleano es un valor que representa dos estados posibles.

8
00:00:25,310 --> 00:00:27,520
Con frecuencia, esos son verdaderos y falsos,

9
00:00:27,520 --> 00:00:29,630
pero tambin pueden ser cosas como s

10
00:00:29,630 --> 00:00:32,860
o no, uno y cero, y cosas por el estilo.

11
00:00:32,860 --> 00:00:37,650
En Python, los booleanos pueden ser verdaderos, o pueden ser falsos.

12
00:00:37,650 --> 00:00:40,020
Y los usamos, por supuesto, para tomar decisiones.

13
00:00:40,860 --> 00:00:44,140
Por ejemplo, podemos preguntar si algo es cierto, luego vamos a

14
00:00:44,140 --> 00:00:47,030
hacer esto, y si esto es falso, entonces vamos a

15
00:00:47,030 --> 00:00:48,450
hacer eso, y as sucesivamente.

16
00:00:48,450 --> 00:00:52,270
Permite a nuestros programas hacer cosas dependiendo de algo.

17
00:00:54,450 --> 00:00:57,540
Entonces, comenzaremos por definir un par

18
00:00:57,540 --> 00:01:02,350
de variables que representen estos valores verdaderos y falsos.

19
00:01:02,350 --> 00:01:04,650
Voy a llamar verdad a

20
00:01:05,550 --> 00:01:10,550
la variable, porque su valor es uno que ser verdadero.

21
00:01:11,250 --> 00:01:14,600
Y de hecho, este valor aqu es la

22
00:01:14,600 --> 00:01:18,100
definicin de verdadero en Python, verdadero con mayscula T.

23
00:01:18,100 --> 00:01:21,340
Como puede ver, se vuelve azul, porque Python lo reconoce

24
00:01:21,340 --> 00:01:24,680
como una palabra clave, y este es uno de los

25
00:01:24,680 --> 00:01:27,070
que no debe nombrar sus variables despus.

26
00:01:27,070 --> 00:01:29,520
As que no nombre sus variables True con mayscula T.

27
00:01:29,520 --> 00:01:31,990
Esa es una receta para el desastre.

28
00:01:31,990 --> 00:01:34,110
Pero la variable se llama truthy

29
00:01:34,110 --> 00:01:36,560
porque representa un valor que es verdadero.

30
00:01:38,460 --> 00:01:41,400
Del mismo modo, podramos crear una variable llamada falsy y

31
00:01:41,400 --> 00:01:43,800
hacerla False, de nuevo, con una F. mayscula.

32
00:01:45,010 --> 00:01:47,100
Recuerde que los nombres de las variables son,

33
00:01:47,100 --> 00:01:48,340
no importan en absoluto.

34
00:01:48,340 --> 00:01:51,030
Solo son nombres para estos valores.

35
00:01:51,970 --> 00:01:54,000
Y entonces puedes ponerles el nombre que quieras.

36
00:01:55,530 --> 00:01:59,540
Pero el concepto de valores de falsedad y falsedad es

37
00:01:59,540 --> 00:02:01,820
importante, como veremos ms adelante.

38
00:02:03,670 --> 00:02:05,960
En lugar de solo usar verdadero

39
00:02:05,960 --> 00:02:10,070
y falso, tambin podemos calcular si algo es verdadero o falso.

40
00:02:10,070 --> 00:02:12,670
Por ejemplo, digamos que tenemos una variable llamada edad, y

41
00:02:12,670 --> 00:02:13,900
eso equivale a 20.

42
00:02:15,220 --> 00:02:19,760
Podemos calcular si la edad es mayor o igual a 18.

43
00:02:19,760 --> 00:02:22,090
Por ejemplo, creemos otra

44
00:02:22,090 --> 00:02:24,591
variable, llamada is_over_age, y

45
00:02:24,591 --> 00:02:27,680
la igualaremos a age> = 18.

46
00:02:29,430 --> 00:02:32,690
Ahora, de nuevo, este lado igual nico es

47
00:02:32,690 --> 00:02:37,000
clave en esta expresin, porque todo lo que est detrs, lo

48
00:02:37,000 --> 00:02:40,180
que sea a la derecha, se calcular primero

49
00:02:41,140 --> 00:02:43,870
y luego is_over_age se asignar a eso.

50
00:02:45,810 --> 00:02:48,890
Y ahora, lo que va a hacer

51
00:02:48,890 --> 00:02:52,900
es comparar edad y 18 aos, y nos dir si

52
00:02:52,900 --> 00:02:56,150
la edad es mayor o igual a 18.

53
00:02:56,150 --> 00:02:58,870
Ahora, cul crees que va a ser el

54
00:02:58,870 --> 00:03:00,950
resultado de esto, o mejor dicho,

55
00:03:00,950 --> 00:03:04,130
cul crees que ser el valor para esta variable is_over_age?

56
00:03:07,160 --> 00:03:08,430
Estoy seguro de que lo hiciste bien.

57
00:03:08,430 --> 00:03:11,740
Por supuesto, la edad es mayor o igual a

58
00:03:11,740 --> 00:03:14,780
18, as que esta es una verdadera expresin.

59
00:03:14,780 --> 00:03:19,780
De hecho, cuando esto se ejecuta, se reemplaza por el valor True.

60
00:03:22,080 --> 00:03:26,120
Y podemos verificarlo imprimindolo rpidamente y

61
00:03:26,120 --> 00:03:27,890
ejecutando nuestro cdigo.

62
00:03:27,890 --> 00:03:29,410
Como puede ver aqu abajo, a

63
00:03:29,410 --> 00:03:32,240
la derecha, es difcil de ver, pero True est impreso.

64
00:03:34,430 --> 00:03:37,105
Por supuesto, podramos hacer is_under_age, y eso

65
00:03:37,105 --> 00:03:39,520
podra ser igual a la edad &lt;18.

66
00:03:41,250 --> 00:03:44,620
Observe que no estoy usando menos de o igual a

67
00:03:45,560 --> 00:03:49,990
18 aqu, porque si la edad fuera exactamente 18, esto sera cierto, y

68
00:03:51,600 --> 00:03:54,380
esto tambin sera cierto, lo cual no tendra sentido.

69
00:03:54,380 --> 00:03:57,040
Cmo puede ser mayor y menor de edad al mismo tiempo?

70
00:03:57,910 --> 00:04:01,620
As que, por supuesto, las personas menores de edad son las que tienen 17

71
00:04:01,620 --> 00:04:03,630
aos o menos; es decir, menos de 18.

72
00:04:03,630 --> 00:04:07,340
Tambin podra escribir esto como &lt;= 17, pero creo que

73
00:04:07,340 --> 00:04:09,960
tal vez se lea un poco menos.

74
00:04:09,960 --> 00:04:11,710
Depende de ti lo que quieras hacer.

75
00:04:14,180 --> 00:04:17,130
Tambin podemos verificar si tienen 20

76
00:04:17,130 --> 00:04:21,090
aos, y podemos hacerlo comprobando la edad es qu?

77
00:04:21,090 --> 00:04:23,610
Qu crees que podremos hacer aqu?

78
00:04:26,230 --> 00:04:30,440
Una sugerencia podra ser verificar si es mayor o igual

79
00:04:30,440 --> 00:04:34,460
que 20 y menor que 21, pero sera una

80
00:04:34,460 --> 00:04:37,010
forma ligeramente artificial de calcular si

81
00:04:37,010 --> 00:04:39,070
es exactamente igual a 20.

82
00:04:40,150 --> 00:04:45,150
Entonces, en cambio, lo que haremos es verificar si es igual a 20.

83
00:04:45,260 --> 00:04:48,180
Observe que tenemos un solo signo igual aqu.

84
00:04:48,180 --> 00:04:51,280
Eso significa que se calcular y se

85
00:04:51,280 --> 00:04:53,330
le asignar, y aqu tenemos

86
00:04:53,330 --> 00:04:55,380
un doble signo igual, que

87
00:04:55,380 --> 00:04:58,220
se usa para la comparacin booleana.

88
00:04:58,220 --> 00:05:01,760
Nos va a dar la verdad es que estas dos cosas son lo

89
00:05:01,760 --> 00:05:04,160
mismo, y nos dar falsas si no lo son.

90
00:05:05,880 --> 00:05:10,880
Por supuesto, otros smbolos son &lt;= y tambin>.

91
00:05:11,870 --> 00:05:15,690
Por lo tanto, tambin puede usar estos smbolos siempre que lo desee.

92
00:05:18,210 --> 00:05:21,490
Ahora, en lugar de comparar la edad y los

93
00:05:21,490 --> 00:05:24,610
18 aos, podramos comparar la edad y otra variable.

94
00:05:24,610 --> 00:05:27,730
No tiene que ser una variable en comparacin con un nmero.

95
00:05:27,730 --> 00:05:29,720
Puede ser una variable en comparacin con otra

96
00:05:29,720 --> 00:05:32,210
variable, o dos nmeros comparados, o dos cadenas comparadas.

97
00:05:32,210 --> 00:05:33,200
Puede ser lo que quieras.

98
00:05:33,200 --> 00:05:36,200
Cualquier cosa puede ir entre estos smbolos aqu, pero

99
00:05:36,200 --> 00:05:38,340
por supuesto cul ser el resultado

100
00:05:38,340 --> 00:05:40,070
depende de lo que compares.

101
00:05:41,670 --> 00:05:43,340
Tengamos un par de variables ms.

102
00:05:43,340 --> 00:05:47,200
My_number, que va a ser cinco, y

103
00:05:47,200 --> 00:05:51,290
un user_number, que ser la entrada del usuario.

104
00:05:51,290 --> 00:05:52,190
Ingresa un nmero.

105
00:05:55,880 --> 00:05:57,980
Ahora, veamos si el nmero

106
00:05:57,980 --> 00:06:01,120
que ingresa el usuario es igual a mi_nmero.

107
00:06:04,890 --> 00:06:07,710
Ahora, sabemos exactamente cmo lo hacemos utilizando

108
00:06:07,710 --> 00:06:10,470
el signo doble igual, as que vamos

109
00:06:10,470 --> 00:06:13,790
a verificar que my_number es exactamente igual a user_number.

110
00:06:15,140 --> 00:06:18,790
Qu crees que se imprimir cuando hagamos esto?

111
00:06:18,790 --> 00:06:19,740
Vamos a ejecutar el cdigo.

112
00:06:21,490 --> 00:06:23,280
Ahora nos piden que

113
00:06:23,280 --> 00:06:26,440
ingresemos un nmero, y voy a ingresar cuatro.

114
00:06:27,950 --> 00:06:30,640
Qu crees que saldr cuando hacemos esto?

115
00:06:34,710 --> 00:06:36,340
Supongo que tienes eso correcto.

116
00:06:36,340 --> 00:06:38,460
Falso parece una cosa razonable de imprimir.

117
00:06:38,460 --> 00:06:43,460
Quiero decir, cuatro no es igual a cinco, por lo que 5 == 4 debera ser falso, porque

118
00:06:43,710 --> 00:06:44,970
no son lo mismo.

119
00:06:44,970 --> 00:06:47,450
Vamos a ejecutarlo de nuevo, y esta vez ingrese cinco.

120
00:06:50,090 --> 00:06:52,300
Pero tambin obtenemos False.

121
00:06:54,145 --> 00:06:55,790
Pero, por supuesto, sabes por qu es eso.

122
00:06:55,790 --> 00:06:59,190
Falso porque este user_number aqu es una cadena, y

123
00:06:59,190 --> 00:07:01,780
tiene que ser un nmero para que

124
00:07:01,780 --> 00:07:03,950
se pueda comparar con cinco.

125
00:07:03,950 --> 00:07:06,450
De lo contrario, ests comparando manzanas y naranjas.

126
00:07:06,450 --> 00:07:09,110
Nmeros y cuerdas, no compares los

127
00:07:09,110 --> 00:07:11,520
dos, porque nunca sern iguales

128
00:07:11,520 --> 00:07:14,270
entre s, incluso si crees que

129
00:07:14,270 --> 00:07:17,160
deberan serlo, porque representan lo mismo.

130
00:07:17,160 --> 00:07:19,560
Una cadena y un nmero, cosas completamente diferentes.

131
00:07:19,560 --> 00:07:21,780
Debe convertirlos al mismo

132
00:07:21,780 --> 00:07:23,980
tipo para poder compararlos.

133
00:07:23,980 --> 00:07:25,650
Ahora observe cmo aqu, hemos puesto

134
00:07:25,650 --> 00:07:28,640
el int, y dentro de los corchetes, hemos puesto esta funcin aqu.

135
00:07:28,640 --> 00:07:30,620
Totalmente bien para hacer eso en Python.

136
00:07:30,620 --> 00:07:32,910
Todo lo que sucede es que lo que est

137
00:07:32,910 --> 00:07:34,580
dentro de los corchetes se ejecutar primero.

138
00:07:34,580 --> 00:07:36,880
Entonces, lo primero que se ejecuta es esta cadena.

139
00:07:36,880 --> 00:07:39,070
Nada que hacer ahi; es solo una cadena.

140
00:07:40,010 --> 00:07:43,550
Entonces esto se ejecuta, porque est dentro de estos corchetes, y luego

141
00:07:43,550 --> 00:07:44,540
se ejecuta, porque

142
00:07:44,540 --> 00:07:47,340
es lo ltimo que est fuera de los corchetes.

143
00:07:48,490 --> 00:07:50,090
Al final, user_number debe ser igual

144
00:07:50,090 --> 00:07:52,570
al nmero cinco, si eso es lo que ingresamos.

145
00:07:52,570 --> 00:07:55,310
Entonces, ejecutemos esto y escriba eso,

146
00:07:55,310 --> 00:07:57,260
y ahora imprimimos True.

147
00:07:57,260 --> 00:07:58,990
Entonces estos dos son lo mismo.

148
00:08:00,060 --> 00:08:01,940
Y tambin me gustara presentarles cmo verificar

149
00:08:01,940 --> 00:08:03,350
que no sean lo mismo.

150
00:08:04,500 --> 00:08:05,520
Podemos hacer eso realmente fcil.

151
00:08:05,520 --> 00:08:08,920
En lugar de ==, voy a usar! =.

152
00:08:11,629 --> 00:08:13,800
Y eso nos dar lo opuesto a

153
00:08:13,800 --> 00:08:15,200
lo que esto nos dar.

154
00:08:15,200 --> 00:08:18,210
Si esto nos da verdad, esto debera darnos falso.

155
00:08:20,300 --> 00:08:21,133
Corramos eso.

156
00:08:21,133 --> 00:08:23,040
Voy a escribir cinco de nuevo, y ahora

157
00:08:23,040 --> 00:08:25,970
puedes ver que somos Verdaderos, y luego obtenemos Falso, porque esto es cierto.

158
00:08:25,970 --> 00:08:26,900
Ellos son lo mismo.

159
00:08:26,900 --> 00:08:27,990
Esto es falso

160
00:08:27,990 --> 00:08:31,170
Cinco no es igual a cinco no es cierto,

161
00:08:31,170 --> 00:08:32,320
porque son iguales.

162
00:08:34,140 --> 00:08:34,973
Bueno.

163
00:08:36,300 --> 00:08:40,440
Ahora, tambin me gustara hablar con usted sobre la combinacin de Booleanos.

164
00:08:42,070 --> 00:08:44,200
Por ejemplo, imagina que quieres comprobar si alguien

165
00:08:44,200 --> 00:08:46,730
tiene ms de 18 aos y menos de 65.

166
00:08:46,730 --> 00:08:49,800
Eso es algo comn de hacer en los censos de poblacin.

167
00:08:49,800 --> 00:08:50,680
Censos?

168
00:08:50,680 --> 00:08:51,970
Censi.

169
00:08:51,970 --> 00:08:55,050
No s, en el censo, normalmente, por

170
00:08:55,050 --> 00:08:57,170
ejemplo, verifica algo as.

171
00:08:57,170 --> 00:08:58,070
Fcil de hacer eso

172
00:08:58,070 --> 00:09:03,070
Tienes edad> = 18, y solo escribes y.

173
00:09:03,270 --> 00:09:04,700
Python es tan increble.

174
00:09:05,770 --> 00:09:07,300
Y la edad &lt;65.

175
00:09:07,300 --> 00:09:09,620
As que tienes estos dos booleanos aqu,

176
00:09:10,872 --> 00:09:12,890
y el y simplemente los une.

177
00:09:12,890 --> 00:09:16,050
Entonces entiendes esto, y entiendes eso, y

178
00:09:16,050 --> 00:09:19,810
por supuesto, es cierto, tienen ms de 18 aos

179
00:09:19,810 --> 00:09:23,410
y menos de 65, si ambos son ciertos,

180
00:09:23,410 --> 00:09:26,090
el resultado final tambin es cierto.

181
00:09:26,090 --> 00:09:28,440
Entonces, creemos algunas variables.

182
00:09:28,440 --> 00:09:30,840
Verdadero y verdadero

183
00:09:30,840 --> 00:09:34,280
Si ambas cosas son verdaderas al lado de y, el

184
00:09:34,280 --> 00:09:35,960
s ser igual a True.

185
00:09:38,200 --> 00:09:40,610
Y, por supuesto, si es Verdadero y

186
00:09:41,950 --> 00:09:44,450
Falso, entonces no ser igual a Falso,

187
00:09:44,450 --> 00:09:47,600
porque este es verdadero, pero este no lo es.

188
00:09:47,600 --> 00:09:50,670
En nuestro ejemplo de mayores de 18 y menores de 65

189
00:09:50,670 --> 00:09:53,990
aos, esto sera que no tienen menos de 65 aos, por lo

190
00:09:53,990 --> 00:09:55,310
tanto, probablemente no est dentro

191
00:09:55,310 --> 00:09:57,570
de ese rango de edad que deseamos.

192
00:09:57,570 --> 00:10:00,760
Verdadero y falso siempre nos dar falso.

193
00:10:01,700 --> 00:10:02,533
Bueno.

194
00:10:04,270 --> 00:10:06,690
Una vez ms, podemos verificar que eso

195
00:10:06,690 --> 00:10:09,780
sea correcto ejecutando eso y ingresando cinco, por supuesto,

196
00:10:09,780 --> 00:10:12,180
porque an tenemos nuestro nmero Ingrese aqu,

197
00:10:13,060 --> 00:10:16,540
y luego notamos cmo obtenemos falso como la tercera cosa

198
00:10:16,540 --> 00:10:19,470
all porque verdadero y falso es siempre falso .

199
00:10:21,670 --> 00:10:25,650
Entonces tambin tenemos o en lugar de y.

200
00:10:25,650 --> 00:10:29,940
O est acostumbrado y esta es una forma un poco extraa de

201
00:10:29,940 --> 00:10:32,690
hacerlo, y realmente voy a escribir eso, solo

202
00:10:32,690 --> 00:10:36,440
para que tengas un texto para colgar cuando digo esto.

203
00:10:36,440 --> 00:10:41,440
Y voy a decir o se usa para obtener el segundo valor

204
00:10:42,240 --> 00:10:44,240
si el primero es falso.

205
00:10:45,660 --> 00:10:50,660
Si el primero es cierto, obtiene el primer valor, de acuerdo?

206
00:10:51,000 --> 00:10:53,100
Ahora, esto va a sonar

207
00:10:53,100 --> 00:10:55,474
extrao, pero hagmosle una pregunta.

208
00:10:55,474 --> 00:10:58,680
Which_one_is_it = Verdadero o Falso.

209
00:11:00,020 --> 00:11:03,460
Qu valor le dar a esta variable?

210
00:11:03,460 --> 00:11:07,630
Recuerde, o se usa para obtener el segundo

211
00:11:07,630 --> 00:11:12,510
valor, ese es este, si el primero es falso.

212
00:11:13,430 --> 00:11:14,620
Pero este es verdad.

213
00:11:14,620 --> 00:11:18,090
Si el primero es verdadero, obtiene el primer valor.

214
00:11:18,090 --> 00:11:20,100
Entonces, cul de estos dos va

215
00:11:20,100 --> 00:11:22,380
a ser, el primero o el segundo?

216
00:11:25,870 --> 00:11:26,960
Espero que tengas eso.

217
00:11:26,960 --> 00:11:29,310
Como el primer valor es Verdadero,

218
00:11:29,310 --> 00:11:32,210
el o nos dar el primer valor.

219
00:11:32,210 --> 00:11:33,400
Entonces, cul es?

220
00:11:33,400 --> 00:11:34,670
Va a ser cierto.

221
00:11:35,590 --> 00:11:37,820
Sintete libre por cierto para pausar este video a medida

222
00:11:37,820 --> 00:11:39,990
que avanzamos e imprimir cosas y jugar con las cosas.

223
00:11:39,990 --> 00:11:41,760
Esa es realmente la mejor manera de programar.

224
00:11:41,760 --> 00:11:44,280
No voy a parar y perder tu tiempo haciendo eso.

225
00:11:44,280 --> 00:11:46,500
Por supuesto que queremos ser rpidos.

226
00:11:46,500 --> 00:11:48,610
Pero, no obstante, la razn por la que te

227
00:11:48,610 --> 00:11:50,810
pido que escribas este cdigo junto a m no es

228
00:11:50,810 --> 00:11:53,710
solo para que lo copies, sino tambin para que puedas jugar con l.

229
00:11:57,070 --> 00:11:58,620
Del mismo modo, qu hay de este?

230
00:11:59,530 --> 00:12:01,150
Falso o Verdadero.

231
00:12:01,150 --> 00:12:02,870
Cul ser?

232
00:12:04,500 --> 00:12:06,790
A Second_one se le asignar qu valor?

233
00:12:09,550 --> 00:12:12,180
De nuevo, siguiendo esta afirmacin, el o se

234
00:12:12,180 --> 00:12:14,340
usa para obtener el segundo valor

235
00:12:14,340 --> 00:12:16,020
si el primero es falso.

236
00:12:16,020 --> 00:12:17,670
El primero aqu es

237
00:12:17,670 --> 00:12:20,760
falso, entonces conseguimos que el segundo sea verdadero.

238
00:12:20,760 --> 00:12:24,720
En segundo lugar, la variable second_one va a ser True.

239
00:12:28,000 --> 00:12:31,480
Y por supuesto para el first_one, haremos algo

240
00:12:31,480 --> 00:12:35,700
que siempre nos dar el primer valor, True o True.

241
00:12:36,750 --> 00:12:38,440
No importa si obtendramos el

242
00:12:38,440 --> 00:12:40,440
primer o el segundo valor en

243
00:12:40,440 --> 00:12:42,760
este caso, siempre tendremos True asignado a

244
00:12:42,760 --> 00:12:44,760
este porque solo hay para elegir.

245
00:12:45,710 --> 00:12:48,250
Pero, por supuesto, usted sabe que esto

246
00:12:48,250 --> 00:12:51,390
ser completamente ignorado porque el primer valor es Verdadero.

247
00:12:51,390 --> 00:12:52,940
As que siempre vamos a conseguir eso.

248
00:12:54,160 --> 00:12:59,160
De hecho, si tuviera aqu una expresin matemtica compleja, que

249
00:13:00,380 --> 00:13:02,550
puede hacer, por cierto,

250
00:13:03,430 --> 00:13:06,160
esto no se calculara en absoluto.

251
00:13:06,160 --> 00:13:10,410
Python ignora todo porque el primero es verdad.

252
00:13:10,410 --> 00:13:12,650
Entonces, por qu debera calcular

253
00:13:12,650 --> 00:13:15,470
algo si siempre obtendrs el primer valor?

254
00:13:17,910 --> 00:13:19,690
Y, por supuesto, tenemos False

255
00:13:19,690 --> 00:13:21,750
o False, y eso no te

256
00:13:21,750 --> 00:13:24,710
dar ninguno de ellos, o de hecho, el segundo, False.

257
00:13:24,710 --> 00:13:27,730
No va a ser cierto, pero como el primer valor

258
00:13:27,730 --> 00:13:29,100
no es verdadero, te dar

259
00:13:29,100 --> 00:13:30,980
el segundo valor, que es falso.

260
00:13:31,820 --> 00:13:32,653
Bueno.

261
00:13:34,050 --> 00:13:39,050
Y entonces la o es una construccin realmente interesante aqu, una comparacin

262
00:13:40,100 --> 00:13:42,100
realmente interesante, y la usaremos

263
00:13:42,100 --> 00:13:44,750
mucho ms al final del curso

264
00:13:44,750 --> 00:13:49,650
a medida que descubra algunas formas realmente tiles de usar eso.

265
00:13:50,800 --> 00:13:55,800
Ahora, creemos otra variable que voy a llamar no

266
00:13:55,800 --> 00:14:00,320
False, y esta es otra construccin que podemos

267
00:14:00,320 --> 00:14:03,330
usar para comparar y cambiar Booleanos.

268
00:14:03,330 --> 00:14:06,710
Probablemente puedas adivinar qu va a hacer False.

269
00:14:08,530 --> 00:14:12,200
Te dar lo que no es falso, lo cual es cierto.

270
00:14:12,200 --> 00:14:14,600
Entonces esto va a ser cierto.

271
00:14:15,680 --> 00:14:19,070
Y otra variable no va a ser True,

272
00:14:19,070 --> 00:14:21,990
lo que por supuesto te dar False.

273
00:14:21,990 --> 00:14:25,820
Entonces, no va a invertir lo que sea que est detrs de eso.

274
00:14:26,730 --> 00:14:29,160
Entonces False no te dar lo opuesto a

275
00:14:29,160 --> 00:14:31,900
False; no Verdadero te dar lo opuesto a Verdadero.

276
00:14:34,791 --> 00:14:37,507
Y, por supuesto, todo esto, todo esto o lo que se

277
00:14:37,507 --> 00:14:40,250
puede y lo que no se puede usar tambin con variables.

278
00:14:40,250 --> 00:14:41,860
No tiene que usarlos con verdadero

279
00:14:41,860 --> 00:14:44,580
y falso ni con nmeros ni nada de eso.

280
00:14:44,580 --> 00:14:45,930
Y podemos tener dos variables.

281
00:14:45,930 --> 00:14:48,600
Is_programmer es True, y is_learning es False.

282
00:14:50,370 --> 00:14:52,570
No es verdad, estamos aprendiendo aqu.

283
00:14:52,570 --> 00:14:57,570
Y lo asombroso ser cuando ambos somos programadores y

284
00:14:59,490 --> 00:15:02,030
estamos aprendiendo, is_programmer y is_learning.

285
00:15:05,500 --> 00:15:07,550
De acuerdo, entonces, de nuevo, solo otro ejemplo

286
00:15:07,550 --> 00:15:08,880
de usar el y aqu.

287
00:15:08,880 --> 00:15:10,590
Tenemos is_programmer, que es True,

288
00:15:10,590 --> 00:15:12,210
e is_learning, que es False.

289
00:15:12,210 --> 00:15:13,850
Tan asombroso va a ser,

290
00:15:16,460 --> 00:15:19,610
lo tienes, va a ser falso, porque el y nos

291
00:15:19,610 --> 00:15:22,570
va a dar si ambos son verdaderos o no.

292
00:15:22,570 --> 00:15:25,940
Si alguno o ambos son falsos, nos dar falso.

293
00:15:26,820 --> 00:15:29,390
Por lo tanto, vamos a ser

294
00:15:29,390 --> 00:15:33,570
un poco less_awesome y decir is_programmer y no is_learning.

295
00:15:35,010 --> 00:15:37,240
Si no ests aprendiendo, eres un poco menos

296
00:15:37,240 --> 00:15:38,510
impresionante que si ests aprendiendo.

297
00:15:38,510 --> 00:15:40,500
Por supuesto, gracias por tomar este curso.

298
00:15:40,500 --> 00:15:43,300
Y tambin, como programador, siempre tendr que

299
00:15:43,300 --> 00:15:45,880
estar aprendiendo para poder continuar desarrollando sus

300
00:15:45,880 --> 00:15:48,780
habilidades y continuar aprendiendo sobre el software.

301
00:15:48,780 --> 00:15:51,690
El software est creciendo y cambiando muy rpido, as que

302
00:15:51,690 --> 00:15:52,750
si no ests aprendiendo,

303
00:15:52,750 --> 00:15:55,150
sers un poco menos impresionante con el tiempo.

304
00:15:56,280 --> 00:15:59,160
Y, por supuesto, is_programmer y no

305
00:15:59,160 --> 00:16:02,370
is_learning va a ser cierto, porque is_learning

306
00:16:02,370 --> 00:16:05,330
no va a evaluar True, viendo

307
00:16:05,330 --> 00:16:06,980
cmo is_learning es False.

308
00:16:06,980 --> 00:16:09,640
Not False nos dar True, entonces

309
00:16:09,640 --> 00:16:12,140
eso es Verdadero y Verdadero.

310
00:16:12,140 --> 00:16:16,760
El resultado final es Verdadero, est bien?

311
00:16:16,760 --> 00:16:19,060
Finalmente, un ejemplo un poco

312
00:16:19,060 --> 00:16:21,270
ms artificial, vamos a agregar

313
00:16:21,270 --> 00:16:22,820
si is_designer, y vamos

314
00:16:23,700 --> 00:16:28,360
a decir que es False, y vamos a decir que great_guys

315
00:16:28,360 --> 00:16:33,050
son aquellos que son programadores o diseadores y que estn aprendiendo.

316
00:16:33,910 --> 00:16:37,920
Entonces, la forma de hacerlo es tener las tres declaraciones.

317
00:16:37,920 --> 00:16:39,840
Ahora, he puesto algunos

318
00:16:39,840 --> 00:16:44,840
corchetes aqu para darte una pista sobre cmo puedes agrupar estos

319
00:16:44,920 --> 00:16:48,290
booleanos usando corchetes, al igual que las matemticas.

320
00:16:48,290 --> 00:16:50,190
Puedes usar corchetes para agrupar cosas.

321
00:16:51,630 --> 00:16:55,740
As que intente y cree esta expresin

322
00:16:55,740 --> 00:17:00,420
donde deben ser programadores o diseadores y aprender.

323
00:17:01,850 --> 00:17:03,760
Entonces tienen que ser programadores o

324
00:17:03,760 --> 00:17:05,650
diseadores, y deben estar aprendiendo.

325
00:17:05,650 --> 00:17:08,280
Cmo desarrollaras ese booleano?

326
00:17:10,000 --> 00:17:12,780
Nuevamente, buen momento para pausar el video y probarlo.

327
00:17:16,260 --> 00:17:18,440
La forma en que lo hara es lo primero que

328
00:17:18,440 --> 00:17:20,440
queremos hacer es comprobar si son programadores o diseadores.

329
00:17:20,440 --> 00:17:22,350
As que pondra eso entre

330
00:17:22,350 --> 00:17:24,480
corchetes y dira is_programmer o is_designer.

331
00:17:25,870 --> 00:17:28,130
Ahora, esto se ejecutar primero, y

332
00:17:28,130 --> 00:17:31,470
nos dar True si alguno de ellos es verdadero,

333
00:17:32,640 --> 00:17:36,630
e is_learning, y esta ser la segunda parte fuera de

334
00:17:36,630 --> 00:17:39,230
los corchetes para que se ejecute despus

335
00:17:39,230 --> 00:17:41,640
de que hayamos evaluado esto aqu.

336
00:17:43,460 --> 00:17:44,510
Bueno.

337
00:17:44,510 --> 00:17:46,940
Ahora tenemos verdadero y falso, por

338
00:17:46,940 --> 00:17:51,120
lo que great_guy tristemente va a ser falso, porque no

339
00:17:51,120 --> 00:17:53,440
estamos aprendiendo en este momento.

340
00:17:53,440 --> 00:17:55,780
Por supuesto, podemos cambiar eso y hacernos impresionantes.

341
00:17:55,780 --> 00:17:56,950
Hagamoslo.

342
00:18:00,300 --> 00:18:04,790
Ahora podemos imprimir (great_guy) y debemos salir con la verdad.

343
00:18:06,160 --> 00:18:08,900
Y de hecho, all abajo, nos hacemos

344
00:18:08,900 --> 00:18:10,640
Verdaderos, porque somos geniales.

345
00:18:10,640 --> 00:18:12,320
Pasemos al siguiente video y

346
00:18:12,320 --> 00:18:14,540
aprenderemos un poco ms sobre Python.

347
00:18:14,540 --> 00:18:15,490
Te ver all.

