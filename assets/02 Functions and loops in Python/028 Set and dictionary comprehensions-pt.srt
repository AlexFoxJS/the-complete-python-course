1
00:00:00,240 --> 00:00:02,010
Instrutor: Ol, e bem vindos de

2
00:00:02,010 --> 00:00:04,290
volta, neste vdeo, continuamos com as compreenses e

3
00:00:04,290 --> 00:00:06,750
observamos os conjuntos e a compreenso do dicionrio.

4
00:00:08,880 --> 00:00:11,120
No ltimo vdeo, vimos como

5
00:00:11,120 --> 00:00:14,170
fazer algo realmente adequado para sets.

6
00:00:14,170 --> 00:00:18,730
Ns temos duas listas, ns de alguma forma as fizemos combinar.

7
00:00:18,730 --> 00:00:19,920
Ento, construmos

8
00:00:19,920 --> 00:00:23,580
essa compreenso que calcularia a unio deles.

9
00:00:24,820 --> 00:00:28,490
Agora, se voc no percebeu que este  um excelente exemplo para conjuntos, ento estou

10
00:00:29,550 --> 00:00:32,170
lhe dizendo agora, este  um excelente exemplo para conjuntos.

11
00:00:32,170 --> 00:00:34,940
Vamos dizer que temos nossos amigos, e

12
00:00:34,940 --> 00:00:39,940
esse  um conjunto de Rolf, Anna e Charlie, e ento temos

13
00:00:41,480 --> 00:00:44,160
nossos convidados, que ser outro set.

14
00:00:46,830 --> 00:00:48,320
Agora, copie isso das minhas

15
00:00:48,320 --> 00:00:51,110
anotaes porque eu no quero te entediar muito.

16
00:00:51,110 --> 00:00:56,110
 claro que, se fossem maisculas, voc teria que

17
00:00:56,930 --> 00:01:01,460
ter uma compreenso definida aqui para transform-las em minsculas.

18
00:01:01,460 --> 00:01:04,080
A maneira que voc faria isso  que

19
00:01:04,080 --> 00:01:09,080
voc diria que os convidados mais baixos so o nome mais baixo para nome e

20
00:01:09,140 --> 00:01:11,974
convidados, exatamente a mesma coisa que a compreenso do

21
00:01:11,974 --> 00:01:14,090
conjunto como a compreenso da lista.

22
00:01:14,090 --> 00:01:16,780
Tudo o que voc faz  substituir os colchetes,

23
00:01:16,780 --> 00:01:20,620
que dizem que  uma lista por chaves, que diz que  um conjunto.

24
00:01:20,620 --> 00:01:22,629
Fora isso, exatamente a mesma

25
00:01:22,629 --> 00:01:27,330
coisa, e tudo que voc tem agora  esse conjunto de convidados minsculos.

26
00:01:27,330 --> 00:01:29,180
Claro, nosso set j est em

27
00:01:29,180 --> 00:01:32,404
minsculas porque eu acho que voc j sabe como fazer isso.

28
00:01:32,404 --> 00:01:35,120
Agora, se voc quisesse calcular os

29
00:01:36,630 --> 00:01:41,090
amigos atuais, voc poderia nomear, ponto, maiscula para o

30
00:01:41,090 --> 00:01:46,090
nome dos convidados, se o nome dos amigos, tudo bem.

31
00:01:51,390 --> 00:01:56,110
No entanto, existe uma maneira ainda melhor de fazer isso, que

32
00:01:56,110 --> 00:02:01,110
 que os amigos presentes so amigos dos convidados do sindicato.

33
00:02:04,810 --> 00:02:08,856
Agora, isto , eu apenas cliquei em meus dedos, a propsito.

34
00:02:08,856 --> 00:02:11,630
Isso era muito moderno, mesmo para mim.

35
00:02:11,630 --> 00:02:15,270
 por isso que os hspedes podem ser realmente teis.

36
00:02:15,270 --> 00:02:17,260
Quando voc precisa calcular quando as coisas esto

37
00:02:17,260 --> 00:02:20,360
combinando ou quando as coisas so diferentes, os conjuntos podem ser realmente teis.

38
00:02:20,360 --> 00:02:24,210
Claro, isso no vai acabar como nomes maisculos.

39
00:02:24,210 --> 00:02:26,560
Se voc tiver que capitalizar, ento voc

40
00:02:26,560 --> 00:02:29,890
ter que fazer o nome do ponto capitalizado para o nome.

41
00:02:31,250 --> 00:02:34,050
Veja, isso d a voc o conjunto de ambos os nomes,

42
00:02:34,050 --> 00:02:36,040
e ento tudo o que voc est fazendo

43
00:02:36,040 --> 00:02:39,030
 passar por cima deles e capitaliz-los, colocando-os em um novo

44
00:02:39,030 --> 00:02:41,200
conjunto, mas agora voc no precisa mais verificar

45
00:02:41,200 --> 00:02:43,610
se um est no outro. e assim por diante.

46
00:02:43,610 --> 00:02:47,660
Tudo o que voc faz agora  que voc tem aqueles que combinam, e ento

47
00:02:47,660 --> 00:02:49,650
voc pode fazer o que quiser com eles.

48
00:02:53,100 --> 00:02:54,740
Finalmente, a compreenso

49
00:02:54,740 --> 00:02:59,060
do dicionrio  extremamente poderosa e  extremamente subutilizada.

50
00:02:59,060 --> 00:03:02,870
Digamos que voc tenha alguns nomes, como por exemplo

51
00:03:03,920 --> 00:03:07,500
Rolf, Anna e Charlie, e eu sempre recorro a

52
00:03:07,500 --> 00:03:09,500
esses nomes, porque na verdade

53
00:03:09,500 --> 00:03:12,210
no conheo muitos nomes ingleses ou ingleses,

54
00:03:12,210 --> 00:03:16,890
e o tempo passado parece ir ser 10, 15 e oito.

55
00:03:17,960 --> 00:03:19,530
Isso  bem parecido

56
00:03:19,530 --> 00:03:23,820
com o dicionrio que vimos anteriormente, onde voc teria Rolf

57
00:03:23,820 --> 00:03:28,820
com 10 anos, Anna com 15 anos e Charlie com oito.

58
00:03:31,130 --> 00:03:33,058
Ento, queremos construir este dicionrio

59
00:03:33,058 --> 00:03:34,900
a partir dessas duas listas.

60
00:03:37,862 --> 00:03:39,850
Como fazer isso, bastante simples.

61
00:03:39,850 --> 00:03:43,880
Os amigos vistos pela ltima vez so iguais, agora

62
00:03:43,880 --> 00:03:47,010
vamos ter uma compreenso definida aqui, nomes

63
00:03:49,758 --> 00:03:54,758
que eu vi pela ltima vez para nomes de len lenos.

64
00:03:57,370 --> 00:04:00,560
Woof, isso  alguma compreenso l.

65
00:04:02,750 --> 00:04:05,420
Eu te disse mais cedo no curso que um

66
00:04:05,420 --> 00:04:08,010
conjunto, em vez de o dicionrio  como

67
00:04:08,010 --> 00:04:10,000
um conjunto, exceto em vez de

68
00:04:10,000 --> 00:04:14,090
bons valores normais antigos, voc tem valores e tipo de chaves e seus valores.

69
00:04:15,230 --> 00:04:17,900
Mesma coisa com a compreenso do dicionrio.

70
00:04:17,900 --> 00:04:20,960
Voc acabou de obter o clon no meio, e

71
00:04:20,960 --> 00:04:24,260
isso diz a voc que este  um dicionrio, e

72
00:04:24,260 --> 00:04:27,570
voc pode colocar um par de valores-chave dentro deste dicionrio

73
00:04:27,570 --> 00:04:32,570
e o que voc est fazendo  obter o i'th ndice do lista de nomes

74
00:04:32,670 --> 00:04:37,670
e o i'th ndice da linha do tempo como lista vista ei  cada um

75
00:04:39,400 --> 00:04:44,220
dos nmeros neste intervalo, e o intervalo  de zero at o comprimento da lista

76
00:04:44,220 --> 00:04:47,140
de nomes, que  trs, ento de zero a

77
00:04:47,140 --> 00:04:49,800
trs no inclusive, isso  zero a dois incluindo.

78
00:04:50,650 --> 00:04:52,170
Ento, a primeira vez que voc

79
00:04:52,170 --> 00:04:56,610
passa, os nomes zero tempo do clon foram vistos pela ltima vez, zero, que  Rolf 10.

80
00:04:56,610 --> 00:05:00,190
Segunda vez, Anna 15, terceira vez, Charlie oito.

81
00:05:02,120 --> 00:05:03,330
Muito bom.

82
00:05:04,710 --> 00:05:08,890
Agora, em vez de fazer isso, porque essa operao  realmente to popular,

83
00:05:08,890 --> 00:05:11,880
ter duas listas e construir um dicionrio a partir

84
00:05:11,880 --> 00:05:14,440
delas, para que voc possa se relacionar com

85
00:05:14,440 --> 00:05:17,410
elas, e elas so um pouco mais acessveis, h

86
00:05:17,410 --> 00:05:20,340
algo que voc pode fazer,  muito melhor.

87
00:05:20,340 --> 00:05:22,640
S estou te dizendo isso como um extra, no

88
00:05:22,640 --> 00:05:25,240
 algo que voc realmente precisa saber, mas  bem popular.

89
00:05:26,220 --> 00:05:29,550
Voc pode fazer amigos visto pela ltima vez

90
00:05:29,550 --> 00:05:34,480
 dit de zip de nomes e tempo visto pela ltima vez.

91
00:05:36,720 --> 00:05:39,610
Ok, ento se voc est coando a cabea agora, isso 

92
00:05:39,610 --> 00:05:41,840
bom, o que significa que voc est prestando ateno.

93
00:05:41,840 --> 00:05:45,140
Eu no estou esperando que voc saiba o que est

94
00:05:45,140 --> 00:05:50,140
acontecendo logo de cara, mas um desafio para voc, o que o zip faz?

95
00:05:56,220 --> 00:06:00,350
Espero que voc tenha pausado o vdeo, e talvez voc tenha

96
00:06:00,350 --> 00:06:03,480
publicado um texto, ou talvez tenha pesquisado no Google.

97
00:06:03,480 --> 00:06:04,470
O que eu vou

98
00:06:04,470 --> 00:06:07,790
fazer  imprimir um zip de nomes e o tempo visto pela ltima vez.

99
00:06:11,930 --> 00:06:16,040
Voc tem um objeto zip, que no  to til, e isso

100
00:06:16,040 --> 00:06:19,210
 porque o Python 3. 6 faz algumas coisas

101
00:06:19,210 --> 00:06:23,810
engraadas aqui, e mostra exatamente o que est em segundo plano.

102
00:06:24,800 --> 00:06:28,450
Realmente, o que isso est fazendo 

103
00:06:28,450 --> 00:06:33,450
dar uma lista de casais, Rolf e 10, e

104
00:06:38,910 --> 00:06:43,760
depois Anna e 15, e depois Charlie e oito.

105
00:06:45,010 --> 00:06:48,400
Isto  o que esse zip est fazendo essencialmente.

106
00:06:48,400 --> 00:06:50,660
Eu digo, essencialmente, porque ns vamos olhar mais tarde

107
00:06:50,660 --> 00:06:52,650
no curso do que ele est realmente fazendo,

108
00:06:52,650 --> 00:06:55,290
mas isso  mais ou menos o que est fazendo.

109
00:06:55,290 --> 00:06:59,680
Quando voc chama dit sobre isso, voc pega um

110
00:07:01,980 --> 00:07:06,510
dicionrio combinando estes dois como voc pode ver aqui embaixo.

111
00:07:09,090 --> 00:07:14,090
Assim, quando voc faz o ditado de zip de nomes e o tempo visto

112
00:07:14,740 --> 00:07:19,690
pela ltima vez, isso fornece uma lista de casais para cada um desses elementos

113
00:07:19,690 --> 00:07:24,340
e, em seguida, o dict executa esses pares em pares de valores-chave.

114
00:07:24,340 --> 00:07:27,610
Se voc no acredita em mim, apenas

115
00:07:27,610 --> 00:07:31,230
imprima isso e execute-o, e a est.

116
00:07:32,150 --> 00:07:34,580
Esta foi apenas uma informao extra

117
00:07:34,580 --> 00:07:39,010
para voc aproveitar e zip  bastante popular em Python.

118
00:07:39,010 --> 00:07:42,100
Foi chamado i zip no Python 2. 7, ento talvez voc saiba como

119
00:07:42,100 --> 00:07:44,920
se tivesse feito algum Python antes, mas no Python 3,

120
00:07:44,920 --> 00:07:47,490
ele  chamado de zip, e  uma coisa

121
00:07:47,490 --> 00:07:50,350
muito popular que voc pode ver quando olha para cdigo Python.

122
00:07:50,350 --> 00:07:52,760
Alm disso, se voc tiver vrias listas, e

123
00:07:52,760 --> 00:07:54,330
voc quiser mescl-las, junte-as em

124
00:07:54,330 --> 00:07:56,610
um dicionrio,  uma ferramenta realmente til.

125
00:07:57,810 --> 00:07:59,920
De qualquer forma,  isso para este vdeo.

126
00:07:59,920 --> 00:08:02,680
No vou ficar com voc por mais tempo, isso 

127
00:08:02,680 --> 00:08:04,590
a compreenso de conjuntos e listas, 

128
00:08:04,590 --> 00:08:06,540
apenas definir e compreender o dicionrio, da

129
00:08:06,540 --> 00:08:08,530
mesma forma que a compreenso da lista,

130
00:08:08,530 --> 00:08:11,420
apenas voc tem que usar chaves em vez disso.

131
00:08:11,420 --> 00:08:14,250
 isso, e eu vejo voc no prximo.

