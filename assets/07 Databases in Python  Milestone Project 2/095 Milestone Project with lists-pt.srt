1
00:00:00,420 --> 00:00:01,940
Instrutor: Ol e bem vindo de volta.

2
00:00:01,940 --> 00:00:03,610
Neste vdeo, vamos implementar

3
00:00:03,610 --> 00:00:05,450
nosso Projeto Milestone dois usando

4
00:00:05,450 --> 00:00:09,770
nosso banco de dados em memria, que  uma lista do Python.

5
00:00:09,770 --> 00:00:11,640
Eu realmente espero que voc tenha dado

6
00:00:11,640 --> 00:00:13,040
uma chance seguindo o resumo

7
00:00:13,040 --> 00:00:15,570
do projeto e voc tentou implementar este projeto por

8
00:00:15,570 --> 00:00:18,370
conta prpria, e espero que voc tenha conseguido e feito funcionar.

9
00:00:18,370 --> 00:00:20,290
Voc sempre pode fazer perguntas no curso Q e A.

10
00:00:20,290 --> 00:00:21,870
Se voc precisar de ajuda com algo especfico

11
00:00:21,870 --> 00:00:22,940
antes de seguir em frente.

12
00:00:24,010 --> 00:00:25,680
Mas agora que voc est

13
00:00:25,680 --> 00:00:28,030
aqui, vamos implementar esse projeto usando listas como

14
00:00:28,030 --> 00:00:29,930
nosso banco de dados em memria.

15
00:00:31,440 --> 00:00:33,240
Naturalmente, a primeira coisa que faremos

16
00:00:33,240 --> 00:00:36,050
 definir a interface do usurio para que o usurio

17
00:00:36,050 --> 00:00:39,030
possa interagir com o nosso programa e, em seguida, adicionar funcionalidade

18
00:00:39,030 --> 00:00:39,900
pouco a pouco.

19
00:00:42,100 --> 00:00:43,880
A primeira coisa que temos

20
00:00:43,880 --> 00:00:45,680
 pedir ao usurio para inserir

21
00:00:45,680 --> 00:00:47,120
sua escolha como A,

22
00:00:47,120 --> 00:00:48,630
L, R, D ou Q.

23
00:00:48,630 --> 00:00:51,290
Se eles entrarem em Q, no entraremos

24
00:00:51,290 --> 00:00:54,640
nesse loop, ento temos que lidar com quatro opes.

25
00:00:55,500 --> 00:00:56,960
Se a entrada do

26
00:00:56,960 --> 00:00:57,793
usurio for

27
00:00:59,690 --> 00:01:01,710
A, se a entrada do usurio

28
00:01:03,550 --> 00:01:06,020
for L, se a entrada do usurio

29
00:01:07,410 --> 00:01:09,600
for R e se a entrada

30
00:01:09,600 --> 00:01:10,470
do usurio for D.

31
00:01:12,120 --> 00:01:14,020
E se no for nenhum deles,

32
00:01:14,880 --> 00:01:17,670
podemos imprimir um comando desconhecido, por favor, tente novamente.

33
00:01:19,590 --> 00:01:20,550
OK.

34
00:01:20,550 --> 00:01:22,970
Agora,  claro, para voltar ao topo do

35
00:01:22,970 --> 00:01:24,660
loop com uma entrada de

36
00:01:24,660 --> 00:01:28,100
usurio diferente, precisamos redefinir a entrada do usurio para outra coisa.

37
00:01:28,100 --> 00:01:31,120
Para isso, vamos perguntar ao usurio novamente, mas certifique-se

38
00:01:31,120 --> 00:01:34,820
de que no esteja dentro do else ou de qualquer lugar,

39
00:01:34,820 --> 00:01:36,620
apenas aqui dentro do loop

40
00:01:36,620 --> 00:01:38,430
fora de qualquer uma dessas instrues.

41
00:01:41,120 --> 00:01:44,410
Ns tambm, eu tambm te dei algumas dicas do que

42
00:01:44,410 --> 00:01:48,380
voc poderia chamar de suas funes, ento eu vou usar esses nomes aqui.

43
00:01:48,380 --> 00:01:51,140
Ento, vou chamar Prompt Add Book a

44
00:01:51,140 --> 00:01:54,730
funo que ainda no existe quando eles digitam A.

45
00:01:54,730 --> 00:01:57,900
Ns vamos chamar List Books quando eles digitarem L.

46
00:01:57,900 --> 00:02:01,110
Prompt Read Book quando eles digitam R.

47
00:02:01,110 --> 00:02:04,500
E avisar Excluir livro quando eles digitam D.

48
00:02:04,500 --> 00:02:07,380
A razo pela qual essas funes tm Prompt na frente delas  porque

49
00:02:07,380 --> 00:02:10,170
essas funes no esto indo apenas para fazer as coisas, elas tambm

50
00:02:10,170 --> 00:02:12,530
vo pedir algo ao usurio e essa  apenas a

51
00:02:12,530 --> 00:02:14,630
minha maneira de dizer a mim mesmo, voc sabe,

52
00:02:14,630 --> 00:02:16,280
essas funes no so vai perguntar ao usurio.

53
00:02:16,280 --> 00:02:18,960
Eles tm que pedir ao usurio algumas informaes para

54
00:02:18,960 --> 00:02:20,500
fazer o que querem fazer.

55
00:02:20,500 --> 00:02:22,240
Se voc quiser adicionar um livro, precisar perguntar ao

56
00:02:22,240 --> 00:02:23,300
usurio o nome e o autor.

57
00:02:23,300 --> 00:02:25,270
Se voc quiser ler um livro, voc tem que perguntar

58
00:02:25,270 --> 00:02:27,550
ao usurio pelo menos o nome, e se voc quiser deletar

59
00:02:27,550 --> 00:02:29,700
um livro, voc tambm tem que perguntar pelo menos pelo nome.

60
00:02:31,690 --> 00:02:35,260
Ok, ento vamos em frente e implementar nossas funes.

61
00:02:36,270 --> 00:02:38,640
O estilo do Python sugere que deixemos duas linhas

62
00:02:38,640 --> 00:02:41,110
em branco entre duas funes, ento faremos exatamente isso.

63
00:02:41,110 --> 00:02:45,830
E ento vamos definir nossa funo Solicitar Adicionar Livro.

64
00:02:45,830 --> 00:02:47,270
O que isso vai fazer  perguntar

65
00:02:47,270 --> 00:02:48,580
ao usurio por nome e autor.

66
00:02:48,580 --> 00:02:49,440
Ento, o nome

67
00:02:53,797 --> 00:02:54,630
e o autor

68
00:02:58,480 --> 00:03:00,150
e tudo o que ele

69
00:03:00,150 --> 00:03:03,920
vai fazer  pedir ao banco de dados para salvar este livro.

70
00:03:03,920 --> 00:03:06,740
Observe como ele no vai interagir diretamente com a

71
00:03:06,740 --> 00:03:09,730
lista de livros, mas pedir ao banco de dados

72
00:03:09,730 --> 00:03:11,870
para salvar o livro na lista.

73
00:03:12,860 --> 00:03:15,720
Ento, o que fazer aqui  dizer banco de dados ponto

74
00:03:16,560 --> 00:03:17,990
adicionar livro, nome e autor.

75
00:03:19,450 --> 00:03:22,030
E quando chamamos isso, passamos o

76
00:03:22,030 --> 00:03:24,750
valor de name, string, e o

77
00:03:24,750 --> 00:03:29,080
valor de author, outra string, para nossa funo add book

78
00:03:29,080 --> 00:03:32,040
e agora usaremos essa varivel global para

79
00:03:32,040 --> 00:03:34,960
anexar este dicionrio que representa nosso livro.

80
00:03:34,960 --> 00:03:38,200
Tem um nome, um autor e um status

81
00:03:38,200 --> 00:03:40,310
vermelho que comea como falso.

82
00:03:40,310 --> 00:03:42,660
Ns vamos ser capazes de mudar isso mais tarde.

83
00:03:44,490 --> 00:03:45,323
OK.

84
00:03:46,560 --> 00:03:49,460
Agora podemos excluir nosso primeiro comentrio, pois

85
00:03:49,460 --> 00:03:50,710
j o realizamos.

86
00:03:50,710 --> 00:03:54,720
Mais uma vez, deixando duas linhas, podemos dizer livros de listas.

87
00:03:55,770 --> 00:03:58,640
E os livros de lista vo pedir o banco

88
00:03:58,640 --> 00:03:59,540
de dados para

89
00:04:03,940 --> 00:04:06,850
todos os livros, e ele ir imprimi-los um por um.

90
00:04:06,850 --> 00:04:09,810
Ento, para livros em livros, ns

91
00:04:11,190 --> 00:04:12,990
vamos imprimir alguma

92
00:04:12,990 --> 00:04:14,590
representao do livro.

93
00:04:14,590 --> 00:04:15,950
Ns podemos fazer isso depois.

94
00:04:15,950 --> 00:04:17,710
Por enquanto, vamos imprimir o

95
00:04:17,710 --> 00:04:18,690
dicionrio que voltar.

96
00:04:18,690 --> 00:04:20,650
Lembre-se, estamos armazenando

97
00:04:20,650 --> 00:04:22,630
dicionrios, dicionrios vo voltar.

98
00:04:22,630 --> 00:04:25,130
A funo get all books no existe,

99
00:04:25,130 --> 00:04:27,330
ento vamos cri-la no banco de dados.

100
00:04:32,660 --> 00:04:35,140
E o que essa funo deve fazer?

101
00:04:35,140 --> 00:04:37,380
Bem, a fim de obter todos os livros, tudo

102
00:04:37,380 --> 00:04:40,720
o que tem a fazer  retornar a lista aqui que ir conter todos

103
00:04:40,720 --> 00:04:43,100
os nossos livros, ento apenas os livros de retorno serviro.

104
00:04:44,250 --> 00:04:48,100
Quando aumentamos este programa e trabalhamos com arquivos, isso vai

105
00:04:48,100 --> 00:04:50,140
ficar mais complicado,  claro.

106
00:04:50,140 --> 00:04:52,590
Ter que realmente abrir um arquivo e ler

107
00:04:52,590 --> 00:04:55,240
o contedo, e certamente quando formos para os bancos

108
00:04:55,240 --> 00:04:57,340
de dados, ficaremos ainda mais complicados, j

109
00:04:57,340 --> 00:04:59,430
que teremos que nos conectar ao banco

110
00:04:59,430 --> 00:05:00,870
de dados e recuperar os dados.

111
00:05:00,870 --> 00:05:02,860
Mas por enquanto, porque estamos usando um banco

112
00:05:02,860 --> 00:05:05,770
de dados simples na memria, podemos simplesmente retornar os livros l.

113
00:05:08,667 --> 00:05:11,120
Agora podemos excluir nosso comando de listas

114
00:05:11,120 --> 00:05:13,550
de livros desde que j o implementamos.

115
00:05:14,570 --> 00:05:17,650
Vamos passar para o prompt Read Book, e isso tem

116
00:05:17,650 --> 00:05:19,840
que pedir o nome do livro e,

117
00:05:19,840 --> 00:05:23,340
em seguida, ir para o banco de dados e alter-lo para ler.

118
00:05:23,340 --> 00:05:24,530
Assim, nome, insira o nome

119
00:05:30,690 --> 00:05:33,030
do livro que voc acabou de ler e, em

120
00:05:33,030 --> 00:05:34,940
seguida, tudo o que queremos fazer 

121
00:05:34,940 --> 00:05:38,730
dizer que o livro de marcas do banco de dados foi lido com esse nome.

122
00:05:39,930 --> 00:05:41,590
 claro que essa funo

123
00:05:41,590 --> 00:05:44,680
no existe, ento temos que passar para nosso banco de

124
00:05:44,680 --> 00:05:46,220
dados, pontumar P Y e

125
00:05:46,220 --> 00:05:47,870
definir esse livro de marcas

126
00:05:48,970 --> 00:05:51,250
como lido, e  dado um nome.

127
00:05:51,250 --> 00:05:53,750
Este parmetro aqui receber a string que

128
00:05:53,750 --> 00:05:55,450
o usurio digitou, e esse

129
00:05:55,450 --> 00:05:57,270
deve ser o nome do livro.

130
00:05:57,270 --> 00:05:59,680
Ento, como marcaramos um livro como lido, sabendo

131
00:05:59,680 --> 00:06:01,680
que temos uma lista de livros?

132
00:06:06,970 --> 00:06:08,280
Se voc no tentou isso antes,

133
00:06:08,280 --> 00:06:10,400
ento eu espero que voc tenha tentado o vdeo por

134
00:06:10,400 --> 00:06:11,730
um momento e deu uma chance.

135
00:06:11,730 --> 00:06:16,140
Tudo o que fazer  apenas iterar os livros e, se o livro

136
00:06:16,140 --> 00:06:20,540
foi lido, se o livro for igual ao nome que lhe demos, ento

137
00:06:21,800 --> 00:06:23,290
diga que a leitura

138
00:06:24,780 --> 00:06:26,540
do livro agora  verdadeira.

139
00:06:29,760 --> 00:06:32,380
Ok,  isso, voc simplesmente passa por cima

140
00:06:32,380 --> 00:06:33,420
dos livros e,

141
00:06:33,420 --> 00:06:36,170
para cada livro, modifique-o se o nome corresponder.

142
00:06:36,170 --> 00:06:38,870
Claro, isso sugere que, se dois livros

143
00:06:38,870 --> 00:06:43,063
tiverem o mesmo nome, ambos sero alterados para serem lidos, mas,

144
00:06:43,063 --> 00:06:46,290
voc sabe, podemos lidar com esse problema mais tarde.

145
00:06:46,290 --> 00:06:48,010
Se voc quiser,  claro, voc pode

146
00:06:48,010 --> 00:06:50,470
mudar isso para pegar dois argumentos, o nome e o

147
00:06:50,470 --> 00:06:54,180
autor, e isso lhe d um pouco mais de granularidade no que voc faz.

148
00:06:57,160 --> 00:07:00,170
Por fim, vamos excluir esse comentrio aqui e definir o

149
00:07:00,170 --> 00:07:01,680
livro de excluso de prompts.

150
00:07:04,580 --> 00:07:06,580
Mais uma vez, isso vai levar um

151
00:07:13,500 --> 00:07:16,550
nome e vai fazer um banco de dados com o nome

152
00:07:16,550 --> 00:07:18,070
delete book com esse nome.

153
00:07:18,070 --> 00:07:20,930
Naturalmente, isso tambm no existe, ento mais uma vez, vamos

154
00:07:20,930 --> 00:07:23,780
ao nosso banco de dados e definimos essa funo.

155
00:07:27,410 --> 00:07:29,090
Ento, como podemos fazer isso?

156
00:07:29,090 --> 00:07:32,190
Esta  a coisa um pouco mais interessante.

157
00:07:33,220 --> 00:07:37,060
Existem algumas maneiras de excluir um livro.

158
00:07:37,060 --> 00:07:39,860
Pause o vdeo e tente, se ainda no o fez.

159
00:07:44,310 --> 00:07:47,020
Uma das maneiras pelas quais meus alunos

160
00:07:47,020 --> 00:07:52,020
costumam remover um livro  acessar a documentao da lista e ver se

161
00:07:52,420 --> 00:07:54,500
as listas tm alguma maneira

162
00:07:54,500 --> 00:07:55,900
de remover elementos delas.

163
00:07:57,130 --> 00:07:58,990
E normalmente acabamos com isso.

164
00:07:58,990 --> 00:08:00,770
Percorra cada livro, se

165
00:08:00,770 --> 00:08:03,310
o nome corresponder ao que queremos

166
00:08:04,490 --> 00:08:07,990
excluir, ento faa o livro de remoo de pontos,

167
00:08:07,990 --> 00:08:12,990
porque os objetos de lista tm esse mtodo de remoo de pontos

168
00:08:13,530 --> 00:08:16,570
e eles pegam um dos objetos na lista

169
00:08:16,570 --> 00:08:19,520
e permitem remover o objeto completamente da lista.

170
00:08:20,560 --> 00:08:22,480
Ento, isso certamente funcionaria.

171
00:08:24,350 --> 00:08:28,010
No entanto, geralmente  considerado uma prtica ruim

172
00:08:28,010 --> 00:08:30,340
modificar uma lista enquanto voc

173
00:08:30,340 --> 00:08:32,380
faz uma iterao sobre ela.

174
00:08:33,400 --> 00:08:36,030
Isso porque,  medida que voc vai de um elemento

175
00:08:36,030 --> 00:08:37,570
para o outro, os elementos esto

176
00:08:37,570 --> 00:08:39,520
desaparecendo, o Python pode ficar um pouco confuso,

177
00:08:39,520 --> 00:08:42,920
ento geralmente no  uma boa idia remover elementos de uma lista enquanto voc

178
00:08:42,920 --> 00:08:44,220
faz uma iterao sobre ela.

179
00:08:45,390 --> 00:08:47,120
No entanto, esta  uma maneira

180
00:08:47,120 --> 00:08:49,670
que voc poderia faz-lo, e funcionaria na maioria das circunstncias.

181
00:08:50,820 --> 00:08:52,280
Em vez disso, eu

182
00:08:53,920 --> 00:08:54,780
faria isso.

183
00:08:56,110 --> 00:08:59,570
A primeira coisa que queremos fazer  dizer que livros so iguais,

184
00:08:59,570 --> 00:09:01,890
no, essa  nossa varivel l em cima,

185
00:09:01,890 --> 00:09:03,820
e agora vamos usar uma compreenso de

186
00:09:03,820 --> 00:09:04,790
lista com um condicional.

187
00:09:06,254 --> 00:09:08,770
Uma compreenso de lista com uma condicional vai

188
00:09:08,770 --> 00:09:13,160
adicionar cada livro a essa nova lista se o nome do livro no

189
00:09:13,160 --> 00:09:16,250
for igual ao nome que recebemos em nosso argumento.

190
00:09:16,250 --> 00:09:19,330
Adicione cada livro a uma nova lista se o

191
00:09:19,330 --> 00:09:20,450
nome do livro

192
00:09:21,640 --> 00:09:24,280
no for igual ao argumento do nome que

193
00:09:24,280 --> 00:09:26,170
recebemos aqui, o parmetro name, desculpe.

194
00:09:26,170 --> 00:09:28,300
Mais uma vez, gostaria de incentiv-lo a pausar

195
00:09:28,300 --> 00:09:31,350
o vdeo e dar a essa compreenso de lista uma prtica

196
00:09:31,350 --> 00:09:33,560
simples, certifique-se de no ter esquecido como implementar

197
00:09:33,560 --> 00:09:34,910
as compreenses de lista.

198
00:09:34,910 --> 00:09:36,970
E se voc tiver, ento continue

199
00:09:36,970 --> 00:09:38,270
assistindo e vamos implement-lo.

200
00:09:43,110 --> 00:09:45,620
Tudo bem, espero que voc entenda isso, mas se voc

201
00:09:45,620 --> 00:09:47,180
no o fez, est tudo bem.

202
00:09:47,180 --> 00:09:49,110
Tudo o que queremos fazer  criar uma

203
00:09:51,148 --> 00:09:52,590
varivel para livro em livros e,

204
00:09:52,590 --> 00:09:55,110
em seguida, queremos apenas coloc-la dentro da lista, lembre-se que

205
00:09:55,110 --> 00:09:58,270
este  o valor que estamos colocando em nossa nova lista se

206
00:09:58,270 --> 00:09:59,500
o nome do livro no

207
00:10:00,840 --> 00:10:02,440
for igual ao nome do argumento.

208
00:10:02,440 --> 00:10:04,240
Eu vou deletar esse comentrio agora,

209
00:10:04,240 --> 00:10:05,920
j que no precisamos mais dele.

210
00:10:06,820 --> 00:10:08,410
Ento, isso colocar o elemento

211
00:10:08,410 --> 00:10:09,880
book em uma nova

212
00:10:10,920 --> 00:10:13,830
lista de livros em livros, que  a

213
00:10:13,830 --> 00:10:17,840
nossa lista se o nome do livro no for igual ao parmetro.

214
00:10:17,840 --> 00:10:21,380
Mas,  claro, o Python no gosta muito disso e h

215
00:10:21,380 --> 00:10:25,020
uma boa razo pela qual estou obtendo uma linha vermelha e isso

216
00:10:25,020 --> 00:10:27,130
 algo com o qual voc deve

217
00:10:27,130 --> 00:10:29,230
se antecipar e voc deve entender.

218
00:10:30,350 --> 00:10:32,360
A razo pela qual est me dando uma linha vermelha

219
00:10:32,360 --> 00:10:33,710
 por causa do conceito de escopo.

220
00:10:33,710 --> 00:10:35,990
Mais uma vez, mencionei que o escopo apareceria

221
00:10:35,990 --> 00:10:37,750
ao longo do curso vrias vezes

222
00:10:37,750 --> 00:10:40,980
e esse  um cenrio importante para entender o escopo.

223
00:10:41,950 --> 00:10:44,930
O que temos agora  que temos uma

224
00:10:44,930 --> 00:10:45,980
varivel global chamada

225
00:10:47,410 --> 00:10:50,910
books, no entanto, o Python tambm criou uma varivel local

226
00:10:50,910 --> 00:10:51,840
para essa funo.

227
00:10:51,840 --> 00:10:56,170
Esta varivel, books, s existe dentro desta funo aqui, e no

228
00:10:56,170 --> 00:10:57,800
 a mesma varivel

229
00:10:57,800 --> 00:10:59,670
que a varivel global, livros.

230
00:11:02,150 --> 00:11:04,650
Ento, agora, achamos que estamos definindo essa

231
00:11:04,650 --> 00:11:06,900
varivel, estamos criando essa nova varivel,

232
00:11:06,900 --> 00:11:08,900
books, mas tambm a estamos

233
00:11:08,900 --> 00:11:12,200
usando na instruo que a cria, e isso 

234
00:11:12,200 --> 00:11:16,090
obviamente sem sentido porque essa varivel ainda no existe, j que

235
00:11:16,090 --> 00:11:18,270
 sendo criado nessa mesma linha.

236
00:11:19,210 --> 00:11:20,840
O que temos que fazer 

237
00:11:20,840 --> 00:11:22,850
dizer ao Python que no queremos criar

238
00:11:22,850 --> 00:11:25,510
uma nova varivel, queremos usar os livros de variveis globais.

239
00:11:27,030 --> 00:11:30,880
Outra opo seria renomear essa varivel, livros novos.

240
00:11:30,880 --> 00:11:32,470
 isso e ento ele

241
00:11:32,470 --> 00:11:34,830
no reclama mais porque percebe que essa

242
00:11:34,830 --> 00:11:37,460
varivel que estamos usando j deve existir, ento,

243
00:11:37,460 --> 00:11:39,960
em vez de procurar no escopo local,

244
00:11:39,960 --> 00:11:42,010
ela parece no escopo global.

245
00:11:42,010 --> 00:11:43,410
No entanto, no queremos

246
00:11:43,410 --> 00:11:46,400
fazer isso porque queremos alterar essa varivel e,

247
00:11:46,400 --> 00:11:48,320
para fazer isso, devemos informar

248
00:11:48,320 --> 00:11:51,260
ao Python que estamos procurando usar uma varivel

249
00:11:51,260 --> 00:11:53,030
global e isso  realmente simples.

250
00:11:53,030 --> 00:11:55,480
Ns apenas fazemos livros globais.

251
00:11:55,480 --> 00:11:58,300
O que isso essencialmente diz  que os livros

252
00:11:58,300 --> 00:12:01,830
e o escopo local so iguais aos livros no escopo externo.

253
00:12:01,830 --> 00:12:03,290
Torna-os iguais

254
00:12:03,290 --> 00:12:05,800
e podemos us-los normalmente.

255
00:12:05,800 --> 00:12:08,650
Agora sabemos que quando usamos essa varivel, nos

256
00:12:08,650 --> 00:12:12,310
referimos  varivel externa e, da mesma forma, aqui tambm

257
00:12:12,310 --> 00:12:14,610
estamos nos referindo  varivel externa.

258
00:12:14,610 --> 00:12:16,660
Portanto, no estamos procurando criar uma

259
00:12:16,660 --> 00:12:17,920
varivel no escopo local.

260
00:12:20,290 --> 00:12:21,123
OK.

261
00:12:22,150 --> 00:12:24,510
 isso para excluir livros, para que possamos

262
00:12:24,510 --> 00:12:27,800
voltar ao nosso aplicativo PY e excluir nosso ltimo comentrio.

263
00:12:27,800 --> 00:12:31,140
E agora temos nosso aplicativo concludo.

264
00:12:31,140 --> 00:12:32,880
Claro, eu passei por isso muito rapidamente.

265
00:12:32,880 --> 00:12:34,230
Eu esperaria que voc

266
00:12:34,230 --> 00:12:37,970
levasse muito mais tempo na primeira vez que voc desenvolver isso de

267
00:12:37,970 --> 00:12:41,630
acordo com o resumo, mas se voc chegou at aqui comigo,

268
00:12:41,630 --> 00:12:43,930
agora voc vai entender o que est

269
00:12:43,930 --> 00:12:45,440
envolvido em fazer este aplicativo.

270
00:12:46,320 --> 00:12:49,300
Ns apenas temos que obter os dados do usurio,

271
00:12:50,270 --> 00:12:52,220
criar dicionrios para os livros e

272
00:12:53,220 --> 00:12:55,100
depois armazen-los em uma lista.

273
00:12:55,100 --> 00:12:57,730
Cada uma das outras operaes vai passar por

274
00:12:57,730 --> 00:12:59,240
nossos livros e alter-los, ler

275
00:12:59,240 --> 00:13:00,800
nossos livros e exclu-los ou

276
00:13:00,800 --> 00:13:02,610
apenas deixar que o usurio avalie-os.

277
00:13:05,620 --> 00:13:07,600
Agora eu vou fazer uma pequena melhora

278
00:13:07,600 --> 00:13:09,340
na funo de livros de lista.

279
00:13:09,340 --> 00:13:11,680
Vou imprimir algo um pouco melhor.

280
00:13:11,680 --> 00:13:12,730
Ento, vou

281
00:13:14,560 --> 00:13:16,500
imprimir o nome do livro.

282
00:13:16,500 --> 00:13:17,600
Agora,  claro, quando

283
00:13:17,600 --> 00:13:20,770
voc usa a aspa simples dentro de um dicionrio, e

284
00:13:20,770 --> 00:13:22,600
voc tem aspas simples fora do

285
00:13:22,600 --> 00:13:24,670
seu, na sua string F, ele no

286
00:13:24,670 --> 00:13:26,900
gosta disso, ento eu vou usar aspas

287
00:13:26,900 --> 00:13:30,270
duplas do lado de fora e apenas para o benefcio do

288
00:13:33,810 --> 00:13:36,140
Python, eu vou dizer o nome do livro

289
00:13:37,290 --> 00:13:39,170
pelo autor do livro e ler

290
00:13:40,050 --> 00:13:41,500
vai ser lido livro.

291
00:13:43,560 --> 00:13:45,430
Ento, isso vai

292
00:13:46,290 --> 00:13:49,150
ser algo como Python fluente

293
00:13:49,150 --> 00:13:50,820
pelo autor ler

294
00:13:50,820 --> 00:13:51,930
false ou true.

295
00:13:51,930 --> 00:13:54,170
No meu caso,  falso, ainda no o li.

296
00:13:55,500 --> 00:13:58,430
Ok, o autor , a propsito,  Luciano Romaldo, acho que  assim que

297
00:13:58,430 --> 00:14:00,250
voc diz o nome dele,  um bom livro.

298
00:14:00,250 --> 00:14:01,200
Voc deveria ler isto.

299
00:14:02,490 --> 00:14:04,820
Ento agora temos o nome e o autor e

300
00:14:05,880 --> 00:14:07,520
a leitura  verdadeira ou falsa.

301
00:14:07,520 --> 00:14:09,410
Se quisermos tornar isso um pouco

302
00:14:09,410 --> 00:14:12,640
melhor, podemos dizer que algo como ler  sim.

303
00:14:12,640 --> 00:14:13,840
Se o

304
00:14:15,030 --> 00:14:15,863
livro for

305
00:14:16,800 --> 00:14:18,170
lido, mais no.

306
00:14:18,170 --> 00:14:20,730
Esta  uma declarao ternria em Python,

307
00:14:20,730 --> 00:14:23,020
significa apenas usar este valor se

308
00:14:23,020 --> 00:14:24,380
isso for verdade, caso

309
00:14:24,380 --> 00:14:27,940
contrrio, use este valor aqui para atribuir  varivel.

310
00:14:27,940 --> 00:14:31,200
Portanto, se a leitura do livro for verdadeira, ela dir que sim.

311
00:14:31,200 --> 00:14:34,830
Se o livro lido  falso, vai dizer no.

312
00:14:34,830 --> 00:14:38,450
E lembre-se, isso  essencialmente o mesmo que isso, ler

313
00:14:38,450 --> 00:14:41,240
o livro  verdade, voc pode remover a

314
00:14:41,240 --> 00:14:44,090
verdade como vimos na primeira sesso deste curso.

315
00:14:45,280 --> 00:14:48,710
Agora, em vez de lermos em livros, podemos apenas ler, j

316
00:14:48,710 --> 00:14:50,960
que essa  a varivel que criamos aqui.

317
00:14:52,460 --> 00:14:56,130
Ok, vamos executar nosso aplicativo e ver o que acontece.

318
00:14:58,440 --> 00:14:59,310
Nada.

319
00:14:59,310 --> 00:15:02,030
Claro, ns no rodamos a funo Menu.

320
00:15:02,030 --> 00:15:03,900
Ento, vamos at a parte inferior

321
00:15:03,900 --> 00:15:05,570
e executar a funo Menu.

322
00:15:05,570 --> 00:15:07,230
E agora vemos nossa entrada.

323
00:15:07,230 --> 00:15:09,540
Eu s vou estender isso um pouco.

324
00:15:09,540 --> 00:15:13,540
Podemos adicionar um novo livro, digamos, por exemplo, Cdigo Limpo, este

325
00:15:13,540 --> 00:15:15,390
 um bom livro tambm,

326
00:15:15,390 --> 00:15:16,580
voc tambm pode l-lo.

327
00:15:16,580 --> 00:15:18,964
 de Robert C. Martin, Martin,

328
00:15:18,964 --> 00:15:19,797
e

329
00:15:21,260 --> 00:15:23,190
 isso, ns adicionamos.

330
00:15:23,190 --> 00:15:27,440
Agora podemos pressionar L para v-los e obtemos o Cdigo Limpo

331
00:15:27,440 --> 00:15:29,750
de Robert C. Martin leu no.

332
00:15:30,840 --> 00:15:34,410
Podemos acrescentar outro, digamos, por exemplo, Test

333
00:15:35,720 --> 00:15:37,490
Driven Development, de

334
00:15:38,440 --> 00:15:41,820
Kent Beck, tambm um bom livro.

335
00:15:41,820 --> 00:15:44,600
Agora podemos list-los e podemos ver que no

336
00:15:44,600 --> 00:15:47,630
lemos o Cdigo Limpo nem o Desenvolvimento Orientado a

337
00:15:47,630 --> 00:15:48,830
Testes, mas queremos.

338
00:15:48,830 --> 00:15:50,530
Ento vamos em frente e ler o Cdigo Limpo primeiro.

339
00:15:50,530 --> 00:15:54,990
Ento ns digitamos R e, a propsito, adicionamos um espao aps a sua escolha, isso  apenas um

340
00:15:54,990 --> 00:15:56,360
planejamento inadequado da minha parte.

341
00:15:56,360 --> 00:15:58,060
Apenas parece horrvel.

342
00:15:58,060 --> 00:15:59,820
Digite o nome do livro que

343
00:15:59,820 --> 00:16:01,780
voc acabou de ler, digamos, Cdigo Limpo.

344
00:16:01,780 --> 00:16:03,950
Agora podemos listar os livros novamente e vemos

345
00:16:03,950 --> 00:16:05,500
que o Cdigo Limpo diz sim.

346
00:16:06,940 --> 00:16:10,390
 claro, quando paramos e comeamos de novo, no

347
00:16:12,800 --> 00:16:15,330
temos livros porque os armazenamos em um

348
00:16:15,330 --> 00:16:17,500
banco de dados na memria.

349
00:16:17,500 --> 00:16:20,050
Esse  um banco de dados que vive na

350
00:16:20,050 --> 00:16:23,770
memria na memria do nosso computador, que  voltil e est disponvel apenas

351
00:16:23,770 --> 00:16:25,760
enquanto o aplicativo estiver em execuo.

352
00:16:25,760 --> 00:16:28,950
Assim que paramos de executar, esse banco de dados 

353
00:16:28,950 --> 00:16:31,120
apagado pelo Python para economizar memria.

354
00:16:32,220 --> 00:16:34,980
Ns no queremos isso, ento o que

355
00:16:34,980 --> 00:16:36,610
queremos fazer  seguir

356
00:16:36,610 --> 00:16:39,020
em frente e usar um arquivo.

357
00:16:40,210 --> 00:16:42,370
E agora, voc entende por

358
00:16:43,460 --> 00:16:46,100
que tentei dissociar nosso banco de

359
00:16:47,010 --> 00:16:49,040
dados de nosso aplicativo.

360
00:16:49,040 --> 00:16:50,280
Agora, quase todas

361
00:16:50,280 --> 00:16:52,420
as mudanas sero no arquivo

362
00:16:52,420 --> 00:16:53,900
de banco de

363
00:16:53,900 --> 00:16:57,720
dados para ns trocarmos para arquivos em vez de

364
00:16:57,720 --> 00:16:59,760
banco de dados na memria.

365
00:17:00,670 --> 00:17:01,600
Aqui est um exemplo.

366
00:17:03,210 --> 00:17:05,980
Os livros agora no sero mais uma lista.

367
00:17:05,980 --> 00:17:08,020
Vai ser um nome de arquivo,

368
00:17:08,020 --> 00:17:10,390
por exemplo livros com T X D.

369
00:17:11,340 --> 00:17:14,090
Adicionar livro vai abrir o arquivo e

370
00:17:14,090 --> 00:17:16,400
vai anexar um livro a ele.

371
00:17:17,600 --> 00:17:19,770
Obter todos os livros vai ler o

372
00:17:19,770 --> 00:17:22,210
arquivo e retornar todos os livros nele.

373
00:17:22,210 --> 00:17:25,520
Marcar livros como lidos ler todos os livros, e

374
00:17:25,520 --> 00:17:26,620
isso vai mudar

375
00:17:26,620 --> 00:17:28,940
um e vai reescrev-los para o arquivo.

376
00:17:28,940 --> 00:17:31,580
E deletar livro vai ler todos os livros,

377
00:17:31,580 --> 00:17:32,690
vai deletar um,

378
00:17:32,690 --> 00:17:34,910
e ento ele ir reescrev-lo no arquivo.

379
00:17:36,320 --> 00:17:39,800
Voc pode armazenar os livros no formato CSV ou no formato

380
00:17:39,800 --> 00:17:41,210
JSON, depende de voc.

381
00:17:41,210 --> 00:17:42,600
 claro que, se voc

382
00:17:42,600 --> 00:17:44,530
armazen-los em JSON,  um pouco mais

383
00:17:44,530 --> 00:17:46,070
fcil trabalhar, j que j trabalhamos

384
00:17:46,070 --> 00:17:47,770
com dicionrios aqui, mas se voc os

385
00:17:47,770 --> 00:17:50,010
armazenar em CSV, tambm no ser muito mais difcil.

386
00:17:50,010 --> 00:17:52,930
No prximo vdeo, vamos mudar isso para

387
00:17:52,930 --> 00:17:55,700
usar CSVs, ento vou ver voc l.

