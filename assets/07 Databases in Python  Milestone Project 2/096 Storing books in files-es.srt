1
00:00:00,230 --> 00:00:01,480
Jos: Hola, y bienvenido de nuevo.

2
00:00:01,480 --> 00:00:03,940
En este video, convertiremos nuestro proyecto que utiliz

3
00:00:03,940 --> 00:00:08,030
una base de datos en memoria en una utilizando archivos para su almacenamiento.

4
00:00:10,170 --> 00:00:12,440
Lo que tenemos aqu es nuestra base de

5
00:00:12,440 --> 00:00:13,730
datos, que es una lista.

6
00:00:13,730 --> 00:00:16,660
Entonces, lo primero que debe hacer es comenzar la transicin

7
00:00:16,660 --> 00:00:19,890
de nuestra base de datos. py archivo de usar esta lista

8
00:00:19,890 --> 00:00:22,240
para almacenar cosas en el uso de un archivo.

9
00:00:23,740 --> 00:00:26,070
Esta es la razn por la cual he estructurado el cdigo

10
00:00:26,070 --> 00:00:28,070
de la forma en que lo he estructurado para usted.

11
00:00:28,940 --> 00:00:31,880
Ahora, si queremos agregar un libro, ya sabemos cmo agregar una

12
00:00:31,880 --> 00:00:34,960
nueva lnea a una base de datos, o si no lo hacemos,

13
00:00:34,960 --> 00:00:36,560
vamos a aprender en este video.

14
00:00:37,630 --> 00:00:41,030
Ya sabemos cmo leer un archivo y obtener todos sus contenidos.

15
00:00:41,030 --> 00:00:44,620
Ya sabemos cmo guardar en un archivo.

16
00:00:44,620 --> 00:00:47,240
Ya sabemos cmo leer un archivo y eliminar algo y

17
00:00:47,240 --> 00:00:48,390
luego guardarlo de nuevo.

18
00:00:50,150 --> 00:00:55,150
Entonces, esta base de datos. Aqu se encuentra lo que se llama

19
00:00:56,190 --> 00:01:00,350
una interfaz de programacin, una interfaz entre nuestra lgica empresarial, lo que

20
00:01:00,350 --> 00:01:02,810
se supone que debe hacer un programa

21
00:01:02,810 --> 00:01:05,130
y el almacenamiento, que en este caso

22
00:01:05,130 --> 00:01:07,790
ser una base de datos, perdn, un archivo.

23
00:01:07,790 --> 00:01:10,650
Y vamos a movernos a una base de datos pronto.

24
00:01:10,650 --> 00:01:13,440
Entonces, si quisiramos agregar

25
00:01:13,440 --> 00:01:16,360
un libro, sera muy sencillo.

26
00:01:16,360 --> 00:01:19,490
Todo lo que tenemos que hacer es, en primer lugar, antes

27
00:01:19,490 --> 00:01:21,630
de que realmente comencemos a escribir cualquier cdigo,

28
00:01:21,630 --> 00:01:23,690
cambie esto a a. archivo csv y decidir

29
00:01:24,890 --> 00:01:27,420
sobre el formato de. archivo csv, que

30
00:01:28,680 --> 00:01:33,430
creo que debera ser nombre, autor, ledo, como tal.

31
00:01:34,590 --> 00:01:36,720
Ahora que est claro, hemos decidido

32
00:01:36,720 --> 00:01:39,370
que vamos a almacenar el nombre, luego

33
00:01:39,370 --> 00:01:42,960
el autor, y luego leer, separados por comas, podemos continuar.

34
00:01:42,960 --> 00:01:46,110
Tenga en cuenta que podra ser beneficioso

35
00:01:46,110 --> 00:01:50,420
separarlo por hash, porque los ttulos pueden tener comas.

36
00:01:50,420 --> 00:01:52,110
Pero por ahora, no nos vamos a preocupar por eso.

37
00:01:52,110 --> 00:01:54,460
Puede hacer ese cambio ms adelante, si lo desea.

38
00:01:55,680 --> 00:02:00,180
Entonces, para agregar un libro, todo lo que tenemos que

39
00:02:00,180 --> 00:02:05,180
hacer es decir con abrir ('libros. txt ') en modo de lectura como

40
00:02:07,630 --> 00:02:12,070
archivo, y aqu, lo siento, escriba el modo como archivo, y aqu, lo

41
00:02:12,070 --> 00:02:15,660
que vamos a hacer es agregar un nuevo libro al final.

42
00:02:15,660 --> 00:02:17,710
Voy a eliminar esto aqu.

43
00:02:19,090 --> 00:02:21,790
Sin embargo, mencion anteriormente cuando comenzamos a buscar

44
00:02:21,790 --> 00:02:25,540
en los archivos que el modo de escritura borrar todo el

45
00:02:25,540 --> 00:02:27,990
contenido del archivo y luego podr comenzar

46
00:02:27,990 --> 00:02:31,020
a escribir desde la parte superior del archivo.

47
00:02:31,020 --> 00:02:33,720
No queremos hacer esto porque nuestro add_book debera

48
00:02:33,720 --> 00:02:37,030
agregar un nuevo libro, probablemente al final del archivo.

49
00:02:37,030 --> 00:02:38,560
Queremos conservar los otros libros que

50
00:02:38,560 --> 00:02:39,810
ya estn en el archivo.

51
00:02:39,810 --> 00:02:40,970
De lo contrario, solo

52
00:02:40,970 --> 00:02:43,000
podremos tener un libro a la vez.

53
00:02:43,000 --> 00:02:45,700
En lugar del modo w, podemos usar

54
00:02:45,700 --> 00:02:47,370
un modo, que significa append.

55
00:02:47,370 --> 00:02:49,570
Entonces, cualquier cosa que escribamos ir

56
00:02:49,570 --> 00:02:51,100
automticamente al final del archivo.

57
00:02:52,930 --> 00:02:55,410
Debido a que nuestro archivo va a

58
00:02:55,410 --> 00:02:58,360
tener esta estructura y luego tendr \ n

59
00:02:58,360 --> 00:03:01,000
al final, todo lo que escriba siempre estar

60
00:03:01,000 --> 00:03:03,000
en la parte inferior del archivo.

61
00:03:03,000 --> 00:03:03,880
Este es el por qu.

62
00:03:03,880 --> 00:03:05,380
Vamos a agregar un libro, y

63
00:03:05,380 --> 00:03:06,690
eso va a ser en

64
00:03:06,690 --> 00:03:08,540
este formato, nombre, autor, lectura, nueva lnea.

65
00:03:09,670 --> 00:03:10,990
Luego agregaremos otro, y

66
00:03:10,990 --> 00:03:14,620
como hay una nueva lnea, ir a la siguiente lnea.

67
00:03:15,960 --> 00:03:17,360
Luego, cuando agreguemos otro,

68
00:03:17,360 --> 00:03:19,720
ir a la siguiente lnea, y as sucesivamente.

69
00:03:19,720 --> 00:03:22,000
Entonces, es importante que incluyamos esa nueva lnea

70
00:03:22,000 --> 00:03:23,770
all, porque el modo de adicin

71
00:03:23,770 --> 00:03:26,470
ir al final del archivo, el ltimo carcter, que

72
00:03:26,470 --> 00:03:27,720
ser una nueva lnea.

73
00:03:30,150 --> 00:03:33,080
Entonces todo lo que tenemos que hacer es archivar. escriba, nombre,

74
00:03:34,230 --> 00:03:38,180
autor, y luego tengamos que decidir

75
00:03:39,950 --> 00:03:40,980
cmo almacenaremos

76
00:03:40,980 --> 00:03:43,390
los valores falsos.

77
00:03:44,610 --> 00:03:47,230
Debido a que el archivo de texto que

78
00:03:47,230 --> 00:03:52,230
vamos a usar no es un archivo de Python, tal vez falso no tiene mucho sentido,

79
00:03:52,310 --> 00:03:53,340
aunque podra serlo.

80
00:03:53,340 --> 00:03:54,580
Tu decides.

81
00:03:54,580 --> 00:03:56,850
Pero voy a almacenarlo como un 0.

82
00:03:56,850 --> 00:03:59,410
0 para falso, 1 para verdadero.

83
00:03:59,410 --> 00:04:00,760
Depende de ti lo que haces.

84
00:04:02,206 --> 00:04:05,100
Y as es como agregamos el nuevo libro a los libros. TXT.

85
00:04:06,410 --> 00:04:09,250
Tenga en cuenta que todava tenemos nuestros libros variables aqu.

86
00:04:09,250 --> 00:04:11,210
No necesitamos eso, as que voy a cambiarle

87
00:04:11,210 --> 00:04:16,010
el nombre a books_file, y esto va a ser libros. txt, y esto va

88
00:04:16,010 --> 00:04:18,370
a ser books_file.

89
00:04:18,370 --> 00:04:21,810
De esa forma, almacenaremos el nombre de archivo aqu.

90
00:04:21,810 --> 00:04:23,410
Esa es esencialmente nuestra base de datos.

91
00:04:26,382 --> 00:04:29,050
Para get_all_books va a ser un poco ms desafiante.

92
00:04:29,050 --> 00:04:30,210
Una vez ms, voy a

93
00:04:30,210 --> 00:04:33,340
ir aqu y tengo un par de lneas de nombre, autor, lectura,

94
00:04:33,340 --> 00:04:36,360
solo para que est un poco ms claro lo que estamos haciendo.

95
00:04:36,360 --> 00:04:37,690
Y lo primero que queremos

96
00:04:37,690 --> 00:04:39,600
hacer es, por supuesto, abrir el archivo.

97
00:04:39,600 --> 00:04:40,800
Usted sabe cmo hacer

98
00:04:42,120 --> 00:04:45,470
esto, con open (books_file) en modo de lectura como archivo.

99
00:04:45,470 --> 00:04:47,930
Y ahora queremos obtener todas las lneas.

100
00:04:47,930 --> 00:04:51,200
Pero queremos obtener las lneas sin el espacio en blanco.

101
00:04:51,200 --> 00:04:54,240
Espero que recuerdes cmo hacer esto exactamente,

102
00:04:54,240 --> 00:04:56,180
usando el mtodo strip.

103
00:04:59,600 --> 00:05:02,690
Vamos a decir lneas = [lnea. strip () para

104
00:05:03,770 --> 00:05:07,240
la lnea in_file. readlines ()].

105
00:05:07,240 --> 00:05:10,760
Esto leer todas las lneas, incluidas las \ n, y

106
00:05:10,760 --> 00:05:14,930
nos dar cada una en una lista, en un elemento de la

107
00:05:14,930 --> 00:05:16,350
lista, y para cada

108
00:05:16,350 --> 00:05:17,840
uno de los elementos,

109
00:05:17,840 --> 00:05:19,870
vamos a quitar el espacio en

110
00:05:19,870 --> 00:05:22,620
blanco, que es va a eliminar esto aqu.

111
00:05:24,550 --> 00:05:26,620
As que ahora vamos a

112
00:05:26,620 --> 00:05:29,930
tener esto como nuestro contenido de esta lista aqu.

113
00:05:31,380 --> 00:05:36,380
Ahora, tambin podemos encadenarlo a una divisin

114
00:05:37,460 --> 00:05:42,460
para que obtengamos una lista de listas.

115
00:05:45,180 --> 00:05:48,040
De hecho, ahora nuestra lista tendr

116
00:05:55,760 --> 00:05:57,250
este formato, as.

117
00:05:57,250 --> 00:05:59,580
As que tendremos una lista, y dentro

118
00:05:59,580 --> 00:06:02,840
de ella, tendremos sublistas, donde cada una va a

119
00:06:02,840 --> 00:06:05,380
ser una lista de nombre, autor, lectura.

120
00:06:09,790 --> 00:06:10,623
Ahora lo que

121
00:06:10,623 --> 00:06:13,440
vamos a hacer es construir nuestros diccionarios de libros.

122
00:06:15,700 --> 00:06:18,360
Entonces esta ser otra lista de comprensin.

123
00:06:19,710 --> 00:06:21,020
En la lista, y aviso, dicho sea

124
00:06:21,020 --> 00:06:22,810
de paso, puede poner listas de comprensin en mltiples lneas.

125
00:06:22,810 --> 00:06:24,430
Es totalmente genial, totalmente bien.

126
00:06:26,210 --> 00:06:27,180
Linea 0

127
00:06:28,220 --> 00:06:30,420
El autor ser la primera lnea,

128
00:06:30,420 --> 00:06:32,560
y la segunda ser la lectura.

129
00:06:33,790 --> 00:06:35,130
Por supuesto, la lnea no existe.

130
00:06:35,130 --> 00:06:38,010
As que vamos a hacer lneas en lneas, y

131
00:06:38,010 --> 00:06:39,060
ah lo tenemos.

132
00:06:39,950 --> 00:06:42,800
Recuerde que cada lnea, o ms bien,

133
00:06:42,800 --> 00:06:45,440
toda la lista de lneas tiene

134
00:06:45,440 --> 00:06:47,380
este formato, nombre, autor y

135
00:06:48,670 --> 00:06:51,750
lectura, nombre, autor, lectura, por lo que

136
00:06:51,750 --> 00:06:55,890
para lneas en lneas nos da una de estas listas.

137
00:06:55,890 --> 00:06:58,170
Y luego estamos diciendo que ese nombre es el

138
00:06:58,170 --> 00:07:00,300
elemento zeroth de esta sublista, que es el nombre.

139
00:07:00,300 --> 00:07:02,140
Autor es el primer elemento de esta

140
00:07:02,140 --> 00:07:03,290
sublista, que es el autor.

141
00:07:03,290 --> 00:07:05,730
Read es el tercer elemento de esta

142
00:07:05,730 --> 00:07:08,380
sublista, que es el estado de lectura all.

143
00:07:10,260 --> 00:07:13,300
Entonces podemos devolver los libros, o de hecho,

144
00:07:13,300 --> 00:07:16,490
si quiere ahorrar algo de espacio, porque esta variable

145
00:07:19,320 --> 00:07:22,640
aqu es bastante redundante, podemos decir simplemente devolver esta

146
00:07:23,780 --> 00:07:24,940
lista de comprensin.

147
00:07:24,940 --> 00:07:26,930
Eso va a ejecutar la lista de comprensin

148
00:07:26,930 --> 00:07:27,880
primero y luego devolverlo.

149
00:07:32,170 --> 00:07:35,470
De acuerdo, tenemos get_all_books y el add_book.

150
00:07:35,470 --> 00:07:39,140
Ahora podemos pasar a marcar un libro como ledo.

151
00:07:39,140 --> 00:07:41,430
Esto no es tan fcil,

152
00:07:41,430 --> 00:07:44,190
porque aunque es posible acceder al

153
00:07:44,190 --> 00:07:47,260
archivo y modificarlo, en realidad es mucho

154
00:07:47,260 --> 00:07:51,890
ms fcil leer el archivo, modificar el libro que queremos

155
00:07:51,890 --> 00:07:54,760
y luego guardarlos nuevamente en el archivo.

156
00:07:54,760 --> 00:07:56,900
Eso es, eso es realmente mucho ms fcil.

157
00:07:56,900 --> 00:07:59,110
As que vamos a ir por eso en este video.

158
00:08:00,350 --> 00:08:01,700
Lo primero que hay que

159
00:08:01,700 --> 00:08:04,440
hacer es, por supuesto, decir books = get_all_books ().

160
00:08:06,890 --> 00:08:07,723
Bueno.

161
00:08:12,280 --> 00:08:14,310
Por alguna razn, sigue diciendo,

162
00:08:14,310 --> 00:08:16,100
oh, s, esto aqu.

163
00:08:16,100 --> 00:08:18,200
Sigui diciendo que estas sombras en la variable

164
00:08:18,200 --> 00:08:20,440
externa, pero estaba bastante seguro de que lo eliminamos.

165
00:08:20,440 --> 00:08:22,120
Entonces me preguntaba qu demonios era eso.

166
00:08:22,120 --> 00:08:24,600
Pero, por supuesto, los libros globales all lo estaban creando de nuevo.

167
00:08:24,600 --> 00:08:26,270
Entonces no queremos hacer eso.

168
00:08:26,270 --> 00:08:27,960
De todos modos, marcando el libro como ledo.

169
00:08:27,960 --> 00:08:30,120
Lo primero que queremos hacer es obtener todos los libros.

170
00:08:31,100 --> 00:08:32,810
Entonces queremos iterar sobre ellos,

171
00:08:35,320 --> 00:08:37,860
y bueno, de hecho, ya lo tenemos aqu.

172
00:08:37,860 --> 00:08:40,010
Para libros en libros, si el nombre del

173
00:08:40,010 --> 00:08:41,340
libro es igual al nombre

174
00:08:41,340 --> 00:08:44,720
que pasamos, vamos a configurarlo para que lea, excepto que ahora, en

175
00:08:44,720 --> 00:08:47,720
lugar de verdadero, va a ser 1, porque 1 significa verdadero

176
00:08:47,720 --> 00:08:49,600
y 0 significa falso en nuestro archivo.

177
00:08:50,630 --> 00:08:53,770
Y luego, al final, tenemos que guardar todos los libros

178
00:08:53,770 --> 00:08:56,200
que hemos recuperado en la base de

179
00:08:56,200 --> 00:08:59,880
datos, y uno de ellos habr cambiado de cero a uno.

180
00:09:01,030 --> 00:09:02,939
Entonces, para eso, voy a crear

181
00:09:02,939 --> 00:09:06,110
otra funcin que voy a llamar _save_all_books, y voy a

182
00:09:06,110 --> 00:09:08,060
pasarle los libros que leemos, la

183
00:09:08,060 --> 00:09:09,010
variable books.

184
00:09:09,920 --> 00:09:12,470
Esta funcin no existe, entonces la crearemos.

185
00:09:15,380 --> 00:09:18,570
La razn por la que lo llamo _save_all_books es

186
00:09:18,570 --> 00:09:21,380
porque en Python, esto les dice a otros

187
00:09:21,380 --> 00:09:24,190
desarrolladores que no deben llamar a esta funcin.

188
00:09:24,190 --> 00:09:28,030
Solo debe llamar a esta funcin desde este archivo.

189
00:09:28,030 --> 00:09:31,712
Esto se conoce normalmente como una funcin privada en la

190
00:09:31,712 --> 00:09:34,070
mayora de los lenguajes de programacin.

191
00:09:34,070 --> 00:09:36,580
Python no tiene el concepto de una funcin privada, por

192
00:09:36,580 --> 00:09:38,170
lo que otras personas ajenas al

193
00:09:38,170 --> 00:09:40,500
archivo pueden llamar a esta funcin si as lo

194
00:09:40,500 --> 00:09:42,560
desean, pero la convencin de nomenclatura en Python

195
00:09:42,560 --> 00:09:44,670
dice que si una funcin tiene un guin

196
00:09:44,670 --> 00:09:46,270
bajo al frente, probablemente no deberas llamar eso.

197
00:09:47,740 --> 00:09:49,700
Entonces, eso es lo que estamos haciendo aqu, simplemente

198
00:09:49,700 --> 00:09:51,550
llamarlo primero con un guin bajo o nombrarlo

199
00:09:51,550 --> 00:09:53,840
con un guin bajo primero, para que otras personas sepan

200
00:09:53,840 --> 00:09:56,270
que esta es una funcin que probablemente no deberan usar.

201
00:09:56,270 --> 00:09:58,996
Solo deberan usar delete_book,

202
00:09:58,996 --> 00:10:01,250
mark_book_as_read, get_all_books y add_book.

203
00:10:02,410 --> 00:10:04,890
Entonces, para poder guardar todos los libros, bueno, solo

204
00:10:04,890 --> 00:10:09,360
tenemos que abrir el archivo y en modo de escritura, esta vez, y vamos a eliminar todo

205
00:10:09,360 --> 00:10:10,860
el archivo y volver a escribirlo,

206
00:10:10,860 --> 00:10:11,900
y vamos a repasar

207
00:10:15,514 --> 00:10:18,264
cada libro y decir archivo. write

208
00:10:20,220 --> 00:10:25,220
(f "{book ['name']}, {book ['author']},

209
00:10:27,127 --> 00:10:30,150
y {book ['read']}").

210
00:10:30,150 --> 00:10:32,600
Y al final, asegrate de poner \ n.

211
00:10:32,600 --> 00:10:34,910
Eso es muy importante tambin.

212
00:10:34,910 --> 00:10:37,310
Y, de hecho, creo que olvidamos ponerlo aqu,

213
00:10:37,310 --> 00:10:40,790
as que asegrese de presentarlo. escriba, \ n all tambin.

214
00:10:40,790 --> 00:10:42,090
Eso es importante.

215
00:10:42,090 --> 00:10:43,490
Dije antes que era realmente

216
00:10:43,490 --> 00:10:44,670
importante, y luego lo olvid.

217
00:10:44,670 --> 00:10:45,503
Ah tienes.

218
00:10:45,503 --> 00:10:47,930
Entonces, lo que estamos haciendo en esta funcin es

219
00:10:47,930 --> 00:10:50,920
abrir el archivo, eliminar todo su contenido con el modo de

220
00:10:50,920 --> 00:10:52,480
escritura, y luego simplemente revisar todos

221
00:10:52,480 --> 00:10:55,390
los libros de la lista que tenemos como parmetro y para

222
00:10:55,390 --> 00:10:59,030
cada libro, escribir sus detalles en formato csv, y luego nueva

223
00:10:59,030 --> 00:11:00,150
lnea al final.

224
00:11:00,150 --> 00:11:02,850
As que solo va a reescribir nuestro archivo completo.

225
00:11:02,850 --> 00:11:04,560
No es lo ms eficiente para

226
00:11:04,560 --> 00:11:05,830
hacer, ser sincero contigo, pero

227
00:11:05,830 --> 00:11:08,580
es mucho ms fcil que ir y modificar el archivo.

228
00:11:11,370 --> 00:11:15,550
Bueno, ahora esta funcin _save_all_books existe, as que estamos seguros

229
00:11:15,550 --> 00:11:17,500
de poder usarla all.

230
00:11:17,500 --> 00:11:18,840
Y nuevamente, lo que hemos

231
00:11:18,840 --> 00:11:20,810
hecho en esta funcin es leer todos

232
00:11:20,810 --> 00:11:24,560
los libros, revisarlos y modificar el que deseamos, y luego guardarlos a todos.

233
00:11:25,440 --> 00:11:27,230
Y eso es esencialmente lo mismo que

234
00:11:27,230 --> 00:11:29,050
vamos a hacer para eliminar un libro.

235
00:11:29,050 --> 00:11:31,360
Le animo a que, ahora que he

236
00:11:31,360 --> 00:11:33,150
implementado estas dos funciones, vaya

237
00:11:33,150 --> 00:11:35,690
e implemente la funcin delete_book por su cuenta.

238
00:11:35,690 --> 00:11:38,050
Una vez ms, lea todos los

239
00:11:38,050 --> 00:11:41,220
libros, recree la lista sin el libro que desea

240
00:11:41,220 --> 00:11:43,350
eliminar, y luego gurdelos de vuelta.

241
00:11:43,350 --> 00:11:44,183
Probemos eso.

242
00:11:49,080 --> 00:11:50,100
Espero que hayas logrado.

243
00:11:50,100 --> 00:11:54,030
Lo que hara es una vez ms decir books = get_all_books.

244
00:11:54,030 --> 00:11:55,930
Ahora voy a decir que los

245
00:11:55,930 --> 00:11:58,840
libros son en realidad libros para libros en libros

246
00:11:59,770 --> 00:12:02,830
si el nombre del libro no es igual al nombre

247
00:12:02,830 --> 00:12:05,500
que obtuvimos como parmetro, y finalmente, _save_all_books (libros).

248
00:12:07,870 --> 00:12:09,510
Observe cmo llama la funcin

249
00:12:09,510 --> 00:12:11,850
aqu, esta funcin est por encima de esta

250
00:12:11,850 --> 00:12:14,960
funcin, y dije anteriormente que querra que las funciones se

251
00:12:14,960 --> 00:12:17,240
definan en el orden en que se usan.

252
00:12:17,240 --> 00:12:21,170
Esto est bien, porque esta funcin se utiliz en realidad arriba.

253
00:12:21,170 --> 00:12:23,340
Entonces, creo que esto est bien.

254
00:12:24,290 --> 00:12:26,470
Nuevamente, estamos usando la lista de

255
00:12:26,470 --> 00:12:30,810
comprensin para repetir nuestros libros y luego solo colocamos el libro en

256
00:12:30,810 --> 00:12:34,920
una nueva lista si el nombre del libro coincide, lo siento,

257
00:12:34,920 --> 00:12:35,890
no coincide.

258
00:12:35,890 --> 00:12:37,130
As que estamos poniendo

259
00:12:37,130 --> 00:12:39,380
todos los libros, excepto el que est aqu.

260
00:12:41,210 --> 00:12:42,160
Y eso es.

261
00:12:42,160 --> 00:12:45,316
Ahora tenemos nuestras funciones delete_book, mark_book_as_read,

262
00:12:45,316 --> 00:12:47,170
get_all_books y add_book.

263
00:12:47,170 --> 00:12:50,340
Siguen siendo las mismas funciones que antes.

264
00:12:50,340 --> 00:12:51,810
Los nombres son iguales.

265
00:12:51,810 --> 00:12:54,880
Lo nico que estn haciendo ahora es almacenar cosas en

266
00:12:54,880 --> 00:12:57,640
un archivo en lugar de guardarlas en una lista.

267
00:12:57,640 --> 00:12:59,790
Entonces, si vamos a la aplicacin py, en realidad

268
00:13:02,550 --> 00:13:04,830
no tenemos que cambiar nada, porque

269
00:13:04,830 --> 00:13:08,700
la base de datos. add_book no sabe si esto va

270
00:13:08,700 --> 00:13:11,990
a una lista o a un archivo, y no le importa.

271
00:13:11,990 --> 00:13:14,740
Todo lo que sabe es que el libro est siendo agregado.

272
00:13:14,740 --> 00:13:17,290
Aqu en list_books, base de datos. get_all_books obtendr los libros,

273
00:13:18,382 --> 00:13:21,390
y no le importa de qu los obtiene.

274
00:13:21,390 --> 00:13:25,730
Por lo tanto, hemos desconectado muy bien nuestra lgica comercial, nuestra

275
00:13:25,730 --> 00:13:28,250
aplicacin, de nuestra base de datos.

276
00:13:28,250 --> 00:13:31,990
No hemos hecho un trabajo perfecto porque el estado

277
00:13:31,990 --> 00:13:35,900
de lectura del libro ahora va a ser, lo siento,

278
00:13:35,900 --> 00:13:40,900
S, si el libro es exactamente igual a uno; De otra manera no.

279
00:13:42,900 --> 00:13:44,430
Entonces, en lugar de ser verdadero

280
00:13:44,430 --> 00:13:47,920
o falso, es uno o cero, as que eso es lo nico que hay.

281
00:13:49,840 --> 00:13:51,900
De acuerdo, aparte de eso, prompt_read_book va a obtener

282
00:13:51,900 --> 00:13:54,630
el nombre y luego marcarlo como ledo, y usted sabe que,

283
00:13:54,630 --> 00:13:56,710
en segundo plano, la base de datos va al

284
00:13:56,710 --> 00:13:58,300
archivo, lo abre, examina todos los libros,

285
00:13:58,300 --> 00:14:00,740
marca uno que se lee, guarda ellos de vuelta, pero

286
00:14:00,740 --> 00:14:02,420
a tu aplicacin no le importa.

287
00:14:03,260 --> 00:14:05,850
Entonces, lo que hemos creado aqu es

288
00:14:05,850 --> 00:14:09,970
una buena interfaz entre nuestra aplicacin y nuestro mecanismo de almacenamiento

289
00:14:09,970 --> 00:14:14,970
de datos que oculta muy bien toda la complejidad dentro de este archivo.

290
00:14:15,800 --> 00:14:17,530
Y esto es, como

291
00:14:17,530 --> 00:14:21,640
dije antes, normalmente llamado interfaz, y la interfaz aqu es

292
00:14:21,640 --> 00:14:25,360
para nuestra base de datos, y el contenido de

293
00:14:25,360 --> 00:14:28,303
la interfaz son estas cuatro funciones, add_book,

294
00:14:28,303 --> 00:14:30,290
get_all_books, mark_book_as_read y delete_book.

295
00:14:30,290 --> 00:14:33,110
Y normalmente, hemos estado hablando de interfaces de

296
00:14:33,110 --> 00:14:37,010
usuario, porque los usuarios han estado interactuando con el men que

297
00:14:37,010 --> 00:14:42,010
les hemos dado, pero esta base de datos es una API, es una interfaz

298
00:14:42,340 --> 00:14:43,900
de programacin de aplicaciones.

299
00:14:43,900 --> 00:14:47,220
Hemos creado una interfaz para que esta parte del

300
00:14:47,220 --> 00:14:49,440
programa, la aplicacin. py, puede interactuar

301
00:14:49,440 --> 00:14:52,430
con otra parte del programa, la base

302
00:14:52,430 --> 00:14:54,540
de datos, a travs de

303
00:14:54,540 --> 00:14:56,467
la interfaz que hemos definido,

304
00:14:56,467 --> 00:14:58,360
prompt_add_book, list_books, prompt_read_book y prompt_delete_book.

305
00:14:58,360 --> 00:15:01,180
Entonces, si piensas en la aplicacin Como usuario, estas son

306
00:15:01,180 --> 00:15:03,900
las opciones que puede usar para interactuar

307
00:15:03,900 --> 00:15:05,700
con la base de datos.

308
00:15:05,700 --> 00:15:08,840
Y no le importa cul es la implementacin,

309
00:15:08,840 --> 00:15:12,080
ya sea una lista o si es un archivo.

310
00:15:12,080 --> 00:15:15,770
Y, de hecho, a medida que avanzamos en las bases de datos, como una

311
00:15:15,770 --> 00:15:18,110
base de datos SQL, como una base de datos

312
00:15:18,110 --> 00:15:19,710
relacional, tampoco le importar eso.

313
00:15:20,550 --> 00:15:22,980
Vamos a ejecutar esta aplicacin y probarla.

314
00:15:24,600 --> 00:15:25,940
Y, por cierto, voy a parar

315
00:15:25,940 --> 00:15:27,530
all, y esto me molesta un poco.

316
00:15:27,530 --> 00:15:29,230
Vamos a agregar un espacio all.

317
00:15:30,120 --> 00:15:31,696
Bien, corramos.

318
00:15:31,696 --> 00:15:32,860
Voy a agregar el nuevo libro.

319
00:15:32,860 --> 00:15:36,990
Vamos a ingresar a Clean Code por Robert, y como

320
00:15:36,990 --> 00:15:39,100
puede ver, no hay errores.

321
00:15:39,100 --> 00:15:40,650
Vamos a enumerar todos los libros,

322
00:15:41,500 --> 00:15:43,110
y vemos el cdigo limpio de Robert.

323
00:15:44,090 --> 00:15:47,550
Podemos hacer que un libro sea ledo, y ese ser el Cdigo Limpio.

324
00:15:47,550 --> 00:15:50,470
Luego podemos enumerarlos de nuevo, y ahora aparece como rojo.

325
00:15:50,470 --> 00:15:54,740
Podemos eliminar un libro, y podemos volver a listarlos, y

326
00:15:54,740 --> 00:15:56,720
no aparece nada all.

327
00:15:56,720 --> 00:16:00,160
Y nota cmo libros. txt an no ha aparecido en PyCharm.

328
00:16:01,100 --> 00:16:02,740
El archivo existe

329
00:16:02,740 --> 00:16:07,170
Si va en su Finder o en su programa Windows Explorer al directorio en el

330
00:16:07,170 --> 00:16:09,650
que se encuentra este proyecto, ver que el archivo

331
00:16:09,650 --> 00:16:11,320
est all, pero PyCharm no se

332
00:16:11,320 --> 00:16:13,930
actualiza rpidamente, por lo que no lo muestra all.

333
00:16:15,820 --> 00:16:18,050
De acuerdo, salgamos de ese programa.

334
00:16:18,050 --> 00:16:19,570
Observe cmo ahora el archivo aparece.

335
00:16:19,570 --> 00:16:21,040
Y borremos el archivo.

336
00:16:23,720 --> 00:16:28,160
Ahora, ejecutemos la aplicacin nuevamente, y ahora, voy a leer libros.

337
00:16:28,160 --> 00:16:31,150
Qu crees que va a pasar cuando presiono Enter?

338
00:16:37,510 --> 00:16:38,470
Bien, veamos.

339
00:16:40,030 --> 00:16:42,180
Vaya, probablemente no sea lo que queramos.

340
00:16:42,180 --> 00:16:44,670
Probablemente no queramos nada para imprimir, o incluso

341
00:16:44,670 --> 00:16:46,980
ms bonito sera algn tipo de mensaje

342
00:16:46,980 --> 00:16:48,450
diciendo: no tienes ningn libro.

343
00:16:48,450 --> 00:16:50,930
Pero, en cambio, obtuvimos un FileNotFoundError: No existe ese archivo

344
00:16:50,930 --> 00:16:53,310
o directorio: 'books'. TXT. "Y el

345
00:16:54,410 --> 00:16:56,970
motivo es que voy a esconder

346
00:16:56,970 --> 00:17:01,970
esto, el motivo es que cuando agregamos un nuevo libro o, de

347
00:17:03,120 --> 00:17:04,900
hecho, cuando guardamos_todos los

348
00:17:04,900 --> 00:17:09,330
libros, estamos utilizando un mtodo constructivo de apertura de archivos.

349
00:17:09,330 --> 00:17:11,490
As que estamos creando el archivo

350
00:17:11,490 --> 00:17:14,890
aqu o estamos creando el archivo aqu si no existe.

351
00:17:14,890 --> 00:17:18,110
Pero el mtodo de lectura no es constructivo.

352
00:17:18,110 --> 00:17:21,080
Es ms pasivo y no crea el archivo.

353
00:17:21,080 --> 00:17:23,330
Si no existe, de hecho, le da un error

354
00:17:23,330 --> 00:17:24,680
y dice archivo no encontrado.

355
00:17:25,550 --> 00:17:28,070
Entonces, lo que queremos hacer es asegurarnos

356
00:17:28,070 --> 00:17:31,650
de que el archivo exista, antes de ir a leerlo.

357
00:17:31,650 --> 00:17:34,590
Y para eso, voy a crear

358
00:17:34,590 --> 00:17:37,640
una ltima funcin aqu en nuestra interfaz

359
00:17:37,640 --> 00:17:42,640
de base de datos, y eso va a estar aqu, create_book_table.

360
00:17:43,676 --> 00:17:46,320
Y estoy llamndolo conscientemente mesa, aunque es

361
00:17:46,320 --> 00:17:50,830
un archivo, porque esto se llama base de datos, no se llama archivos.

362
00:17:50,830 --> 00:17:53,400
Y a medida que migramos a la base

363
00:17:53,400 --> 00:17:54,480
de datos, este ser

364
00:17:54,480 --> 00:17:57,520
el responsable de crear la tabla que almacenar los libros.

365
00:17:57,520 --> 00:17:59,090
Si no sabes de lo que estoy hablando, no te preocupes.

366
00:17:59,090 --> 00:18:00,760
Vamos a llegar muy pronto

367
00:18:02,100 --> 00:18:05,940
Entonces, todo lo que hay que hacer aqu es abrirlo en modo escritura.

368
00:18:05,940 --> 00:18:07,910
Y no tienes que hacer nada con eso.

369
00:18:07,910 --> 00:18:09,630
Se cerrar automticamente cuando salga del

370
00:18:09,630 --> 00:18:12,450
administrador de contexto, por lo que no tiene que preocuparse

371
00:18:12,450 --> 00:18:14,810
por nada, y de hecho, como el archivo

372
00:18:14,810 --> 00:18:16,530
es opcional, tampoco lo necesita, porque

373
00:18:16,530 --> 00:18:18,760
no va a usar el variable para cualquier cosa.

374
00:18:18,760 --> 00:18:23,590
Y nuevamente, esto es solo para asegurarse de que el archivo est all.

375
00:18:25,120 --> 00:18:28,240
De acuerdo, ahora podemos volver a ejecutar la aplicacin, enumerar nuestros libros.

376
00:18:30,970 --> 00:18:32,440
Oh, por supuesto, mi mal.

377
00:18:32,440 --> 00:18:33,850
Creamos el mtodo aqu, la

378
00:18:33,850 --> 00:18:35,320
funcin en la interfaz, pero

379
00:18:35,320 --> 00:18:37,000
en realidad no lo llamamos.

380
00:18:37,000 --> 00:18:39,530
Entonces, en la parte superior del men, antes de que le preguntemos al

381
00:18:39,530 --> 00:18:44,420
usuario su entrada, solo escriba la base de datos. crear. book_table (), y eso

382
00:18:44,420 --> 00:18:46,490
ser todo lo que necesita hacer.

383
00:18:46,490 --> 00:18:49,430
Ahora podemos hacer una lista de libros y no recuperamos nada.

384
00:18:50,390 --> 00:18:53,530
Sintase libre, por supuesto, de seguir desarrollando este programa, y lo

385
00:18:53,530 --> 00:18:55,020
detuve, y cuando lo detenga,

386
00:18:55,020 --> 00:18:56,650
tambin obtendr un buen error all.

387
00:18:56,650 --> 00:18:58,580
Sintase libre de agregar algunas cosas ms a su programa.

388
00:18:58,580 --> 00:19:00,000
Qu pasa si no hay libros?

389
00:19:00,000 --> 00:19:01,250
Imprime algo ms.

390
00:19:02,580 --> 00:19:06,380
Ya sabes, agrega algunos datos ms a la librera.

391
00:19:06,380 --> 00:19:07,980
Haces lo que quieras hacer.

392
00:19:07,980 --> 00:19:10,210
Este es su programa ahora, as

393
00:19:10,210 --> 00:19:12,270
que felicitaciones por terminar este segmento.

394
00:19:13,140 --> 00:19:16,800
A medida que avanzamos, vamos a ver cmo almacenar esta informacin

395
00:19:16,800 --> 00:19:19,700
como JSON, y si ests interesado en eso, solo

396
00:19:19,700 --> 00:19:21,150
mira el siguiente video.

397
00:19:21,150 --> 00:19:23,640
Si no est realmente interesado en almacenar cosas en la base

398
00:19:23,640 --> 00:19:26,880
de datos, en archivos por ms tiempo, sintase libre de omitir el siguiente video.

399
00:19:26,880 --> 00:19:29,550
Pase al siguiente, donde lo veremos, comenzaremos

400
00:19:29,550 --> 00:19:32,630
a buscar en las bases de datos.

401
00:19:32,630 --> 00:19:34,250
As que te ver en el siguiente

402
00:19:34,250 --> 00:19:35,440
video o en el siguiente.

403
00:19:35,440 --> 00:19:36,710
Te veo pronto.

