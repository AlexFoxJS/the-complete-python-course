1
00:00:00,296 --> 00:00:01,968
-: Ol e bem vindo de volta.

2
00:00:01,968 --> 00:00:04,738
Argumentos padro mutveis,  uma

3
00:00:04,738 --> 00:00:06,183
ideia terrvel.

4
00:00:06,183 --> 00:00:08,444
Ento aqui est uma armadilha comum no

5
00:00:08,444 --> 00:00:10,305
Python que voc definitivamente quer

6
00:00:10,305 --> 00:00:13,105
evitar e esse  o argumento padro mutvel.

7
00:00:13,105 --> 00:00:14,419
Voc sabe o que significa

8
00:00:14,419 --> 00:00:16,154
mutvel e voc sabe o que

9
00:00:16,154 --> 00:00:17,908
significa argumento padro ento vamos juntar

10
00:00:17,908 --> 00:00:20,580
os dois juntos e vamos pegar essa funo aqui.

11
00:00:20,580 --> 00:00:23,364
Eu vou dizer, criar conta e vai fazer

12
00:00:23,364 --> 00:00:25,065
um nome da conta, que

13
00:00:25,065 --> 00:00:26,429
vai ser uma string.

14
00:00:26,429 --> 00:00:27,973
Um titular de conta que ser

15
00:00:27,973 --> 00:00:30,588
uma string, provavelmente  o nome do abridor de contas.

16
00:00:30,588 --> 00:00:34,367
E tambm, correntistas, o que vai ser uma lista e

17
00:00:34,367 --> 00:00:37,930
que vai ser igual a uma lista vazia no comeo.

18
00:00:37,930 --> 00:00:40,471
Ento, a lgica por trs disso  que

19
00:00:40,471 --> 00:00:43,159
voc vai criar uma nova conta com esse

20
00:00:43,159 --> 00:00:46,507
nome, esse ser o titular da conta, e tambm pode

21
00:00:46,507 --> 00:00:48,430
ter outros titulares de contas e

22
00:00:48,430 --> 00:00:50,177
eles aparecero nessa lista Aqui.

23
00:00:50,177 --> 00:00:52,689
Ento voc pode dar uma lista de titulares de conta.

24
00:00:52,689 --> 00:00:57,494
Ento, vamos dizer, titulares de conta, dot append, titular.

25
00:00:57,494 --> 00:01:00,382
Por padro, quando voc cria uma nova conta, voc

26
00:01:00,382 --> 00:01:02,590
anexa o titular da conta que voc

27
00:01:02,590 --> 00:01:05,612
acabou de adicionar  lista de titulares de conta

28
00:01:05,612 --> 00:01:08,546
e, se houver outros titulares de conta nessa lista,

29
00:01:08,546 --> 00:01:10,219
voc tambm os usar.

30
00:01:10,219 --> 00:01:11,318
E ento ns

31
00:01:11,318 --> 00:01:13,492
vamos retornar um dicionrio representando nossa conta.

32
00:01:13,492 --> 00:01:15,014
E esse ser o nome

33
00:01:15,014 --> 00:01:16,931
da conta, o titular da conta

34
00:01:18,056 --> 00:01:20,671
principal e esse ser o parmetro de suporte aqui.

35
00:01:20,671 --> 00:01:23,113
E ento vai ser, titulares de conta

36
00:01:23,113 --> 00:01:25,702
Vai ser a lista de titulares de conta.

37
00:01:25,702 --> 00:01:28,300
Novamente, como chamamos isso, temos, por

38
00:01:28,300 --> 00:01:29,711
exemplo, uma conta.

39
00:01:29,711 --> 00:01:32,196
Vamos criar conta, conta corrente e

40
00:01:32,196 --> 00:01:34,113
o portador  Rolf.

41
00:01:35,021 --> 00:01:37,230
Observe como no precisamos passar um argumento para

42
00:01:37,230 --> 00:01:38,403
obter o parmetro de

43
00:01:38,403 --> 00:01:41,932
titulares de conta porque ele tem um valor padro que  essa lista.

44
00:01:41,932 --> 00:01:44,147
Ento, o que vai acontecer  que o

45
00:01:44,147 --> 00:01:46,760
nome vai ser verificado, os detentores sero Rolf e,

46
00:01:46,760 --> 00:01:48,581
para os titulares da conta, que

47
00:01:48,581 --> 00:01:50,162
 uma lista vazia, vamos

48
00:01:50,162 --> 00:01:52,978
anexar Rolf, porque esse  o nico detentor da conta.

49
00:01:52,978 --> 00:01:54,190
E ento ns vamos retornar um

50
00:01:54,190 --> 00:01:56,369
dicionrio, que  o principal titular da conta, que  Rolf.

51
00:01:56,369 --> 00:01:57,503
E uma lista de

52
00:01:57,503 --> 00:01:59,766
correntistas, que no momento, inclui apenas o Rolf.

53
00:01:59,766 --> 00:02:02,341
Se quisssemos ter vrios titulares de contas, poderamos

54
00:02:02,341 --> 00:02:03,721
fazer isso por exemplo

55
00:02:03,721 --> 00:02:06,531
e, em seguida, os titulares das contas sero Jen

56
00:02:06,531 --> 00:02:09,574
e Rolf, porque acrescentamos o opener, o titular da

57
00:02:09,574 --> 00:02:12,024
conta principal,  lista de titulares de contas.

58
00:02:12,024 --> 00:02:14,164
Mas, digamos que no queremos passar

59
00:02:14,164 --> 00:02:16,525
em um argumento para esta lista.

60
00:02:16,525 --> 00:02:17,789
Ns s queremos criar

61
00:02:17,789 --> 00:02:19,123
uma conta e isso

62
00:02:19,123 --> 00:02:21,790
ser tratado por ns, e colocar Rolf nessa lista.

63
00:02:22,697 --> 00:02:25,022
Ento vamos criar outra conta.

64
00:02:25,022 --> 00:02:26,039
Digamos que uma

65
00:02:26,039 --> 00:02:29,863
conta poupana, mas desta vez, Jen  a proprietria da conta e imaginemos

66
00:02:29,863 --> 00:02:31,115
que ela tenha algum

67
00:02:31,115 --> 00:02:33,335
tipo de finanas compartilhadas e que ela

68
00:02:33,335 --> 00:02:35,321
seja a proprietria da conta, e ela

69
00:02:35,321 --> 00:02:36,897
 a nica proprietria dessa conta.

70
00:02:36,897 --> 00:02:40,897
Digamos, Rolf envia o dinheiro todo ms.

71
00:02:42,184 --> 00:02:43,693
a2 e a1 so ambos dicionrios,

72
00:02:43,693 --> 00:02:45,352
 o que esta funo retorna.

73
00:02:45,352 --> 00:02:48,219
O que vamos ver quando imprimirmos a2?

74
00:02:48,219 --> 00:02:49,475
Esta  uma pergunta complicada, claro.

75
00:02:49,475 --> 00:02:51,610
Eu sei que voc j sabe sobre funes e dicionrios,

76
00:02:51,610 --> 00:02:53,200
ento por que eu lhe perguntaria isso?

77
00:02:53,200 --> 00:02:54,651
Esta  uma pergunta capciosa: O

78
00:02:54,651 --> 00:02:56,085
que  que vai voltar?

79
00:02:56,085 --> 00:02:58,163
E importante, tente primeiro

80
00:02:58,163 --> 00:03:00,413
se no quiser estar errado.

81
00:03:03,889 --> 00:03:07,000
Espero que voc tenha tentado isso.

82
00:03:07,000 --> 00:03:08,801
Como voc pode ver aqui, o

83
00:03:08,801 --> 00:03:11,754
que vemos  o nome  poupana, o titular

84
00:03:11,754 --> 00:03:16,073
da conta principal  Jen, mas os titulares da conta so Rolf e Jen.

85
00:03:16,073 --> 00:03:18,299
Ento como  que isso aconteceu?

86
00:03:18,299 --> 00:03:22,363
Esta funo aqui nunca viu Rolf em qualquer lugar.

87
00:03:22,363 --> 00:03:24,772
Rolf no conseguiu passar a funo, no

88
00:03:24,772 --> 00:03:28,215
est em nenhum dos argumentos, eu no codifiquei Rolf aqui.

89
00:03:28,215 --> 00:03:30,132
Ento, como isso aconteceu?

90
00:03:31,232 --> 00:03:34,815
Bem, o que aconteceu aqui  que o parmetro padro

91
00:03:35,839 --> 00:03:37,792
para a funo de criar

92
00:03:37,792 --> 00:03:41,134
conta  avaliado quando a funo  definida no

93
00:03:41,134 --> 00:03:43,036
quando a funo  chamada.

94
00:03:43,036 --> 00:03:46,445
Portanto, essa lista aqui e a qual esse

95
00:03:46,445 --> 00:03:49,612
parmetro aponta, por padro,  esse objeto.

96
00:03:51,733 --> 00:03:54,267
Ento isso  criado quando a funo

97
00:03:54,267 --> 00:03:57,084
 criada no quando a funo  chamada.

98
00:03:57,084 --> 00:03:58,568
Eu vou deixar isso mais claro para voc.

99
00:03:58,568 --> 00:04:01,129
Vou at aqui, imprima o ID

100
00:04:01,129 --> 00:04:04,046
dos titulares de conta e execute-o novamente.

101
00:04:04,884 --> 00:04:07,340
E observe como as duas vezes que executamos a

102
00:04:07,340 --> 00:04:08,923
funo, o id  o mesmo.

103
00:04:10,575 --> 00:04:14,191
Quando no passamos o parmetro, desculpe, um argumento

104
00:04:14,191 --> 00:04:16,098
aqui Usamos essa lista.

105
00:04:16,098 --> 00:04:19,872
Ns no usamos uma nova lista, usamos essa lista e

106
00:04:19,872 --> 00:04:22,730
isso foi definido quando a funo foi definida.

107
00:04:22,730 --> 00:04:25,332
Ento,  sempre a mesma lista para cada vez

108
00:04:25,332 --> 00:04:26,697
que a funo  chamada,

109
00:04:26,697 --> 00:04:30,135
ento quando modificamos a lista, quando a modificamos, ainda  a mesma

110
00:04:30,135 --> 00:04:32,234
lista que da prxima vez que a

111
00:04:32,234 --> 00:04:34,342
funo chama ento ela contm Rolf, antes

112
00:04:34,342 --> 00:04:36,037
de tudo modificar para conter Jen novamente.

113
00:04:36,037 --> 00:04:37,884
E se fizermos isso

114
00:04:37,884 --> 00:04:40,638
novamente, ser Rolf, Jen e outra pessoa.

115
00:04:40,638 --> 00:04:42,980
Ento, existem duas maneiras de resolver esse problema.

116
00:04:42,980 --> 00:04:44,932
Este  um problema comum, a propsito, no

117
00:04:44,932 --> 00:04:46,645
aquele que muitas pessoas percebem e muitas

118
00:04:46,645 --> 00:04:48,021
pessoas comeam a fazer isso e

119
00:04:48,021 --> 00:04:49,746
ento elas so como "o que diabos

120
00:04:49,746 --> 00:04:52,076
est acontecendo no meu cdigo? Eu no entendo".

121
00:04:52,076 --> 00:04:54,433
Ento, duas maneiras de resolver esse problema.

122
00:04:54,433 --> 00:04:58,123
Primeiro,  claro, no ter um argumento padro.

123
00:04:58,123 --> 00:04:59,041
Simples o suficiente.

124
00:04:59,041 --> 00:05:01,413
No tenha um argumento padro,

125
00:05:01,413 --> 00:05:04,410
passe em uma lista vazia aqui.

126
00:05:04,410 --> 00:05:06,897
Essas listas vazias so avaliadas quando a funo 

127
00:05:06,897 --> 00:05:08,394
chamada, de modo que ficaro vazias

128
00:05:08,394 --> 00:05:09,227
todas as vezes.

129
00:05:09,227 --> 00:05:11,310
H uma nova lista vazia.

130
00:05:12,283 --> 00:05:15,283
Nova lista vazia, um objeto claro.

131
00:05:16,292 --> 00:05:20,042
A segunda opo  no fazer disso uma lista,

132
00:05:21,280 --> 00:05:23,447
mas torn-la igual a nenhuma.

133
00:05:24,281 --> 00:05:26,693
Ok, ento voc no tem que passar nada aqui porque

134
00:05:26,693 --> 00:05:27,917
tem um argumento padro, mas

135
00:05:27,917 --> 00:05:30,792
 claro, no  nenhum, ento voc no pode anex-lo, ento o

136
00:05:30,792 --> 00:05:33,339
que voc vai fazer , se os titulares da conta

137
00:05:33,339 --> 00:05:35,549
me desculpe, se no titulares de conta, por isso,

138
00:05:35,549 --> 00:05:37,691
se os titulares de contas no o fizerem, ento

139
00:05:37,691 --> 00:05:40,201
diga que os titulares de contas agora so uma lista.

140
00:05:40,201 --> 00:05:42,494
E ento voc pode acrescentar a ele.

141
00:05:42,494 --> 00:05:44,217
Ento, o que isso faz?

142
00:05:44,217 --> 00:05:46,712
Se voc no passar uma lista aqui,

143
00:05:46,712 --> 00:05:48,457
ela criar uma nova e,

144
00:05:48,457 --> 00:05:50,345
se voc passar uma lista

145
00:05:50,345 --> 00:05:52,250
aqui, diga, por exemplo, Jen.

146
00:05:52,250 --> 00:05:54,833
Se usarmos essa lista e ela for

147
00:05:54,833 --> 00:05:56,719
anexada a ela, os titulares

148
00:05:56,719 --> 00:06:01,082
da conta acabaro sendo o titular e quem mais voc definiu aqui.

149
00:06:01,082 --> 00:06:02,392
Ento essas so suas

150
00:06:02,392 --> 00:06:05,204
duas opes para evitar problemas de argumentos mutveis.

151
00:06:05,204 --> 00:06:06,977
Argumentos mutveis so,  claro,

152
00:06:06,977 --> 00:06:09,898
qualquer tempo de dados que seja mutvel.

153
00:06:09,898 --> 00:06:11,548
Voc pode ter dicionrios, listas,

154
00:06:11,548 --> 00:06:15,813
voc pode ter objetos do seu prprio tipo e assim por diante.

155
00:06:15,813 --> 00:06:18,443
Se voc quiser evitar esses problemas,

156
00:06:18,443 --> 00:06:22,308
use tipos de dados imutveis como seus valores padro.

157
00:06:22,308 --> 00:06:25,975
Inteiros, strings, floats, tuplas e assim por diante.

158
00:06:27,021 --> 00:06:29,031
Dessa forma, voc no pode

159
00:06:29,031 --> 00:06:32,951
alterar um e no vai mudar atravs de execues da funo.

160
00:06:32,951 --> 00:06:34,057
Ento  isso para

161
00:06:34,057 --> 00:06:35,409
este vdeo que eu

162
00:06:35,409 --> 00:06:37,639
s queria que voc soubesse dessa armadilha

163
00:06:37,639 --> 00:06:40,422
muito comum para que voc no caia nessa armadilha.

164
00:06:40,422 --> 00:06:42,607
Ento  isso e eu vou te ver no prximo.

