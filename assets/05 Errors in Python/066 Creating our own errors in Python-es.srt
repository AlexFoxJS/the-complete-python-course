1
00:00:00,250 --> 00:00:01,440
Jos: Hola y bienvenido de nuevo.

2
00:00:01,440 --> 00:00:04,230
En este video estamos hablando de crear nuestros propios

3
00:00:04,230 --> 00:00:05,150
errores en Python.

4
00:00:06,250 --> 00:00:07,730
Pasemos a nuestro proyecto de

5
00:00:07,730 --> 00:00:09,900
errores y voy a crear un nuevo archivo.

6
00:00:09,900 --> 00:00:11,550
Voy a llamar a esto errores. py.

7
00:00:13,360 --> 00:00:16,040
Y ahora tenemos un archivo en blanco.

8
00:00:16,040 --> 00:00:18,140
Hemos analizado cmo podemos generar errores,

9
00:00:18,140 --> 00:00:20,830
pero solo hemos utilizado los errores incorporados.

10
00:00:20,830 --> 00:00:23,420
Eso es, por ejemplo, aumentar TypeError.

11
00:00:25,909 --> 00:00:30,550
Tenemos este tipo y hemos creado un nuevo objeto de l.

12
00:00:30,550 --> 00:00:32,619
Y eso es lo que planteamos.

13
00:00:32,619 --> 00:00:36,660
Ahora sabemos cmo crear una clase que

14
00:00:36,660 --> 00:00:39,280
ample todo de otra clase,

15
00:00:39,280 --> 00:00:40,710
esencialmente una copia.

16
00:00:40,710 --> 00:00:42,520
Cmo creamos una clase que es esencialmente una

17
00:00:42,520 --> 00:00:43,353
copia de otra clase?

18
00:00:43,353 --> 00:00:44,710
Al usar herencia.

19
00:00:45,620 --> 00:00:48,180
Si tuviramos que crear un

20
00:00:49,250 --> 00:00:51,700
error personalizado para poder hacer

21
00:00:54,700 --> 00:00:59,700
MyCustomError, recuerde que esta es una clase y tiene que heredar

22
00:01:01,170 --> 00:01:04,010
de uno de los errores incorporados.

23
00:01:04,010 --> 00:01:06,480
Puede elegir el que desee, por ejemplo TypeError.

24
00:01:07,592 --> 00:01:10,050
Contine y cierre el video e intente crear

25
00:01:10,050 --> 00:01:12,210
una clase que herede de un TypeError.

26
00:01:12,210 --> 00:01:14,470
Cmo puede hacer eso?

27
00:01:14,470 --> 00:01:15,310
Es bastante sencillo,

28
00:01:15,310 --> 00:01:16,910
solo sern un par de lneas.

29
00:01:21,040 --> 00:01:23,000
De acuerdo, espero que lo hayas logrado.

30
00:01:23,000 --> 00:01:24,140
Muy sencillo.

31
00:01:24,140 --> 00:01:26,300
Pero puede ser un poco confuso cuando te

32
00:01:26,300 --> 00:01:29,110
encuentras con que tienes que hacer algo en un nuevo escenario

33
00:01:29,110 --> 00:01:31,050
en el que no has pensado antes.

34
00:01:31,050 --> 00:01:32,910
Crear una clase que ample un

35
00:01:32,910 --> 00:01:34,520
TypeError es como crear una clase

36
00:01:34,520 --> 00:01:35,950
que ample cualquier otra clase.

37
00:01:35,950 --> 00:01:39,560
Clase, MyCustomeError, TypeError.

38
00:01:41,860 --> 00:01:44,510
Y luego, por supuesto, necesitamos el bloque

39
00:01:44,510 --> 00:01:47,120
sangrado, pero podemos escribir pase para simplemente

40
00:01:47,120 --> 00:01:49,170
pasar y no hacer nada.

41
00:01:50,080 --> 00:01:52,740
Ahora podemos aumentar MyCustomError porque

42
00:01:52,740 --> 00:01:55,740
esencialmente es TypeError, ahora tiene

43
00:01:55,740 --> 00:01:57,240
un nuevo nombre.

44
00:01:58,740 --> 00:02:00,060
Para que podamos plantearlo, hagamos

45
00:02:00,060 --> 00:02:03,100
clic derecho en los errores. py y ejecutarlo.

46
00:02:03,100 --> 00:02:04,580
Por cierto, si comienzas a

47
00:02:04,580 --> 00:02:06,780
acostumbrarte a presionar el botn de reproduccin

48
00:02:06,780 --> 00:02:08,340
aqu arriba a la derecha,

49
00:02:08,340 --> 00:02:12,080
est bien, pero asegrate de verificar qu ests ejecutando, que es

50
00:02:12,080 --> 00:02:13,530
lo que est aqu.

51
00:02:13,530 --> 00:02:15,070
Y ahora mismo ests ejecutando la aplicacin.

52
00:02:15,070 --> 00:02:17,040
Si presionas jugar, vas a ejecutar la aplicacin. py no

53
00:02:17,040 --> 00:02:17,873
errores py,

54
00:02:17,873 --> 00:02:21,160
por lo que es posible que desee ejecutar errores.

55
00:02:21,160 --> 00:02:25,140
Ahora observa cmo obtienes MyCustomError aqu.

56
00:02:26,260 --> 00:02:29,100
Pero no tiene un mensaje ni nada de eso.

57
00:02:29,100 --> 00:02:32,750
Y lo que obtienes a continuacin es guin bajo, subrayado

58
00:02:32,750 --> 00:02:35,070
principal, guin bajo, guin bajo, punto, MyCustomError.

59
00:02:37,070 --> 00:02:39,910
No te preocupes demasiado por la parte principal.

60
00:02:39,910 --> 00:02:42,320
Vamos a ver exactamente lo que significa

61
00:02:42,320 --> 00:02:43,644
en la siguiente seccin.

62
00:02:43,644 --> 00:02:47,589
Pero solo tenga en cuenta que se las arregla para generar y error,

63
00:02:47,589 --> 00:02:49,520
lo que se llama MyCustomError y,

64
00:02:49,520 --> 00:02:50,680
por supuesto, puede poner

65
00:02:55,929 --> 00:02:56,762
aqu un mensaje.

66
00:02:56,762 --> 00:02:57,595
Este es un mensaje

67
00:02:57,595 --> 00:02:59,100
bastante terrible, pero sabes que puedes.

68
00:02:59,100 --> 00:03:02,030
Ahora que hemos hecho esta edicin y tambin me

69
00:03:02,030 --> 00:03:04,720
gustara intercalar aqu algunas bondades de encanto de Py.

70
00:03:04,720 --> 00:03:09,130
Ahora nuestro archivo de ejecucin ha cambiado los errores. py.

71
00:03:09,130 --> 00:03:10,610
Entonces, podemos presionar el botn de

72
00:03:10,610 --> 00:03:11,690
reproduccin aqu arriba a

73
00:03:11,690 --> 00:03:14,390
la derecha, o podemos presionar el botn de reproduccin aqu abajo

74
00:03:15,470 --> 00:03:17,010
a la izquierda, y eso est bien.

75
00:03:17,010 --> 00:03:18,760
Eso va a volver a ejecutar ese archivo.

76
00:03:18,760 --> 00:03:21,690
Y ahora puedes ver que obtienes una buena

77
00:03:21,690 --> 00:03:23,950
descripcin junto a tu nombre del error.

78
00:03:24,930 --> 00:03:27,750
As es como puedes crear tus errores personalizados.

79
00:03:28,880 --> 00:03:33,880
Ahora, por supuesto, puede tener un error personalizado que requiera ms datos

80
00:03:34,060 --> 00:03:38,710
que solo un mensaje, y esto forma parte del poder de

81
00:03:38,710 --> 00:03:41,930
estos errores personalizados que, por ejemplo, dicen

82
00:03:41,930 --> 00:03:43,500
que desea que su

83
00:03:43,500 --> 00:03:46,770
error personalizado incluya un cdigo de error.

84
00:03:46,770 --> 00:03:47,950
Estas cosas son bastante populares.

85
00:03:47,950 --> 00:03:49,710
Por ejemplo, si alguna vez tienes

86
00:03:49,710 --> 00:03:51,177
una impresora, sabrs que te

87
00:03:51,177 --> 00:03:52,399
dan cdigos de error

88
00:03:52,399 --> 00:03:55,002
por todas partes y, a veces, puede ser til tener

89
00:03:55,002 --> 00:03:56,440
cdigos de error en tus mensajes.

90
00:03:56,440 --> 00:03:59,820
Ahora, una opcin es, por supuesto, tener algo

91
00:03:59,820 --> 00:04:04,100
as como el cdigo de error 500, ouch un error sucedido.

92
00:04:04,100 --> 00:04:07,640
Pero no se sabe que este cdigo de error es 500 desde

93
00:04:07,640 --> 00:04:09,420
el punto de vista de un

94
00:04:09,420 --> 00:04:10,710
programa porque, por supuesto,

95
00:04:10,710 --> 00:04:13,342
se trata de una cadena, solo se trata de

96
00:04:13,342 --> 00:04:15,980
letras, nmeros y smbolos, y Python no puede interpretarlo.

97
00:04:15,980 --> 00:04:18,620
Si luego desea verificar si su error

98
00:04:18,620 --> 00:04:19,924
tiene un cdigo 500

99
00:04:19,924 --> 00:04:22,120
o no, no sera tan fcil.

100
00:04:22,120 --> 00:04:25,084
Entonces, en cambio, lo mejor que se puede hacer

101
00:04:25,084 --> 00:04:29,040
es tener dos argumentos, el mensaje y luego el cdigo, por ejemplo 500.

102
00:04:30,660 --> 00:04:32,170
Pero, para hacer

103
00:04:32,170 --> 00:04:37,060
eso, tenemos que definir un nuevo constructor en MyCustomError.

104
00:04:37,060 --> 00:04:39,220
Entonces, hagamos eso y lo

105
00:04:39,220 --> 00:04:43,950
que queremos hacer es llamar al constructor de la superclase

106
00:04:43,950 --> 00:04:48,010
con, lo siento, el cdigo del mensaje, llamar al

107
00:04:48,010 --> 00:04:50,890
constructor de la superclase con un

108
00:04:50,890 --> 00:04:52,710
mensaje como argumento.

109
00:04:52,710 --> 00:04:55,070
Se llama mtodo de superclase init

110
00:04:55,070 --> 00:04:56,880
con el mensaje como argumento

111
00:04:56,880 --> 00:04:59,070
y luego establece el cdigo para

112
00:04:59,070 --> 00:05:01,570
que sea una propiedad del objeto MyCustomError.

113
00:05:01,570 --> 00:05:03,650
Por lo tanto, pausa el video y prubalo.

114
00:05:08,507 --> 00:05:09,760
Espero que hayas logrado.

115
00:05:09,760 --> 00:05:12,960
Para llamar al mtodo init de la superclase,

116
00:05:12,960 --> 00:05:16,380
todo lo que hacemos es iniciar el mensaje.

117
00:05:16,380 --> 00:05:19,470
Entonces, ahora estamos pasando el parmetro message

118
00:05:19,470 --> 00:05:21,780
al mtodo init de la

119
00:05:21,780 --> 00:05:23,300
superclase que es TypeError.

120
00:05:23,300 --> 00:05:27,580
Y tambin podemos decir que el cdigo autodirigido es igual al

121
00:05:28,510 --> 00:05:29,343
cdigo, as.

122
00:05:31,520 --> 00:05:32,660
Bueno?

123
00:05:32,660 --> 00:05:37,660
Ahora tenemos esto aqu y podemos reproducir el archivo de errores nuevamente.

124
00:05:38,600 --> 00:05:42,490
Pero observe cmo no obtenemos informacin adicional

125
00:05:42,490 --> 00:05:44,260
en el mensaje.

126
00:05:44,260 --> 00:05:46,200
Tenemos "Ouch, ha ocurrido un error", y

127
00:05:46,200 --> 00:05:48,830
no sabemos si es un cdigo de error 500.

128
00:05:48,830 --> 00:05:52,260
Todos tenemos este cdigo de 500 en la lnea donde en

129
00:05:52,260 --> 00:05:54,460
realidad levantamos el error porque esta es

130
00:05:54,460 --> 00:05:57,910
la lnea donde levantamos el error y hemos escrito 500 all.

131
00:05:57,910 --> 00:05:58,838
Entonces, qu podemos hacer?

132
00:05:58,838 --> 00:06:02,190
Bueno, podramos poner el cdigo de error aqu otra vez, pero por

133
00:06:04,450 --> 00:06:06,650
supuesto que no es genial, porque si vas

134
00:06:06,650 --> 00:06:07,900
y cambias esto cuando

135
00:06:07,900 --> 00:06:09,850
dices 400, entonces tambin tienes que ir

136
00:06:09,850 --> 00:06:11,370
aqu y cambiar la cadena.

137
00:06:11,370 --> 00:06:12,748
Entonces, no es fantstico.

138
00:06:12,748 --> 00:06:14,760
No queremos hacer eso.

139
00:06:14,760 --> 00:06:19,375
Qu podemos hacer para incluir este cdigo de error

140
00:06:19,375 --> 00:06:21,040
dentro del mensaje?

141
00:06:26,730 --> 00:06:28,270
Espero que lo hayas logrado.

142
00:06:28,270 --> 00:06:31,000
Todo lo que tienes que hacer es, cuando te

143
00:06:31,000 --> 00:06:32,430
lo demuestro, si no lo

144
00:06:32,430 --> 00:06:34,340
logras del todo, es bastante obvio,

145
00:06:34,340 --> 00:06:36,340
pero por supuesto, piensas de esta manera.

146
00:06:36,340 --> 00:06:37,840
Solo desea crear

147
00:06:37,840 --> 00:06:42,480
una nueva cadena que diga cdigo de error, cdigo, mensaje.

148
00:06:44,110 --> 00:06:44,943
Eso es.

149
00:06:45,980 --> 00:06:48,590
Y solo estamos creando una nueva cadena,

150
00:06:48,590 --> 00:06:51,520
que ahora reemplazamos el mensaje que recibimos por

151
00:06:51,520 --> 00:06:55,090
esta otra cadena que tambin contiene el cdigo de error.

152
00:06:56,750 --> 00:07:00,300
Y, para estar pensando de esta manera,

153
00:07:00,300 --> 00:07:01,780
eso lleva tiempo.

154
00:07:03,798 --> 00:07:06,100
En esencia, puedes hacer lo que quieras.

155
00:07:06,100 --> 00:07:10,470
Todo lo que est sucediendo en estas llamadas a mtodos, llamando al mtodo

156
00:07:10,470 --> 00:07:13,580
init y planteando cosas as, los datos se estn

157
00:07:13,580 --> 00:07:15,630
moviendo de un lugar a otro.

158
00:07:16,510 --> 00:07:17,830
Tienes esta cadena y

159
00:07:18,810 --> 00:07:22,000
esa cadena ahora est siendo asignada a un mensaje.

160
00:07:22,000 --> 00:07:24,460
Luego, ese mensaje iba a pasar a este mtodo de inicio,

161
00:07:24,460 --> 00:07:26,600
donde se lo iba a asignar a otra cosa.

162
00:07:26,600 --> 00:07:29,240
En algn lugar del cdigo de Python,

163
00:07:29,240 --> 00:07:30,620
ese mensaje iba a

164
00:07:30,620 --> 00:07:33,110
ser usado para imprimirlo en la consola.

165
00:07:33,110 --> 00:07:35,860
Pero, eso es solo una cadena.

166
00:07:37,209 --> 00:07:41,270
Puedes poner all, puedes poner cualquier valor de cadena que desees, lo

167
00:07:41,270 --> 00:07:43,410
que significa que puedes modificarlo aqu

168
00:07:43,410 --> 00:07:45,610
y solo pasar datos ligeramente diferentes.

169
00:07:45,610 --> 00:07:47,220
Eso est totalmente bien.

170
00:07:47,220 --> 00:07:48,780
No hay problema en absoluto.

171
00:07:48,780 --> 00:07:50,780
Todo lo que estamos haciendo es

172
00:07:50,780 --> 00:07:53,920
modificar algunos datos, pasarlos al siguiente nivel, que es TypeError.

173
00:07:53,920 --> 00:07:55,494
Y en cualquier nivel de

174
00:07:55,494 --> 00:07:56,830
nuestro programa, cualquier lnea

175
00:07:56,830 --> 00:07:59,690
que queramos, podemos cambiar los datos que estamos transmitiendo.

176
00:07:59,690 --> 00:08:01,473
Y de eso se trata

177
00:08:01,473 --> 00:08:06,270
en realidad la programacin, pasar datos, pasar mensajes de un lugar a otro.

178
00:08:07,730 --> 00:08:09,490
De todos modos, ahora que

179
00:08:09,490 --> 00:08:11,710
hemos analizado cmo crear tus propios

180
00:08:11,710 --> 00:08:15,050
errores personalizados, tambin quera darte ms bondades de Python,

181
00:08:15,050 --> 00:08:16,600
que es la docstring.

182
00:08:16,600 --> 00:08:19,440
Todava no hemos visto los documentos, pero,

183
00:08:19,440 --> 00:08:22,430
bueno, estoy a punto de contarte sobre ellos.

184
00:08:22,430 --> 00:08:27,430
Debajo de la clase y no dentro del mtodo init, puede escribir una

185
00:08:27,670 --> 00:08:30,170
cadena de varias lneas, y si

186
00:08:30,170 --> 00:08:31,160
recuerda correctamente, las

187
00:08:31,160 --> 00:08:33,590
cadenas de varias lneas son las

188
00:08:33,590 --> 00:08:37,560
que tienen tres comillas al principio y tres al final.

189
00:08:37,560 --> 00:08:40,090
Esta es una cadena de varias lneas, lo que

190
00:08:40,090 --> 00:08:42,480
significa que, por ejemplo, aqu abajo, puede imprimir la

191
00:08:42,480 --> 00:08:47,480
cadena de lnea mltiple que dice: "Hola, cmo ests? " Al igual

192
00:08:51,790 --> 00:08:52,623
que.

193
00:08:54,933 --> 00:08:56,070
Y, por supuesto, no puedes hacer

194
00:08:56,070 --> 00:08:57,330
eso porque has presentado un error all.

195
00:08:57,330 --> 00:08:58,870
Pero esto est bien, ya sabes.

196
00:08:58,870 --> 00:09:01,590
Puede ejecutar esto aqu y lo

197
00:09:01,590 --> 00:09:04,113
que obtiene es un montn de

198
00:09:04,113 --> 00:09:07,950
lneas all con la sangra y todo lo dems.

199
00:09:09,520 --> 00:09:11,820
Si haces eso, ahora tienes dos lneas.

200
00:09:11,820 --> 00:09:13,300
Por supuesto, esta es una nueva lnea aqu,

201
00:09:13,300 --> 00:09:15,600
por lo que es posible que desee hacer esto en su lugar.

202
00:09:15,600 --> 00:09:17,390
Ahora los tienes todos en una sola lnea.

203
00:09:17,390 --> 00:09:19,340
Esta es una cadena de varias lneas.

204
00:09:20,700 --> 00:09:23,250
Y, las cadenas de varias lneas son muy tiles

205
00:09:23,250 --> 00:09:24,500
cuando tiene una secuencia realmente

206
00:09:24,500 --> 00:09:26,920
larga que desea imprimir o usar de otra manera.

207
00:09:26,920 --> 00:09:30,725
Pero tambin, cuando tienes una cadena de

208
00:09:30,725 --> 00:09:33,710
varias lneas, directamente debajo de una

209
00:09:33,710 --> 00:09:37,380
clase, o directamente debajo de un mtodo

210
00:09:38,366 --> 00:09:40,420
o una funcin, puedes

211
00:09:40,420 --> 00:09:44,160
escribir algunas cosas aqu que sern una docstring.

212
00:09:44,160 --> 00:09:46,550
Es algo de informacin sobre lo que hace

213
00:09:46,550 --> 00:09:49,090
la clase o cundo se usa o por qu

214
00:09:49,090 --> 00:09:52,620
se usa, para que otros desarrolladores de Python puedan verla y entender

215
00:09:52,620 --> 00:09:55,300
lo que hace y tambin se convierte en parte

216
00:09:55,300 --> 00:09:57,820
de tu cdigo y te mostrar exactamente lo que

217
00:09:57,820 --> 00:09:59,330
eso significa en solo un momento.

218
00:09:59,330 --> 00:10:01,550
Entonces, digamos que quisimos decirle a

219
00:10:01,550 --> 00:10:05,910
otros desarrolladores que la excepcin MyCustomError se ha generado cuando se necesita

220
00:10:05,910 --> 00:10:07,600
un cdigo de error especfico.

221
00:10:07,600 --> 00:10:09,190
Porque esto tiene un cdigo aqu.

222
00:10:10,540 --> 00:10:12,707
Y luego cambiaremos

223
00:10:12,707 --> 00:10:17,580
el nombre de MyCustomError a RunTimeErrorWithCode por ejemplo.

224
00:10:17,580 --> 00:10:19,470
No es un buen nombre pero, ya sabes.

225
00:10:20,880 --> 00:10:22,500
Entonces, ahora, lo que podemos hacer,

226
00:10:23,600 --> 00:10:27,090
es que podemos, cada vez que miramos este cdigo, vemos rpidamente, est bien,

227
00:10:27,090 --> 00:10:29,620
esta es una excepcin que se plantea cuando se

228
00:10:29,620 --> 00:10:32,120
necesita un cdigo de error especfico, eso es genial.

229
00:10:34,000 --> 00:10:38,897
Y eso nos ayuda a entender exactamente para qu es esto.

230
00:10:38,897 --> 00:10:43,000
Si tuviera que crear un objeto de

231
00:10:43,000 --> 00:10:47,350
este tipo sin crearlo, solo por ejemplo,

232
00:10:50,050 --> 00:10:55,050
puede imprimir, errar, subrayar, subrayar, subrayar, doblar, subrayar,

233
00:10:55,559 --> 00:10:56,480
subrayar.

234
00:10:56,480 --> 00:11:01,480
Por supuesto, le daremos los argumentos que necesita.

235
00:11:03,190 --> 00:11:05,440
Por lo tanto, puede completar el nombre de la

236
00:11:05,440 --> 00:11:08,560
variable que es su objeto punto, guin bajo, guin bajo, doc, guin

237
00:11:09,716 --> 00:11:10,570
bajo, guin bajo.

238
00:11:10,570 --> 00:11:12,790
Y eso te dar la

239
00:11:12,790 --> 00:11:14,650
documentacin que escribiste all.

240
00:11:14,650 --> 00:11:17,690
Esto es particularmente til cuando ests desarrollando

241
00:11:17,690 --> 00:11:21,067
y quieres, ya sabes, ver qu es lo

242
00:11:21,067 --> 00:11:23,300
que se define como algo.

243
00:11:24,370 --> 00:11:26,920
Tal vez no sea tan til cuando

244
00:11:26,920 --> 00:11:28,560
ests escribiendo un programa, pero

245
00:11:28,560 --> 00:11:31,970
no obstante, es interesante que Python vea esto aqu, que

246
00:11:31,970 --> 00:11:33,520
es solo una cadena,

247
00:11:33,520 --> 00:11:36,200
como algo que tiene un significado particular.

248
00:11:36,200 --> 00:11:39,000
Y usar cadenas de documentos, por ejemplo

249
00:11:39,000 --> 00:11:41,800
en funciones, funciones particularmente complejas y en

250
00:11:41,800 --> 00:11:43,432
clases para explicar lo

251
00:11:43,432 --> 00:11:48,265
que hacen, y tambin puede usarlas en la parte superior de

252
00:11:48,265 --> 00:11:50,850
su archivo como definicin de mdulo

253
00:11:50,850 --> 00:11:53,980
o de qu se trata este archivo.

254
00:11:53,980 --> 00:11:54,870
Puedes hacer eso

255
00:11:54,870 --> 00:11:56,470
tambin, puedes poner una docstring aqu.

256
00:11:58,040 --> 00:12:02,770
Hay muchas herramientas que leern esas cadenas de documentos y crearn una

257
00:12:02,770 --> 00:12:03,940
pgina agradable explicando

258
00:12:03,940 --> 00:12:05,730
qu hacen las clases y

259
00:12:05,730 --> 00:12:06,594
qu hacen

260
00:12:06,594 --> 00:12:10,110
sus mtodos, y esto es para crear documentacin y

261
00:12:10,110 --> 00:12:11,380
puede ser muy til.

262
00:12:11,380 --> 00:12:13,780
Y as es como realmente lleg la docstring.

263
00:12:13,780 --> 00:12:16,561
Era gente que quera agregar algunas descripciones sobre lo

264
00:12:16,561 --> 00:12:18,957
que hacen sus clases y sus mtodos.

265
00:12:18,957 --> 00:12:20,340
Por lo tanto, sintase

266
00:12:20,340 --> 00:12:21,370
libre de hacer

267
00:12:21,370 --> 00:12:23,800
eso, especialmente si crea funciones ligeramente ms complejas,

268
00:12:23,800 --> 00:12:25,530
como vemos en las siguientes secciones,

269
00:12:25,530 --> 00:12:27,220
vamos a fusionar realmente todos

270
00:12:27,220 --> 00:12:28,400
nuestros conocimientos de Python

271
00:12:28,400 --> 00:12:30,030
y crear algunos proyectos ms agradables.

272
00:12:30,030 --> 00:12:31,799
Puede usar cadenas de documentacin

273
00:12:31,799 --> 00:12:35,640
en esos casos solo para explicar para qu sirven exactamente

274
00:12:35,640 --> 00:12:37,960
estas cosas cuando vuelva a consultarlas

275
00:12:37,960 --> 00:12:39,840
semanas despus o cuando trabaje

276
00:12:39,840 --> 00:12:41,402
con otra persona y

277
00:12:41,402 --> 00:12:44,292
desee que comprendan exactamente qu sucedi ms fcilmente.

278
00:12:44,292 --> 00:12:45,560
Bueno?

279
00:12:46,810 --> 00:12:48,680
Y, por supuesto, puede tener su docstring solo

280
00:12:48,680 --> 00:12:49,513
como un lado.

281
00:12:49,513 --> 00:12:51,610
Puede hacer que docstring en una sola lnea.

282
00:12:51,610 --> 00:12:56,350
Esta es una sola lnea de varias lneas de docstring.

283
00:12:56,350 --> 00:12:59,540
Esto tambin est bien, en caso de que quiera ahorrar espacio.

284
00:12:59,540 --> 00:13:01,060
Puede hacer el

285
00:13:01,060 --> 00:13:02,770
docstring aqu, pero

286
00:13:02,770 --> 00:13:05,950
la docstring debe tener estas comillas

287
00:13:05,950 --> 00:13:08,070
dobles triples, entonces estas tres.

288
00:13:08,070 --> 00:13:10,590
Esa es solo la convencin para docstrings.

289
00:13:10,590 --> 00:13:11,900
Bueno?

290
00:13:11,900 --> 00:13:13,040
Est bien, eso es todo por este video.

291
00:13:13,040 --> 00:13:15,000
Hablamos sobre cmo crear nuestros

292
00:13:15,000 --> 00:13:16,980
propios errores extendiendo desde un

293
00:13:16,980 --> 00:13:19,280
error particular y si no desea

294
00:13:19,280 --> 00:13:22,220
extender desde TypeError porque su error no

295
00:13:22,220 --> 00:13:26,060
es simplemente un TypeError, por ejemplo, puede extender desde Exception,

296
00:13:26,060 --> 00:13:27,590
lo siento, no Error.

297
00:13:27,590 --> 00:13:29,040
Puedes extender desde Exception,

298
00:13:29,040 --> 00:13:32,390
que es la clase de Excepcin ms bsica

299
00:13:32,390 --> 00:13:34,360
de la que deberas heredar.

300
00:13:34,360 --> 00:13:36,550
No extiendas desde la excepcin base.

301
00:13:36,550 --> 00:13:37,770
Eso no es para que lo usemos.

302
00:13:37,770 --> 00:13:39,510
Solo extindete de Exception.

303
00:13:39,510 --> 00:13:41,180
Y eso est bien.

304
00:13:41,180 --> 00:13:43,515
De acuerdo, eso es todo por este video otra vez.

305
00:13:43,515 --> 00:13:45,800
Y te ver en el siguiente.

