1
00:00:00,340 --> 00:00:01,330
Jos: Hola, bienvenido de nuevo.

2
00:00:01,330 --> 00:00:05,170
En este video, vamos a desarrollar nuestro proyecto de hito.

3
00:00:05,170 --> 00:00:07,380
Si iba a tomar este video y algunos videos

4
00:00:07,380 --> 00:00:10,070
ms ya que esta es una aplicacin un poco ms grande.

5
00:00:11,020 --> 00:00:13,920
Lo que agregu aqu a nuestra aplicacin. py es

6
00:00:13,920 --> 00:00:16,360
un conjunto de vietas.

7
00:00:16,360 --> 00:00:18,200
Y los puse dentro

8
00:00:18,200 --> 00:00:20,630
de estas comillas triples aqu.

9
00:00:20,630 --> 00:00:23,620
Y s que hemos visto esto un poco

10
00:00:23,620 --> 00:00:27,760
antes, pero solo como recordatorio, esta es una cadena de varias lneas.

11
00:00:27,760 --> 00:00:29,940
Una cadena que ocupa varias lneas

12
00:00:29,940 --> 00:00:31,900
y dura desde las tres

13
00:00:31,900 --> 00:00:34,370
comillas hasta las tres comillas al final.

14
00:00:34,370 --> 00:00:37,720
Bsicamente, Python no ejecutar esto porque es solo

15
00:00:37,720 --> 00:00:38,800
una cadena.

16
00:00:38,800 --> 00:00:40,350
No hace nada.

17
00:00:40,350 --> 00:00:42,430
Por lo tanto, es una buena manera de

18
00:00:42,430 --> 00:00:43,800
escribir algunas cosas que desea

19
00:00:43,800 --> 00:00:46,370
saber para su programa o algunas cosas que desea recordar.

20
00:00:46,370 --> 00:00:47,420
As que lo

21
00:00:47,420 --> 00:00:49,090
hice aqu, solo por un beneficio.

22
00:00:49,090 --> 00:00:51,150
Tengo nuestra interfaz de usuario.

23
00:00:51,150 --> 00:00:52,840
T lo sabes por el brief.

24
00:00:53,770 --> 00:00:56,150
Ingrese un para agregar una pelcula, l para ver

25
00:00:56,150 --> 00:00:58,810
sus pelculas, f para encontrar una pelcula y q para salir.

26
00:00:58,810 --> 00:01:01,260
Esta es la parte principal de la interfaz de usuario.

27
00:01:01,260 --> 00:01:02,740
Esto es lo que el usuario ver

28
00:01:02,740 --> 00:01:04,380
la primera vez que ejecute el programa.

29
00:01:04,380 --> 00:01:06,860
Y es con lo que van a

30
00:01:06,860 --> 00:01:09,440
poder interactuar escribiendo ty, l, f y q.

31
00:01:10,850 --> 00:01:12,870
De acuerdo, esto no es una interfaz grfica.

32
00:01:12,870 --> 00:01:14,050
Eso es lo

33
00:01:14,050 --> 00:01:16,320
que normalmente veras cuando hablas de interfaces.

34
00:01:16,320 --> 00:01:19,730
Pero es una interfaz de texto y eso es totalmente vlido.

35
00:01:19,730 --> 00:01:22,960
Entonces el usuario podr hacer cuatro cosas.

36
00:01:22,960 --> 00:01:24,150
Agrega una nueva pelcula.

37
00:01:25,020 --> 00:01:27,690
Ver las pelculas existentes.

38
00:01:27,690 --> 00:01:29,840
Encuentra una pelcula en particular.

39
00:01:29,840 --> 00:01:32,440
Y deja de ejecutar el programa cuando escriben q.

40
00:01:33,670 --> 00:01:36,560
As que vamos a hacer algunas tareas que tendremos que

41
00:01:36,560 --> 00:01:38,770
hacer para que nuestro programa sea funcional.

42
00:01:40,020 --> 00:01:44,670
La primera tarea es mostrar al usuario la interfaz principal y

43
00:01:44,670 --> 00:01:45,840
obtener su entrada.

44
00:01:48,110 --> 00:01:50,180
La segunda tarea

45
00:01:51,200 --> 00:01:55,350
ser permitir a los usuarios agregar pelculas.

46
00:01:56,860 --> 00:02:01,070
Luego vamos a permitir a los usuarios mostrar todas sus pelculas.

47
00:02:02,740 --> 00:02:05,660
Encuentra una pelcula

48
00:02:06,830 --> 00:02:09,350
Finalmente, permitiremos que los usuarios

49
00:02:09,350 --> 00:02:14,220
tambin dejen de ejecutar el programa cuando escriben q.

50
00:02:15,250 --> 00:02:17,780
A medida que comencemos a desarrollar el programa,

51
00:02:17,780 --> 00:02:21,040
agregaremos ms tareas a esta lista de tareas para que

52
00:02:21,040 --> 00:02:23,750
as sea, porque va a ser una especie

53
00:02:23,750 --> 00:02:27,310
de conjunto de tareas en vivo a medida que avanzamos.

54
00:02:27,310 --> 00:02:29,940
Por ejemplo, cuando comencemos a desarrollar,

55
00:02:29,940 --> 00:02:33,920
podemos darnos cuenta, "Oye, qu es una pelcula?

56
00:02:33,920 --> 00:02:37,550
"Dnde vamos a almacenar nuestras pelculas? "En una aplicacin ms grande,

57
00:02:37,550 --> 00:02:39,120
podemos almacenarlos en una

58
00:02:39,120 --> 00:02:41,030
base de datos, por ejemplo.

59
00:02:41,030 --> 00:02:46,030
Pero aqu, vamos a tener que decidir dnde almacenar pelculas.

60
00:02:48,080 --> 00:02:50,640
Cul es el formato de una pelcula?

61
00:02:51,680 --> 00:02:54,630
Estas son algunas de las tareas en las que tendremos que pensar.

62
00:02:55,820 --> 00:02:56,653
Bueno?

63
00:02:58,050 --> 00:03:01,890
Comencemos por definir la interfaz de usuario.

64
00:03:01,890 --> 00:03:04,000
Este es nuestro men

65
00:03:04,000 --> 00:03:05,130
Y lo primero que

66
00:03:05,130 --> 00:03:07,750
queremos hacer es hacerle esta primera pregunta al usuario.

67
00:03:07,750 --> 00:03:10,270
Lo que pueden escribir para interactuar con nuestro programa.

68
00:03:10,270 --> 00:03:12,300
As que voy a guardarlo en

69
00:03:12,300 --> 00:03:15,010
una variable de entrada de subrayado del usuario,

70
00:03:15,010 --> 00:03:17,930
el resultado de esta funcin de entrada aqu.

71
00:03:17,930 --> 00:03:21,130
Y vamos a, oh, lo siento,

72
00:03:21,130 --> 00:03:24,380
copiar todo eso y ponerlo all.

73
00:03:24,380 --> 00:03:27,410
Ahora esta es una cadena un poco ms larga.

74
00:03:27,410 --> 00:03:29,940
Mi fuente es bastante grande para que ustedes puedan

75
00:03:29,940 --> 00:03:31,170
verla, pero solo dice eso.

76
00:03:31,170 --> 00:03:32,690
Y agregar dos puntos al final y

77
00:03:32,690 --> 00:03:34,640
luego un espacio, para que quede un poco mejor.

78
00:03:35,870 --> 00:03:36,720
Ah lo tenemos.

79
00:03:38,010 --> 00:03:41,840
Ahora, mientras desarrollas, puedes notar estas lneas grises.

80
00:03:42,800 --> 00:03:46,840
Y PyCharm simplemente te dice que, "Oye, el estilo de Python" tiene algunas particularidades

81
00:03:46,840 --> 00:03:50,510
que quizs quieras seguir, "y una de ellas es que espera dos lneas

82
00:03:50,510 --> 00:03:52,900
en blanco" antes de una definicin de funcin

83
00:03:52,900 --> 00:03:55,470
en lugar de una sola. "As que si agrega

84
00:03:55,470 --> 00:03:59,120
una nueva lnea en blanco en la parte superior, ser feliz".

85
00:03:59,120 --> 00:04:01,410
De manera similar, aqu dice: "Tienes

86
00:04:01,410 --> 00:04:04,930
una lnea en blanco" al final del archivo y, bueno,

87
00:04:04,930 --> 00:04:06,090
"tienes demasiados". "Entonces, si

88
00:04:06,090 --> 00:04:08,280
solo tienes uno, ser feliz, pero,

89
00:04:08,280 --> 00:04:10,570
por supuesto, vamos a seguir desarrollando aqu.

90
00:04:10,570 --> 00:04:13,210
Entonces, cuando vea estas lneas onduladas grises, sintase

91
00:04:13,210 --> 00:04:16,470
libre de buscar en Google para ver lo que significan.

92
00:04:16,470 --> 00:04:19,030
Y entonces quizs puedas deshacerte de ellos. Por cierto, PEP 8

93
00:04:19,030 --> 00:04:22,120
Aunque a veces PEP 8 puede ser un poco. es el estilo de Python. Puede ser un poco engorroso porque te constrie un poco.

94
00:04:22,120 --> 00:04:27,120
Puede limitarte un poco, as que recuerda

95
00:04:27,950 --> 00:04:31,070
que puedes ignorarlo si quieres.

96
00:04:31,070 --> 00:04:32,700
De todos modos, pequeo lado.

97
00:04:32,700 --> 00:04:35,470
Le hemos pedido al usuario su opinin y ahora lo

98
00:04:35,470 --> 00:04:37,450
que queremos hacer es lidiar con eso.

99
00:04:37,450 --> 00:04:39,800
Entonces, si user_input es a, vamos a hacer algo.

100
00:04:39,800 --> 00:04:42,320
Y lo que vamos a hacer es agregar una nueva pelcula.

101
00:04:42,320 --> 00:04:47,320
Pero an no tenemos la funcionalidad para agregar una pelcula.

102
00:04:47,360 --> 00:04:51,300
Pero sabemos que lo vamos a agregar ms adelante.

103
00:04:51,300 --> 00:04:54,560
Y ahora hay un par de preguntas que

104
00:04:54,560 --> 00:04:56,810
debemos hacernos a nosotros mismos.

105
00:04:57,830 --> 00:04:58,930
El primero es, la funcionalidad add_movie

106
00:04:58,930 --> 00:05:00,110
depende de algo dentro de esta funcin?

107
00:05:00,110 --> 00:05:04,490
Y la respuesta es no, porque, una vez que hemos llegado

108
00:05:04,490 --> 00:05:06,930
a este punto, user_input ya cumpli

109
00:05:08,246 --> 00:05:09,079
su propsito.

110
00:05:09,079 --> 00:05:10,450
As que la parte

111
00:05:10,450 --> 00:05:13,450
add_movie aqu de nuestro programa va a tratar de

112
00:05:14,700 --> 00:05:18,940
preguntarle al usuario qu es lo que quiere agregar, por ejemplo, el nombre

113
00:05:18,940 --> 00:05:20,930
de la pelcula, y va a

114
00:05:20,930 --> 00:05:24,900
tratar, de hecho, agregar la pelcula a lo que sea que somos

115
00:05:26,270 --> 00:05:28,210
vamos a almacenar nuestra pelcula

116
00:05:28,210 --> 00:05:30,170
As que podemos simplemente escribir, agregar guiones

117
00:05:30,170 --> 00:05:32,470
bajos, llamando a esta funcin que an no existe.

118
00:05:32,470 --> 00:05:36,080
Pero vamos a agregarlo ms adelante.

119
00:05:36,080 --> 00:05:38,640
Observe cmo ahora obtiene una lnea ondulada roja

120
00:05:38,640 --> 00:05:40,450
que dice referencia no resuelta porque

121
00:05:41,300 --> 00:05:43,720
esta cosa aqu que estamos usando no existe.

122
00:05:43,720 --> 00:05:45,200
Esto esta bien.

123
00:05:45,200 --> 00:05:48,600
Ahora sabemos que necesitamos agregar una funcin llamada add_movie que se

124
00:05:48,600 --> 00:05:50,320
ocupar de agregar la pelcula.

125
00:05:50,320 --> 00:05:54,720
Y eso es algo muy bueno de saber porque nuestro

126
00:05:54,720 --> 00:05:57,710
programa ahora est dividido en dos partes.

127
00:05:57,710 --> 00:05:59,420
El men y la funcin add_movie.

128
00:05:59,420 --> 00:06:03,010
Y haremos lo mismo para las otras funciones.

129
00:06:03,010 --> 00:06:05,180
Las otras piezas de funcionalidad.

130
00:06:05,180 --> 00:06:09,410
Entonces, si user_input es igual a l, vamos a mostrar pelculas.

131
00:06:09,410 --> 00:06:10,810
Si user_input es igual a f, vamos a encontrar la pelcula.

132
00:06:10,810 --> 00:06:15,750
Y, de lo contrario, simplemente no haremos nada.

133
00:06:17,070 --> 00:06:20,580
Si user_input es igual a q,

134
00:06:21,980 --> 00:06:26,980
podemos imprimir algo as como, "parar el programa".

135
00:06:27,960 --> 00:06:30,740
Bueno?

136
00:06:30,740 --> 00:06:33,410
Ahora, algo que puede notar al hacer

137
00:06:34,960 --> 00:06:35,793
esto, es

138
00:06:37,530 --> 00:06:40,420
que tenemos una instruccin if aqu, seguida de

139
00:06:40,420 --> 00:06:43,730
otra instruccin if, seguida de otra instruccin if, seguida

140
00:06:43,730 --> 00:06:44,870
de otra instruccin if.

141
00:06:44,870 --> 00:06:45,790
Entonces, tenemos cuatro ifs independientes.

142
00:06:45,790 --> 00:06:46,790
Recuerde, una sentencia

143
00:06:46,790 --> 00:06:49,940
if siempre es independiente de cualquier otra instruccin if,

144
00:06:49,940 --> 00:06:52,820
a menos que haga algo como elif o else.

145
00:06:52,820 --> 00:06:54,500
Y todas estas

146
00:06:54,500 --> 00:06:58,120
sentencias if van a ejecutarse una tras otra.

147
00:07:02,010 --> 00:07:04,360
Entonces, cuando el usuario digite, digamos, que lo

148
00:07:04,360 --> 00:07:05,820
primero que haremos es verificar

149
00:07:05,820 --> 00:07:08,140
si el user_input es a, cul ser.

150
00:07:09,100 --> 00:07:09,933
Entonces, ejecutaremos esta funcin una vez que la hayamos creado.

151
00:07:09,933 --> 00:07:12,790
Luego comprobaremos si user_input es l,

152
00:07:12,790 --> 00:07:15,770
que no puede ser porque era a.

153
00:07:15,770 --> 00:07:18,400
Entonces no correremos esto.

154
00:07:18,400 --> 00:07:20,630
Luego, comprobaremos si user_input fue f, que no

155
00:07:20,630 --> 00:07:22,190
puede ser porque era a.

156
00:07:22,190 --> 00:07:24,480
Y que no correremos esto.

157
00:07:24,480 --> 00:07:26,700
Luego, verificaremos si user_input fue q, lo cual

158
00:07:26,700 --> 00:07:28,300
no puede ser porque era

159
00:07:28,300 --> 00:07:30,050
a, y luego no lo imprimiremos.

160
00:07:30,050 --> 00:07:32,300
Entonces, como pueden ver, lo que estoy diciendo

161
00:07:32,300 --> 00:07:34,850
aqu es que todas estas declaraciones if estn relacionadas.

162
00:07:34,850 --> 00:07:36,140
Si uno de estos se ejecuta, los

163
00:07:36,140 --> 00:07:38,380
otros no pueden ejecutarse, porque user_input no puede ser a y l.

164
00:07:38,380 --> 00:07:42,430
Qu hacer es convertirlos en elifs.

165
00:07:42,430 --> 00:07:46,240
Ahora, cuando el usuario escribe a, vamos

166
00:07:46,240 --> 00:07:48,580
a agregar una nueva pelcula.

167
00:07:54,350 --> 00:07:56,650
Y luego queremos repetir todo

168
00:07:56,650 --> 00:07:58,200
esto y permitir

169
00:07:59,810 --> 00:08:04,260
al usuario escribir algo ms, como l, por ejemplo.

170
00:08:04,260 --> 00:08:07,600
Entonces queremos ejecutar todo de nuevo y pedirle al

171
00:08:07,600 --> 00:08:09,250
usuario que escriba algo ms.

172
00:08:09,250 --> 00:08:10,950
Y en ese punto, pueden

173
00:08:10,950 --> 00:08:13,060
escribir q y luego detendremos el programa.

174
00:08:13,060 --> 00:08:15,080
No les preguntaremos nada ms.

175
00:08:15,080 --> 00:08:16,680
Entonces, lo que estoy diciendo aqu es

176
00:08:16,680 --> 00:08:18,860
que es necesario que haya un bucle que repita

177
00:08:18,860 --> 00:08:21,490
esto una y otra vez hasta que el usuario escriba q.

178
00:08:21,490 --> 00:08:24,150
Entonces, cmo vamos a hacer eso?

179
00:08:24,150 --> 00:08:26,040
Bueno, creo que lo

180
00:08:27,420 --> 00:08:29,590
mejor sera agregar un bucle

181
00:08:29,590 --> 00:08:31,770
while que dice que mientras

182
00:08:31,770 --> 00:08:36,170
user_input no es q, lo ejecutaremos y tan pronto

183
00:08:36,170 --> 00:08:39,730
como user_input sea q, dejaremos de funcionar.

184
00:08:39,730 --> 00:08:41,750
Por supuesto, estas cosas tienen que estar ms sangradas, de modo que ponemos

185
00:08:41,750 --> 00:08:42,870
todo esto dentro de este ciclo aqu.

186
00:08:43,990 --> 00:08:46,530
Pero fjate, es algo que probablemente no

187
00:08:47,450 --> 00:08:52,450
notars hasta que realmente ejecutes la aplicacin a menos que hayas hecho esto algunas

188
00:08:56,030 --> 00:08:57,910
veces, que la entrada de

189
00:08:57,910 --> 00:09:00,420
usuario se solicite al inicio de la

190
00:09:00,420 --> 00:09:02,320
funcin, pero no dentro del ciclo.

191
00:09:02,320 --> 00:09:07,020
As que le pediremos al usuario su entrada y luego continuaremos

192
00:09:07,020 --> 00:09:08,960
ejecutando esto interminablemente sin

193
00:09:09,940 --> 00:09:12,960
pedirle al usuario que ingrese nuevamente porque

194
00:09:12,960 --> 00:09:16,400
esta lnea de entrada est fuera del ciclo.

195
00:09:16,400 --> 00:09:18,890
Entonces, lo que queremos hacer es asegurarnos

196
00:09:18,890 --> 00:09:22,150
de que esta lnea tambin est en el ciclo.

197
00:09:22,150 --> 00:09:24,620
Y lo que vamos a hacer es simplemente, obtenerlo todo,

198
00:09:24,620 --> 00:09:26,350
copiarlo y ponerlo al final del ciclo.

199
00:09:26,350 --> 00:09:30,050
La razn por la que lo estoy poniendo al final y no al principio es que,

200
00:09:30,050 --> 00:09:31,980
si lo puse al principio, le pediremos al

201
00:09:32,930 --> 00:09:35,140
usuario que nos d su opinin y luego, tan

202
00:09:35,140 --> 00:09:37,550
pronto como entremos en el ciclo, le pediremos el usuario

203
00:09:37,550 --> 00:09:38,810
volver a ingresar, lo cual

204
00:09:38,810 --> 00:09:40,160
ser ligeramente extrao para el usuario.

205
00:09:40,160 --> 00:09:41,810
Bueno?

206
00:09:41,810 --> 00:09:45,670
Y esto nos hace darnos cuenta de que si el usuario escribe q para empezar,

207
00:09:47,120 --> 00:09:48,250
este ciclo no se

208
00:09:48,250 --> 00:09:50,140
ejecutar porque q ser igual a q.

209
00:09:51,340 --> 00:09:53,740
Entonces nada aqu se ejecutar.

210
00:09:54,630 --> 00:09:59,630
Si el usuario escribe a, entraremos aqu y agregaremos una nueva pelcula.

211
00:09:59,630 --> 00:10:00,880
Luego, les volveremos a preguntar y digamos que escriben q.

212
00:10:02,150 --> 00:10:07,150
Luego, el ciclo dejar de ejecutarse porque volveremos a la parte superior, lo

213
00:10:07,200 --> 00:10:10,040
comprobaremos y ser falso, por lo que

214
00:10:11,180 --> 00:10:12,450
se detendr y

215
00:10:12,450 --> 00:10:13,570
continuar al final.

216
00:10:13,570 --> 00:10:17,390
Entonces nunca vamos a entrar en esta declaracin if.

217
00:10:17,390 --> 00:10:19,890
Eso es lo que estoy diciendo.

218
00:10:20,900 --> 00:10:23,300
Porque si el user_input es q en cualquier punto,

219
00:10:23,300 --> 00:10:24,770
este bucle no se ejecutar.

220
00:10:24,770 --> 00:10:28,010
Entonces, podemos deshacernos de eso.

221
00:10:28,010 --> 00:10:29,670
Sin embargo, algo que tal vez deseemos usar

222
00:10:30,580 --> 00:10:32,080
es otro aqu que dice imprimir algo

223
00:10:33,570 --> 00:10:35,700
as como un comando desconocido, por favor intente de nuevo.

224
00:10:35,700 --> 00:10:39,840
Podemos imprimir eso y luego el

225
00:10:39,840 --> 00:10:44,840
usuario lo sabe, "Oye, no estamos jugando.

226
00:10:46,320 --> 00:10:48,750
"Solo puede ingresar lo que le hemos dicho que puede ingresar. "

227
00:10:48,750 --> 00:10:50,100
Bueno?

228
00:10:50,100 --> 00:10:52,520
Ahora este es nuestro men y podemos ejecutar nuestra

229
00:10:53,500 --> 00:10:54,333
funcin de men si lo elegimos. ,

230
00:10:55,540 --> 00:10:59,390
Y observe cmo, una vez ms, obtenemos este PEP 8, y dice, "espera, "entonces tenemos que poner dos lneas en

231
00:10:59,390 --> 00:11:00,490
dos lneas en blanco". blanco all. Y luego todava obtenemos

232
00:11:01,340 --> 00:11:05,730
una pequea lnea ondulada y dice: "No hay una nueva lnea al final del archivo". "Entonces, quiere una lnea vaca al final

233
00:11:05,730 --> 00:11:08,000
del archivo.

234
00:11:08,000 --> 00:11:10,230
Y una vez que lo pones, desaparecen todas las lneas onduladas.

235
00:11:10,230 --> 00:11:13,040
Ahora solo tenemos tres lneas onduladas que son rojas y nos dice que nuestras funciones

236
00:11:13,040 --> 00:11:14,790
an no se han definido.

237
00:11:14,790 --> 00:11:17,580
Vamos a ejecutar nuestra aplicacin, primero que nada, para

238
00:11:17,580 --> 00:11:20,330
ver cmo nos est yendo, y luego, podemos continuar

239
00:11:20,330 --> 00:11:23,080
en el prximo video con las otras cosas.

240
00:11:23,080 --> 00:11:26,100
Asegrate de llamar a tu funcin de men.

241
00:11:26,100 --> 00:11:29,860
Luego ve y haz clic derecho en la aplicacin y presiona Run.

242
00:11:29,860 --> 00:11:31,530
Entonces obtendrs esto aqu, y s

243
00:11:31,530 --> 00:11:33,090
que es un poco pequeo.

244
00:11:33,090 --> 00:11:35,910
Voy a hacer zoom cuando estoy editando el video.

245
00:11:35,910 --> 00:11:39,070
Y tiene, "Ingrese 'a' para agregar una pelcula, '' l 'para ver sus pelculas,'

246
00:11:40,810 --> 00:11:41,960
f 'para buscar una pelcula"

247
00:11:41,960 --> 00:11:42,830
y' q 'para salir. "Entonces,

248
00:11:42,830 --> 00:11:45,534
podemos escribir algo como a.

249
00:11:45,534 --> 00:11:47,900
Qu crees que va a pasar cuando hacemos eso?

250
00:11:47,900 --> 00:11:49,540
Estoy seguro de que lo tienes.

251
00:11:49,540 --> 00:11:51,300
Probablemente tendremos algn tipo de error, verdad?

252
00:11:51,300 --> 00:11:54,010
porque no hemos definido add_movie.

253
00:11:54,010 --> 00:11:56,460
Y eso es correcto

254
00:12:00,060 --> 00:12:00,893
Obtenemos un NameError

255
00:12:00,893 --> 00:12:02,680
que dice, "nombre 'add_movie' no est definido. "As que has usado

256
00:12:02,680 --> 00:12:05,010
esto aqu, pero no existe.

257
00:12:06,100 --> 00:12:06,933
Entonces, est bien, est bien.

258
00:12:06,933 --> 00:12:08,440
Eso es lo esperado.

259
00:12:08,440 --> 00:12:10,130
Observe cmo nuestro programa se detuvo por completo.

260
00:12:10,130 --> 00:12:12,940
Salimos del ciclo while.

261
00:12:12,940 --> 00:12:13,930
Todo se volvi loco.

262
00:12:13,930 --> 00:12:15,460
Nuestro programa se bloque, esencialmente.

263
00:12:15,460 --> 00:12:17,790
No es bueno.

264
00:12:17,790 --> 00:12:19,260
Tendremos que definir esa funcin ms adelante.

265
00:12:19,260 --> 00:12:21,060
Vamos a ejecutarlo de nuevo y luego tecleamos q.

266
00:12:21,060 --> 00:12:23,130
Entonces el programa acaba de terminar, est bien?

267
00:12:23,130 --> 00:12:23,963
Si lo desea, sintase libre

268
00:12:23,963 --> 00:12:25,840
de, despus del ciclo while, agregar una declaracin if, o antes

269
00:12:25,840 --> 00:12:28,420
del ciclo while que dice, si ha tipeado q, salga del programa o algo.

270
00:12:30,450 --> 00:12:32,990
Sintase libre de jugar con este cdigo.

271
00:12:34,460 --> 00:12:36,890
Esta va a ser tu aplicacin.

272
00:12:36,890 --> 00:12:39,140
Por lo tanto, sintase libre de agregar cualquier funcionalidad que desee.

273
00:12:40,400 --> 00:12:44,590
Y, por supuesto, si an no ha intentado desarrollar este programa

274
00:12:44,590 --> 00:12:47,390
por su cuenta y siente que ahora

275
00:12:47,390 --> 00:12:48,790
es ms capaz de

276
00:12:48,790 --> 00:12:51,230
hacerlo, por favor, antes de pasar

277
00:12:51,230 --> 00:12:53,960
al siguiente video, intente escribir todo esto

278
00:12:53,960 --> 00:12:55,910
y continuar desarrollando estas tres funciones.

279
00:12:55,910 --> 00:12:59,140
Una vez ms, al hacer esto usted

280
00:12:59,140 --> 00:13:02,470
mismo, es la mejor manera de aprender.

281
00:13:02,470 --> 00:13:05,350
Entonces, si puedes desarrollarlo t mismo, hazlo.

282
00:13:05,350 --> 00:13:07,980
Y luego puede pasar al siguiente video y comprobar

283
00:13:07,980 --> 00:13:09,640
cmo lo hemos hecho aqu.

284
00:13:09,640 --> 00:13:11,500
Entonces eso es todo por este video.

285
00:13:11,500 --> 00:13:13,840
Te ver en el prximo.

286
00:13:13,840 --> 00:13:16,160
&nbsp;

287
00:13:16,160 --> 00:13:18,210
&nbsp;

288
00:13:19,330 --> 00:13:20,670
&nbsp;

289
00:13:20,670 --> 00:13:22,080
&nbsp;

