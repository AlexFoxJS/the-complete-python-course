1
00:00:00,211 --> 00:00:02,241
Jos: Hola y bienvenido de nuevo.

2
00:00:02,241 --> 00:00:06,309
En este video vamos a hablar sobre Binary Search.

3
00:00:06,309 --> 00:00:09,115
Comencemos mirando la lista que tenamos

4
00:00:09,115 --> 00:00:11,367
en el ltimo video.

5
00:00:11,367 --> 00:00:13,239
Aqu tenemos un montn de

6
00:00:13,239 --> 00:00:16,617
nmeros, y como saben, si queremos encontrar un nmero

7
00:00:16,617 --> 00:00:19,415
especfico como 90, que est cerca del

8
00:00:19,415 --> 00:00:21,431
final, tenemos que empezar desde

9
00:00:21,431 --> 00:00:25,884
el principio y revisar cada nmero hasta que podamos llegar a 90.

10
00:00:25,884 --> 00:00:30,498
Sin embargo, hay formas de ser ms eficientes en

11
00:00:30,498 --> 00:00:33,606
la bsqueda de un nmero especfico.

12
00:00:33,606 --> 00:00:36,274
Si ordenamos primero la lista, que

13
00:00:36,274 --> 00:00:38,966
hay varias formas de ordenar, algunas

14
00:00:38,966 --> 00:00:41,032
son ms rpidas que otras,

15
00:00:41,032 --> 00:00:45,028
y le ensear a ordenar una lista ms adelante.

16
00:00:45,028 --> 00:00:48,864
Pero, si ordena la lista ahora, es mucho ms

17
00:00:48,864 --> 00:00:50,031
fcil encontrar cosas.

18
00:00:52,251 --> 00:00:55,012
De la misma manera que si tienes

19
00:00:55,012 --> 00:00:58,690
un diccionario, no comienzas en A y terminas en Zed.

20
00:00:58,690 --> 00:01:02,462
Por ejemplo, si ests buscando xilfono,

21
00:01:02,462 --> 00:01:05,777
comenzaras cerca del final porque

22
00:01:05,777 --> 00:01:08,385
sabras que est ordenado alfabticamente.

23
00:01:08,385 --> 00:01:10,923
Cuando se ordenan sus listas y

24
00:01:10,923 --> 00:01:14,607
sus colecciones, es mucho ms fcil encontrar las cosas.

25
00:01:14,607 --> 00:01:17,104
Sin embargo, es importante decir que el

26
00:01:17,104 --> 00:01:20,104
hecho de que la lista est ordenada no significa

27
00:01:20,104 --> 00:01:22,260
que automticamente las bsquedas sern ms

28
00:01:22,260 --> 00:01:25,246
eficientes o la complejidad de las mismas ser menor.

29
00:01:25,246 --> 00:01:28,079
Encontrar secuencialmente sigue siendo O-N.

30
00:01:29,060 --> 00:01:32,192
Si desea encontrar 90, an debe comenzar desde

31
00:01:32,192 --> 00:01:34,474
el principio y examinar cada elemento,

32
00:01:34,474 --> 00:01:36,676
si lo encuentra de forma secuencial.

33
00:01:36,676 --> 00:01:40,176
Entonces, busquemos en cambio de una manera diferente.

34
00:01:41,311 --> 00:01:43,482
Exploremos una forma diferente de

35
00:01:43,482 --> 00:01:46,899
buscar y encontrar un elemento que no sea secuencial.

36
00:01:47,940 --> 00:01:51,324
Recuerde que un aspecto importante de las listas

37
00:01:51,324 --> 00:01:54,207
es que puede acceder a cualquier elemento,

38
00:01:54,207 --> 00:01:56,389
no tiene que ser el primero.

39
00:01:56,389 --> 00:01:58,411
Entonces puede acceder al ltimo elemento

40
00:01:58,411 --> 00:02:01,507
o un elemento en el medio si lo desea.

41
00:02:01,507 --> 00:02:06,278
As que busquemos 90 con un algoritmo ligeramente diferente.

42
00:02:06,278 --> 00:02:08,534
En lugar de comenzar en el

43
00:02:08,534 --> 00:02:11,605
primer elemento, vamos a comenzar en el elemento medio.

44
00:02:11,605 --> 00:02:14,499
El elemento medio en esta lista es 38,

45
00:02:14,499 --> 00:02:17,268
que es el nmero de ndice 10.

46
00:02:17,268 --> 00:02:19,325
Entonces, en este algoritmo, lo que

47
00:02:19,325 --> 00:02:21,845
vamos a hacer es preguntar: "90 es

48
00:02:21,845 --> 00:02:24,614
mayor que 38? "As que de nuevo

49
00:02:24,614 --> 00:02:27,266
estamos buscando 90 y nos estamos preguntando"

50
00:02:27,266 --> 00:02:30,802
90 es mayor que 38? "La respuesta es s,

51
00:02:30,802 --> 00:02:33,971
por lo que vamos a descartar todos los

52
00:02:33,971 --> 00:02:37,623
valores ms bajos, todos los valores que sean inferiores

53
00:02:37,623 --> 00:02:39,793
o iguales a 38 descartamos.

54
00:02:39,793 --> 00:02:41,893
Solo vamos a mantener los valores que

55
00:02:41,893 --> 00:02:43,226
son mayores a 38.

56
00:02:44,699 --> 00:02:45,625
Por qu?

57
00:02:45,625 --> 00:02:47,635
Porque sabemos que la lista est ordenada,

58
00:02:47,635 --> 00:02:52,234
por lo que cualquier valor que est a la izquierda va a ser menor que

59
00:02:52,234 --> 00:02:53,567
el valor que estamos

60
00:02:53,567 --> 00:02:55,251
buscando, as que no tenemos que

61
00:02:55,251 --> 00:02:58,170
preocuparnos por ellos, ni siquiera tenemos que buscar .

62
00:02:58,170 --> 00:03:00,864
Vamos a atenuarlos para sealar que

63
00:03:00,864 --> 00:03:02,569
hemos olvidado esos valores.

64
00:03:02,569 --> 00:03:05,784
Los hemos eliminado, no vamos a buscar all.

65
00:03:05,784 --> 00:03:09,027
Luego, nos moveremos al siguiente

66
00:03:09,027 --> 00:03:10,548
elemento intermedio de

67
00:03:10,548 --> 00:03:12,399
lo que queda.

68
00:03:12,399 --> 00:03:14,671
Tenga en cuenta que la divisin de enteros

69
00:03:14,671 --> 00:03:17,145
no se redondea, as que aqu terminamos con cuatro

70
00:03:17,145 --> 00:03:19,728
elementos a la izquierda y cinco elementos a la

71
00:03:20,792 --> 00:03:23,345
derecha, que es un pequeo problema en este caso,

72
00:03:23,345 --> 00:03:25,317
va a hacer las cosas un poco

73
00:03:25,317 --> 00:03:28,292
ms lentas para nosotros, pero no obstante terminamos en 59.

74
00:03:28,292 --> 00:03:29,889
Entonces, de nuevo, hacemos la misma pregunta:

75
00:03:29,889 --> 00:03:32,146
"90 es mayor que 59? "La respuesta

76
00:03:32,146 --> 00:03:37,146
es s, as que descartamos nuevamente todos los valores ms bajos.

77
00:03:37,543 --> 00:03:40,754
59 y hacia abajo podemos descartar porque sabemos que 90

78
00:03:40,754 --> 00:03:42,921
no est en ninguno de esos.

79
00:03:44,098 --> 00:03:47,523
Nuevamente buscamos 90 movindonos al siguiente elemento

80
00:03:47,523 --> 00:03:50,009
medio de lo que queda.

81
00:03:50,009 --> 00:03:53,099
Ahora estamos en siete-uno-siete.

82
00:03:53,099 --> 00:03:55,716
Una vez ms, se hace la misma pregunta: "90 es

83
00:03:55,716 --> 00:03:58,568
mayor que siete y uno? "La respuesta esta vez

84
00:03:58,568 --> 00:04:01,621
es no, es menos de siete-uno-siete, as que

85
00:04:01,621 --> 00:04:05,003
vamos a descartar todos los valores correctos de

86
00:04:05,003 --> 00:04:06,008
todos los valores

87
00:04:06,008 --> 00:04:07,946
ms altos, los descartaremos.

88
00:04:07,946 --> 00:04:10,921
Fjate ahora cmo nos quedan dos valores, y

89
00:04:10,921 --> 00:04:13,671
el siguiente salto nos lleva a 90.

90
00:04:15,526 --> 00:04:18,726
Porque, una vez ms, no redondeamos as que

91
00:04:18,726 --> 00:04:23,301
dos divididos por dos es uno, por lo que nos lleva

92
00:04:23,301 --> 00:04:24,884
a este ndice aqu,

93
00:04:25,735 --> 00:04:29,061
y nos preguntamos nuevamente, "90 es igual a

94
00:04:29,061 --> 00:04:30,728
90? "Y, decimos

95
00:04:31,652 --> 00:04:35,001
que s, as que lo encontramos.

96
00:04:35,001 --> 00:04:38,918
Ahora encontramos 90 y solo nos llev cuatro saltos.

97
00:04:40,206 --> 00:04:41,893
Si hubiramos hecho esto

98
00:04:41,893 --> 00:04:44,476
secuencialmente, nos habra llevado 17 saltos.

99
00:04:45,889 --> 00:04:48,972
Entonces, creo que esto es mucho ms rpido, y

100
00:04:49,927 --> 00:04:53,629
sucede que el log dos de 21, que es el nmero

101
00:04:53,629 --> 00:04:55,585
de elementos en esta lista, es

102
00:04:55,585 --> 00:04:57,752
igual a cuatro puntos 39.

103
00:04:58,897 --> 00:05:02,222
Lo que significa que este tipo de bsqueda que hemos

104
00:05:02,222 --> 00:05:05,699
realizado, que se llama bsqueda binaria es en realidad oh

105
00:05:05,699 --> 00:05:07,032
de log dos n.

106
00:05:07,922 --> 00:05:10,339
Lo que significa hasta cinco saltos.

107
00:05:11,644 --> 00:05:13,179
Aqu hicimos cuatro

108
00:05:13,179 --> 00:05:14,767
saltos, si hubiramos

109
00:05:14,767 --> 00:05:17,997
estado buscando 95, nos habra llevado cinco saltos.

110
00:05:17,997 --> 00:05:22,543
Ahora, lo que hemos visto aqu es una bsqueda binaria.

111
00:05:22,543 --> 00:05:25,623
Una bsqueda binaria funciona, en cada salto,

112
00:05:25,623 --> 00:05:29,683
tomando una decisin que le deja una de dos opciones.

113
00:05:29,683 --> 00:05:31,433
Ve a la derecha o ve a la izquierda.

114
00:05:33,456 --> 00:05:35,206
Ve a la derecha o ve a la izquierda.

115
00:05:37,303 --> 00:05:40,390
Esta bsqueda binaria significa que, en cada

116
00:05:40,390 --> 00:05:43,160
salto, se est deshaciendo de la

117
00:05:43,160 --> 00:05:46,704
mitad o aproximadamente la mitad de los elementos restantes.

118
00:05:46,704 --> 00:05:51,213
Por eso esta es una complejidad logartmica.

119
00:05:51,213 --> 00:05:54,403
La complejidad es oh de log dos n,

120
00:05:54,403 --> 00:05:56,903
que es mucho mejor que O-N.

121
00:05:58,058 --> 00:06:02,984
De hecho, es un exponencial inverso en complejidad, que es

122
00:06:02,984 --> 00:06:04,734
mucho ms rpido.

123
00:06:05,981 --> 00:06:09,534
Este tipo de bsqueda es uno de los muchos algoritmos

124
00:06:09,534 --> 00:06:11,618
de bsqueda que te animo a

125
00:06:11,618 --> 00:06:13,427
que estudies si ests interesado.

126
00:06:13,427 --> 00:06:16,713
Si no, simplemente sepa que hay formas de

127
00:06:16,713 --> 00:06:18,238
mejorar los algoritmos existentes.

128
00:06:18,238 --> 00:06:22,723
La bsqueda secuencial puede mejorarse mediante la bsqueda binaria, y

129
00:06:22,723 --> 00:06:26,473
como tal, este tema de tipo de rendimiento de

130
00:06:27,399 --> 00:06:30,482
la informtica es un rea bastante importante.

131
00:06:31,539 --> 00:06:33,450
Ahora, en los prximos videos

132
00:06:33,450 --> 00:06:37,278
vamos a ver cmo podemos realizar bsquedas binarias en una

133
00:06:37,278 --> 00:06:40,699
estructura ligeramente diferente que no es una lista.

134
00:06:40,699 --> 00:06:43,282
Te ver en el prximo video.

